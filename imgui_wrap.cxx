/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.2.1
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

// source: imgui.i


extern
#ifdef __cplusplus
  "C"
#endif
  void cgo_panic__imgui_568d46c1e1b4102a(const char*);
static void _swig_gopanic(const char *p) {
  cgo_panic__imgui_568d46c1e1b4102a(p);
}



#define SWIG_VERSION 0x040201
#define SWIGGO
#define SWIGMODULE imgui
/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__))
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__))
# else
#   define SWIGUNUSED
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if defined(__GNUC__)
#  if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#    ifndef GCC_HASCLASSVISIBILITY
#      define GCC_HASCLASSVISIBILITY
#    endif
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif

/* Deal with Apple's deprecated 'AssertMacros.h' from Carbon-framework */
#if defined(__APPLE__) && !defined(__ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES)
# define __ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES 0
#endif

/* Intel's compiler complains if a variable which was never initialised is
 * cast to void, which is a common idiom which we use to indicate that we
 * are aware a variable isn't used.  So we just silence that warning.
 * See: https://github.com/swig/swig/issues/192 for more discussion.
 */
#ifdef __INTEL_COMPILER
# pragma warning disable 592
#endif

#if defined(__cplusplus) && __cplusplus >=201103L
# define SWIG_NULLPTR nullptr
#else
# define SWIG_NULLPTR NULL
#endif 

/* -----------------------------------------------------------------------------
 * swigcompat.swg
 *
 * Macros to provide support compatibility with older C and C++ standards.
 * ----------------------------------------------------------------------------- */

/* C99 and C++11 should provide snprintf, but define SWIG_NO_SNPRINTF
 * if you're missing it.
 */
#if ((defined __STDC_VERSION__ && __STDC_VERSION__ >= 199901L) || \
     (defined __cplusplus && __cplusplus >= 201103L) || \
     defined SWIG_HAVE_SNPRINTF) && \
    !defined SWIG_NO_SNPRINTF
# define SWIG_snprintf(O,S,F,A) snprintf(O,S,F,A)
# define SWIG_snprintf2(O,S,F,A,B) snprintf(O,S,F,A,B)
#else
/* Fallback versions ignore the buffer size, but most of our uses either have a
 * fixed maximum possible size or dynamically allocate a buffer that's large
 * enough.
 */
# define SWIG_snprintf(O,S,F,A) sprintf(O,F,A)
# define SWIG_snprintf2(O,S,F,A,B) sprintf(O,F,A,B)
#endif


#include <stddef.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sys/types.h>



typedef long long intgo;
typedef unsigned long long uintgo;


# if !defined(__clang__) && (defined(__i386__) || defined(__x86_64__))
#   define SWIGSTRUCTPACKED __attribute__((__packed__, __gcc_struct__))
# else
#   define SWIGSTRUCTPACKED __attribute__((__packed__))
# endif



typedef struct { char *p; intgo n; } _gostring_;
typedef struct { void* array; intgo len; intgo cap; } _goslice_;



static _gostring_ Swig_AllocateString(const char *p, size_t l) {
  _gostring_ ret;
  ret.p = (char*)malloc(l);
  memcpy(ret.p, p, l);
  ret.n = l;
  return ret;
}


#ifdef __cplusplus
#include <utility>
/* SwigValueWrapper is described in swig.swg */
template<typename T> class SwigValueWrapper {
  struct SwigSmartPointer {
    T *ptr;
    SwigSmartPointer(T *p) : ptr(p) { }
    ~SwigSmartPointer() { delete ptr; }
    SwigSmartPointer& operator=(SwigSmartPointer& rhs) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = rhs.ptr; rhs.ptr = 0; return *this; }
    void reset(T *p) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = p; }
  } pointer;
  SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
  SwigValueWrapper(const SwigValueWrapper<T>& rhs);
public:
  SwigValueWrapper() : pointer(0) { }
  SwigValueWrapper& operator=(const T& t) { SwigSmartPointer tmp(new T(t)); pointer = tmp; return *this; }
#if __cplusplus >=201103L
  SwigValueWrapper& operator=(T&& t) { SwigSmartPointer tmp(new T(std::move(t))); pointer = tmp; return *this; }
  operator T&&() const { return std::move(*pointer.ptr); }
#else
  operator T&() const { return *pointer.ptr; }
#endif
  T *operator&() const { return pointer.ptr; }
  static void reset(SwigValueWrapper& t, T *p) { t.pointer.reset(p); }
};

/*
 * SwigValueInit() is a generic initialisation solution as the following approach:
 * 
 *       T c_result = T();
 * 
 * doesn't compile for all types for example:
 * 
 *       unsigned int c_result = unsigned int();
 */
template <typename T> T SwigValueInit() {
  return T();
}

#if __cplusplus >=201103L
# define SWIG_STD_MOVE(OBJ) std::move(OBJ)
#else
# define SWIG_STD_MOVE(OBJ) OBJ
#endif

#endif


static void Swig_free(void* p) {
  free(p);
}

static void* Swig_malloc(int c) {
  return malloc(c);
}


#include "imgui.h"
#include "imgui_impl_opengl3.h"
#include "imgui_impl_glfw.h"


#include <string.h>

#ifdef __cplusplus
extern "C" {
#endif

void _wrap_Swig_free_imgui_568d46c1e1b4102a(void *_swig_go_0) {
  void *arg1 = (void *) 0 ;
  
  arg1 = *(void **)&_swig_go_0; 
  
  Swig_free(arg1);
  
}


void *_wrap_Swig_malloc_imgui_568d46c1e1b4102a(intgo _swig_go_0) {
  int arg1 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  
  result = (void *)Swig_malloc(arg1);
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


void _wrap_ImVec2_x_set_imgui_568d46c1e1b4102a(ImVec2 *_swig_go_0, float _swig_go_1) {
  ImVec2 *arg1 = (ImVec2 *) 0 ;
  float arg2 ;
  
  arg1 = *(ImVec2 **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->x = arg2;
  
}


float _wrap_ImVec2_x_get_imgui_568d46c1e1b4102a(ImVec2 *_swig_go_0) {
  ImVec2 *arg1 = (ImVec2 *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(ImVec2 **)&_swig_go_0; 
  
  result = (float) ((arg1)->x);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImVec2_y_set_imgui_568d46c1e1b4102a(ImVec2 *_swig_go_0, float _swig_go_1) {
  ImVec2 *arg1 = (ImVec2 *) 0 ;
  float arg2 ;
  
  arg1 = *(ImVec2 **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->y = arg2;
  
}


float _wrap_ImVec2_y_get_imgui_568d46c1e1b4102a(ImVec2 *_swig_go_0) {
  ImVec2 *arg1 = (ImVec2 *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(ImVec2 **)&_swig_go_0; 
  
  result = (float) ((arg1)->y);
  _swig_go_result = result; 
  return _swig_go_result;
}


ImVec2 *_wrap_new_ImVec2__SWIG_0_imgui_568d46c1e1b4102a() {
  ImVec2 *result = 0 ;
  ImVec2 *_swig_go_result;
  
  
  result = (ImVec2 *)new ImVec2();
  *(ImVec2 **)&_swig_go_result = (ImVec2 *)result; 
  return _swig_go_result;
}


ImVec2 *_wrap_new_ImVec2__SWIG_1_imgui_568d46c1e1b4102a(float _swig_go_0, float _swig_go_1) {
  float arg1 ;
  float arg2 ;
  ImVec2 *result = 0 ;
  ImVec2 *_swig_go_result;
  
  arg1 = (float)_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  result = (ImVec2 *)new ImVec2(arg1,arg2);
  *(ImVec2 **)&_swig_go_result = (ImVec2 *)result; 
  return _swig_go_result;
}


void _wrap_delete_ImVec2_imgui_568d46c1e1b4102a(ImVec2 *_swig_go_0) {
  ImVec2 *arg1 = (ImVec2 *) 0 ;
  
  arg1 = *(ImVec2 **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_ImVec4_x_set_imgui_568d46c1e1b4102a(ImVec4 *_swig_go_0, float _swig_go_1) {
  ImVec4 *arg1 = (ImVec4 *) 0 ;
  float arg2 ;
  
  arg1 = *(ImVec4 **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->x = arg2;
  
}


float _wrap_ImVec4_x_get_imgui_568d46c1e1b4102a(ImVec4 *_swig_go_0) {
  ImVec4 *arg1 = (ImVec4 *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(ImVec4 **)&_swig_go_0; 
  
  result = (float) ((arg1)->x);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImVec4_y_set_imgui_568d46c1e1b4102a(ImVec4 *_swig_go_0, float _swig_go_1) {
  ImVec4 *arg1 = (ImVec4 *) 0 ;
  float arg2 ;
  
  arg1 = *(ImVec4 **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->y = arg2;
  
}


float _wrap_ImVec4_y_get_imgui_568d46c1e1b4102a(ImVec4 *_swig_go_0) {
  ImVec4 *arg1 = (ImVec4 *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(ImVec4 **)&_swig_go_0; 
  
  result = (float) ((arg1)->y);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImVec4_z_set_imgui_568d46c1e1b4102a(ImVec4 *_swig_go_0, float _swig_go_1) {
  ImVec4 *arg1 = (ImVec4 *) 0 ;
  float arg2 ;
  
  arg1 = *(ImVec4 **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->z = arg2;
  
}


float _wrap_ImVec4_z_get_imgui_568d46c1e1b4102a(ImVec4 *_swig_go_0) {
  ImVec4 *arg1 = (ImVec4 *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(ImVec4 **)&_swig_go_0; 
  
  result = (float) ((arg1)->z);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImVec4_w_set_imgui_568d46c1e1b4102a(ImVec4 *_swig_go_0, float _swig_go_1) {
  ImVec4 *arg1 = (ImVec4 *) 0 ;
  float arg2 ;
  
  arg1 = *(ImVec4 **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->w = arg2;
  
}


float _wrap_ImVec4_w_get_imgui_568d46c1e1b4102a(ImVec4 *_swig_go_0) {
  ImVec4 *arg1 = (ImVec4 *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(ImVec4 **)&_swig_go_0; 
  
  result = (float) ((arg1)->w);
  _swig_go_result = result; 
  return _swig_go_result;
}


ImVec4 *_wrap_new_ImVec4__SWIG_0_imgui_568d46c1e1b4102a() {
  ImVec4 *result = 0 ;
  ImVec4 *_swig_go_result;
  
  
  result = (ImVec4 *)new ImVec4();
  *(ImVec4 **)&_swig_go_result = (ImVec4 *)result; 
  return _swig_go_result;
}


ImVec4 *_wrap_new_ImVec4__SWIG_1_imgui_568d46c1e1b4102a(float _swig_go_0, float _swig_go_1, float _swig_go_2, float _swig_go_3) {
  float arg1 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  ImVec4 *result = 0 ;
  ImVec4 *_swig_go_result;
  
  arg1 = (float)_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  arg4 = (float)_swig_go_3; 
  
  result = (ImVec4 *)new ImVec4(arg1,arg2,arg3,arg4);
  *(ImVec4 **)&_swig_go_result = (ImVec4 *)result; 
  return _swig_go_result;
}


void _wrap_delete_ImVec4_imgui_568d46c1e1b4102a(ImVec4 *_swig_go_0) {
  ImVec4 *arg1 = (ImVec4 *) 0 ;
  
  arg1 = *(ImVec4 **)&_swig_go_0; 
  
  delete arg1;
  
}


ImGuiContext *_wrap_CreateContext__SWIG_0_imgui_568d46c1e1b4102a(ImFontAtlas *_swig_go_0) {
  ImFontAtlas *arg1 = (ImFontAtlas *) 0 ;
  ImGuiContext *result = 0 ;
  ImGuiContext *_swig_go_result;
  
  arg1 = *(ImFontAtlas **)&_swig_go_0; 
  
  result = (ImGuiContext *)ImGui::CreateContext(arg1);
  *(ImGuiContext **)&_swig_go_result = (ImGuiContext *)result; 
  return _swig_go_result;
}


ImGuiContext *_wrap_CreateContext__SWIG_1_imgui_568d46c1e1b4102a() {
  ImGuiContext *result = 0 ;
  ImGuiContext *_swig_go_result;
  
  
  result = (ImGuiContext *)ImGui::CreateContext();
  *(ImGuiContext **)&_swig_go_result = (ImGuiContext *)result; 
  return _swig_go_result;
}


void _wrap_DestroyContext__SWIG_0_imgui_568d46c1e1b4102a(ImGuiContext *_swig_go_0) {
  ImGuiContext *arg1 = (ImGuiContext *) 0 ;
  
  arg1 = *(ImGuiContext **)&_swig_go_0; 
  
  ImGui::DestroyContext(arg1);
  
}


void _wrap_DestroyContext__SWIG_1_imgui_568d46c1e1b4102a() {
  ImGui::DestroyContext();
  
}


ImGuiContext *_wrap_GetCurrentContext_imgui_568d46c1e1b4102a() {
  ImGuiContext *result = 0 ;
  ImGuiContext *_swig_go_result;
  
  
  result = (ImGuiContext *)ImGui::GetCurrentContext();
  *(ImGuiContext **)&_swig_go_result = (ImGuiContext *)result; 
  return _swig_go_result;
}


void _wrap_SetCurrentContext_imgui_568d46c1e1b4102a(ImGuiContext *_swig_go_0) {
  ImGuiContext *arg1 = (ImGuiContext *) 0 ;
  
  arg1 = *(ImGuiContext **)&_swig_go_0; 
  
  ImGui::SetCurrentContext(arg1);
  
}


ImGuiIO *_wrap_GetIO_imgui_568d46c1e1b4102a() {
  ImGuiIO *result = 0 ;
  ImGuiIO *_swig_go_result;
  
  
  result = (ImGuiIO *) &ImGui::GetIO();
  *(ImGuiIO **)&_swig_go_result = result; 
  return _swig_go_result;
}


ImGuiPlatformIO *_wrap_GetPlatformIO_imgui_568d46c1e1b4102a() {
  ImGuiPlatformIO *result = 0 ;
  ImGuiPlatformIO *_swig_go_result;
  
  
  result = (ImGuiPlatformIO *) &ImGui::GetPlatformIO();
  *(ImGuiPlatformIO **)&_swig_go_result = result; 
  return _swig_go_result;
}


ImGuiStyle *_wrap_GetStyle_imgui_568d46c1e1b4102a() {
  ImGuiStyle *result = 0 ;
  ImGuiStyle *_swig_go_result;
  
  
  result = (ImGuiStyle *) &ImGui::GetStyle();
  *(ImGuiStyle **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_NewFrame_imgui_568d46c1e1b4102a() {
  ImGui::NewFrame();
  
}


void _wrap_EndFrame_imgui_568d46c1e1b4102a() {
  ImGui::EndFrame();
  
}


void _wrap_Render_imgui_568d46c1e1b4102a() {
  ImGui::Render();
  
}


ImDrawData *_wrap_GetDrawData_imgui_568d46c1e1b4102a() {
  ImDrawData *result = 0 ;
  ImDrawData *_swig_go_result;
  
  
  result = (ImDrawData *)ImGui::GetDrawData();
  *(ImDrawData **)&_swig_go_result = (ImDrawData *)result; 
  return _swig_go_result;
}


void _wrap_ShowDemoWindow__SWIG_0_imgui_568d46c1e1b4102a(bool *_swig_go_0) {
  bool *arg1 = (bool *) 0 ;
  
  arg1 = *(bool **)&_swig_go_0; 
  
  ImGui::ShowDemoWindow(arg1);
  
}


void _wrap_ShowDemoWindow__SWIG_1_imgui_568d46c1e1b4102a() {
  ImGui::ShowDemoWindow();
  
}


void _wrap_ShowMetricsWindow__SWIG_0_imgui_568d46c1e1b4102a(bool *_swig_go_0) {
  bool *arg1 = (bool *) 0 ;
  
  arg1 = *(bool **)&_swig_go_0; 
  
  ImGui::ShowMetricsWindow(arg1);
  
}


void _wrap_ShowMetricsWindow__SWIG_1_imgui_568d46c1e1b4102a() {
  ImGui::ShowMetricsWindow();
  
}


void _wrap_ShowDebugLogWindow__SWIG_0_imgui_568d46c1e1b4102a(bool *_swig_go_0) {
  bool *arg1 = (bool *) 0 ;
  
  arg1 = *(bool **)&_swig_go_0; 
  
  ImGui::ShowDebugLogWindow(arg1);
  
}


void _wrap_ShowDebugLogWindow__SWIG_1_imgui_568d46c1e1b4102a() {
  ImGui::ShowDebugLogWindow();
  
}


void _wrap_ShowIDStackToolWindow__SWIG_0_imgui_568d46c1e1b4102a(bool *_swig_go_0) {
  bool *arg1 = (bool *) 0 ;
  
  arg1 = *(bool **)&_swig_go_0; 
  
  ImGui::ShowIDStackToolWindow(arg1);
  
}


void _wrap_ShowIDStackToolWindow__SWIG_1_imgui_568d46c1e1b4102a() {
  ImGui::ShowIDStackToolWindow();
  
}


void _wrap_ShowAboutWindow__SWIG_0_imgui_568d46c1e1b4102a(bool *_swig_go_0) {
  bool *arg1 = (bool *) 0 ;
  
  arg1 = *(bool **)&_swig_go_0; 
  
  ImGui::ShowAboutWindow(arg1);
  
}


void _wrap_ShowAboutWindow__SWIG_1_imgui_568d46c1e1b4102a() {
  ImGui::ShowAboutWindow();
  
}


void _wrap_ShowStyleEditor__SWIG_0_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  
  ImGui::ShowStyleEditor(arg1);
  
}


void _wrap_ShowStyleEditor__SWIG_1_imgui_568d46c1e1b4102a() {
  ImGui::ShowStyleEditor();
  
}


bool _wrap_ShowStyleSelector_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0) {
  char *arg1 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  result = (bool)ImGui::ShowStyleSelector((char const *)arg1);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


void _wrap_ShowFontSelector_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0) {
  char *arg1 = (char *) 0 ;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  ImGui::ShowFontSelector((char const *)arg1);
  
  free(arg1); 
}


void _wrap_ShowUserGuide_imgui_568d46c1e1b4102a() {
  ImGui::ShowUserGuide();
  
}


_gostring_ _wrap_GetVersion_imgui_568d46c1e1b4102a() {
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  
  result = (char *)ImGui::GetVersion();
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_StyleColorsDark__SWIG_0_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  
  ImGui::StyleColorsDark(arg1);
  
}


void _wrap_StyleColorsDark__SWIG_1_imgui_568d46c1e1b4102a() {
  ImGui::StyleColorsDark();
  
}


void _wrap_StyleColorsLight__SWIG_0_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  
  ImGui::StyleColorsLight(arg1);
  
}


void _wrap_StyleColorsLight__SWIG_1_imgui_568d46c1e1b4102a() {
  ImGui::StyleColorsLight();
  
}


void _wrap_StyleColorsClassic__SWIG_0_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  
  ImGui::StyleColorsClassic(arg1);
  
}


void _wrap_StyleColorsClassic__SWIG_1_imgui_568d46c1e1b4102a() {
  ImGui::StyleColorsClassic();
  
}


bool _wrap_Begin__SWIG_0_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, bool *_swig_go_1, intgo _swig_go_2) {
  char *arg1 = (char *) 0 ;
  bool *arg2 = (bool *) 0 ;
  ImGuiWindowFlags arg3 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(bool **)&_swig_go_1; 
  arg3 = (ImGuiWindowFlags)_swig_go_2; 
  
  result = (bool)ImGui::Begin((char const *)arg1,arg2,arg3);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_Begin__SWIG_1_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, bool *_swig_go_1) {
  char *arg1 = (char *) 0 ;
  bool *arg2 = (bool *) 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(bool **)&_swig_go_1; 
  
  result = (bool)ImGui::Begin((char const *)arg1,arg2);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_Begin__SWIG_2_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0) {
  char *arg1 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  result = (bool)ImGui::Begin((char const *)arg1);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


void _wrap_End_imgui_568d46c1e1b4102a() {
  ImGui::End();
  
}


bool _wrap_BeginChild__SWIG_0_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, ImVec2 *_swig_go_1, intgo _swig_go_2, intgo _swig_go_3) {
  char *arg1 = (char *) 0 ;
  ImVec2 *arg2 = 0 ;
  ImGuiChildFlags arg3 ;
  ImGuiWindowFlags arg4 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(ImVec2 **)&_swig_go_1; 
  arg3 = (ImGuiChildFlags)_swig_go_2; 
  arg4 = (ImGuiWindowFlags)_swig_go_3; 
  
  result = (bool)ImGui::BeginChild((char const *)arg1,(ImVec2 const &)*arg2,arg3,arg4);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_BeginChild__SWIG_1_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, ImVec2 *_swig_go_1, intgo _swig_go_2) {
  char *arg1 = (char *) 0 ;
  ImVec2 *arg2 = 0 ;
  ImGuiChildFlags arg3 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(ImVec2 **)&_swig_go_1; 
  arg3 = (ImGuiChildFlags)_swig_go_2; 
  
  result = (bool)ImGui::BeginChild((char const *)arg1,(ImVec2 const &)*arg2,arg3);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_BeginChild__SWIG_2_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, ImVec2 *_swig_go_1) {
  char *arg1 = (char *) 0 ;
  ImVec2 *arg2 = 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(ImVec2 **)&_swig_go_1; 
  
  result = (bool)ImGui::BeginChild((char const *)arg1,(ImVec2 const &)*arg2);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_BeginChild__SWIG_3_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0) {
  char *arg1 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  result = (bool)ImGui::BeginChild((char const *)arg1);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_BeginChild__SWIG_4_imgui_568d46c1e1b4102a(intgo _swig_go_0, ImVec2 *_swig_go_1, intgo _swig_go_2, intgo _swig_go_3) {
  ImGuiID arg1 ;
  ImVec2 *arg2 = 0 ;
  ImGuiChildFlags arg3 ;
  ImGuiWindowFlags arg4 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = (ImGuiID)_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  arg3 = (ImGuiChildFlags)_swig_go_2; 
  arg4 = (ImGuiWindowFlags)_swig_go_3; 
  
  result = (bool)ImGui::BeginChild(arg1,(ImVec2 const &)*arg2,arg3,arg4);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_BeginChild__SWIG_5_imgui_568d46c1e1b4102a(intgo _swig_go_0, ImVec2 *_swig_go_1, intgo _swig_go_2) {
  ImGuiID arg1 ;
  ImVec2 *arg2 = 0 ;
  ImGuiChildFlags arg3 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = (ImGuiID)_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  arg3 = (ImGuiChildFlags)_swig_go_2; 
  
  result = (bool)ImGui::BeginChild(arg1,(ImVec2 const &)*arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_BeginChild__SWIG_6_imgui_568d46c1e1b4102a(intgo _swig_go_0, ImVec2 *_swig_go_1) {
  ImGuiID arg1 ;
  ImVec2 *arg2 = 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = (ImGuiID)_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  
  result = (bool)ImGui::BeginChild(arg1,(ImVec2 const &)*arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_BeginChild__SWIG_7_imgui_568d46c1e1b4102a(intgo _swig_go_0) {
  ImGuiID arg1 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = (ImGuiID)_swig_go_0; 
  
  result = (bool)ImGui::BeginChild(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_EndChild_imgui_568d46c1e1b4102a() {
  ImGui::EndChild();
  
}


bool _wrap_IsWindowAppearing_imgui_568d46c1e1b4102a() {
  bool result;
  bool _swig_go_result;
  
  
  result = (bool)ImGui::IsWindowAppearing();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_IsWindowCollapsed_imgui_568d46c1e1b4102a() {
  bool result;
  bool _swig_go_result;
  
  
  result = (bool)ImGui::IsWindowCollapsed();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_IsWindowFocused__SWIG_0_imgui_568d46c1e1b4102a(intgo _swig_go_0) {
  ImGuiFocusedFlags arg1 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = (ImGuiFocusedFlags)_swig_go_0; 
  
  result = (bool)ImGui::IsWindowFocused(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_IsWindowFocused__SWIG_1_imgui_568d46c1e1b4102a() {
  bool result;
  bool _swig_go_result;
  
  
  result = (bool)ImGui::IsWindowFocused();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_IsWindowHovered__SWIG_0_imgui_568d46c1e1b4102a(intgo _swig_go_0) {
  ImGuiHoveredFlags arg1 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = (ImGuiHoveredFlags)_swig_go_0; 
  
  result = (bool)ImGui::IsWindowHovered(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_IsWindowHovered__SWIG_1_imgui_568d46c1e1b4102a() {
  bool result;
  bool _swig_go_result;
  
  
  result = (bool)ImGui::IsWindowHovered();
  _swig_go_result = result; 
  return _swig_go_result;
}


ImDrawList *_wrap_GetWindowDrawList_imgui_568d46c1e1b4102a() {
  ImDrawList *result = 0 ;
  ImDrawList *_swig_go_result;
  
  
  result = (ImDrawList *)ImGui::GetWindowDrawList();
  *(ImDrawList **)&_swig_go_result = (ImDrawList *)result; 
  return _swig_go_result;
}


ImVec2 *_wrap_GetWindowPos_imgui_568d46c1e1b4102a() {
  ImVec2 result;
  ImVec2 *_swig_go_result;
  
  
  result = ImGui::GetWindowPos();
  *(ImVec2 **)&_swig_go_result = new ImVec2(result); 
  return _swig_go_result;
}


ImVec2 *_wrap_GetWindowSize_imgui_568d46c1e1b4102a() {
  ImVec2 result;
  ImVec2 *_swig_go_result;
  
  
  result = ImGui::GetWindowSize();
  *(ImVec2 **)&_swig_go_result = new ImVec2(result); 
  return _swig_go_result;
}


float _wrap_GetWindowWidth_imgui_568d46c1e1b4102a() {
  float result;
  float _swig_go_result;
  
  
  result = (float)ImGui::GetWindowWidth();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_GetWindowHeight_imgui_568d46c1e1b4102a() {
  float result;
  float _swig_go_result;
  
  
  result = (float)ImGui::GetWindowHeight();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_SetNextWindowPos__SWIG_0_imgui_568d46c1e1b4102a(ImVec2 *_swig_go_0, intgo _swig_go_1, ImVec2 *_swig_go_2) {
  ImVec2 *arg1 = 0 ;
  ImGuiCond arg2 ;
  ImVec2 *arg3 = 0 ;
  
  arg1 = *(ImVec2 **)&_swig_go_0; 
  arg2 = (ImGuiCond)_swig_go_1; 
  arg3 = *(ImVec2 **)&_swig_go_2; 
  
  ImGui::SetNextWindowPos((ImVec2 const &)*arg1,arg2,(ImVec2 const &)*arg3);
  
}


void _wrap_SetNextWindowPos__SWIG_1_imgui_568d46c1e1b4102a(ImVec2 *_swig_go_0, intgo _swig_go_1) {
  ImVec2 *arg1 = 0 ;
  ImGuiCond arg2 ;
  
  arg1 = *(ImVec2 **)&_swig_go_0; 
  arg2 = (ImGuiCond)_swig_go_1; 
  
  ImGui::SetNextWindowPos((ImVec2 const &)*arg1,arg2);
  
}


void _wrap_SetNextWindowPos__SWIG_2_imgui_568d46c1e1b4102a(ImVec2 *_swig_go_0) {
  ImVec2 *arg1 = 0 ;
  
  arg1 = *(ImVec2 **)&_swig_go_0; 
  
  ImGui::SetNextWindowPos((ImVec2 const &)*arg1);
  
}


void _wrap_SetNextWindowSize__SWIG_0_imgui_568d46c1e1b4102a(ImVec2 *_swig_go_0, intgo _swig_go_1) {
  ImVec2 *arg1 = 0 ;
  ImGuiCond arg2 ;
  
  arg1 = *(ImVec2 **)&_swig_go_0; 
  arg2 = (ImGuiCond)_swig_go_1; 
  
  ImGui::SetNextWindowSize((ImVec2 const &)*arg1,arg2);
  
}


void _wrap_SetNextWindowSize__SWIG_1_imgui_568d46c1e1b4102a(ImVec2 *_swig_go_0) {
  ImVec2 *arg1 = 0 ;
  
  arg1 = *(ImVec2 **)&_swig_go_0; 
  
  ImGui::SetNextWindowSize((ImVec2 const &)*arg1);
  
}


void _wrap_SetNextWindowSizeConstraints__SWIG_0_imgui_568d46c1e1b4102a(ImVec2 *_swig_go_0, ImVec2 *_swig_go_1, void* _swig_go_2, void *_swig_go_3) {
  ImVec2 *arg1 = 0 ;
  ImVec2 *arg2 = 0 ;
  ImGuiSizeCallback arg3 = (ImGuiSizeCallback) 0 ;
  void *arg4 = (void *) 0 ;
  
  arg1 = *(ImVec2 **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  arg3 = *(ImGuiSizeCallback *)&_swig_go_2; 
  arg4 = *(void **)&_swig_go_3; 
  
  ImGui::SetNextWindowSizeConstraints((ImVec2 const &)*arg1,(ImVec2 const &)*arg2,arg3,arg4);
  
}


void _wrap_SetNextWindowSizeConstraints__SWIG_1_imgui_568d46c1e1b4102a(ImVec2 *_swig_go_0, ImVec2 *_swig_go_1, void* _swig_go_2) {
  ImVec2 *arg1 = 0 ;
  ImVec2 *arg2 = 0 ;
  ImGuiSizeCallback arg3 = (ImGuiSizeCallback) 0 ;
  
  arg1 = *(ImVec2 **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  arg3 = *(ImGuiSizeCallback *)&_swig_go_2; 
  
  ImGui::SetNextWindowSizeConstraints((ImVec2 const &)*arg1,(ImVec2 const &)*arg2,arg3);
  
}


void _wrap_SetNextWindowSizeConstraints__SWIG_2_imgui_568d46c1e1b4102a(ImVec2 *_swig_go_0, ImVec2 *_swig_go_1) {
  ImVec2 *arg1 = 0 ;
  ImVec2 *arg2 = 0 ;
  
  arg1 = *(ImVec2 **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  
  ImGui::SetNextWindowSizeConstraints((ImVec2 const &)*arg1,(ImVec2 const &)*arg2);
  
}


void _wrap_SetNextWindowContentSize_imgui_568d46c1e1b4102a(ImVec2 *_swig_go_0) {
  ImVec2 *arg1 = 0 ;
  
  arg1 = *(ImVec2 **)&_swig_go_0; 
  
  ImGui::SetNextWindowContentSize((ImVec2 const &)*arg1);
  
}


void _wrap_SetNextWindowCollapsed__SWIG_0_imgui_568d46c1e1b4102a(bool _swig_go_0, intgo _swig_go_1) {
  bool arg1 ;
  ImGuiCond arg2 ;
  
  arg1 = (bool)_swig_go_0; 
  arg2 = (ImGuiCond)_swig_go_1; 
  
  ImGui::SetNextWindowCollapsed(arg1,arg2);
  
}


void _wrap_SetNextWindowCollapsed__SWIG_1_imgui_568d46c1e1b4102a(bool _swig_go_0) {
  bool arg1 ;
  
  arg1 = (bool)_swig_go_0; 
  
  ImGui::SetNextWindowCollapsed(arg1);
  
}


void _wrap_SetNextWindowFocus_imgui_568d46c1e1b4102a() {
  ImGui::SetNextWindowFocus();
  
}


void _wrap_SetNextWindowScroll_imgui_568d46c1e1b4102a(ImVec2 *_swig_go_0) {
  ImVec2 *arg1 = 0 ;
  
  arg1 = *(ImVec2 **)&_swig_go_0; 
  
  ImGui::SetNextWindowScroll((ImVec2 const &)*arg1);
  
}


void _wrap_SetNextWindowBgAlpha_imgui_568d46c1e1b4102a(float _swig_go_0) {
  float arg1 ;
  
  arg1 = (float)_swig_go_0; 
  
  ImGui::SetNextWindowBgAlpha(arg1);
  
}


void _wrap_SetWindowPos__SWIG_0_imgui_568d46c1e1b4102a(ImVec2 *_swig_go_0, intgo _swig_go_1) {
  ImVec2 *arg1 = 0 ;
  ImGuiCond arg2 ;
  
  arg1 = *(ImVec2 **)&_swig_go_0; 
  arg2 = (ImGuiCond)_swig_go_1; 
  
  ImGui::SetWindowPos((ImVec2 const &)*arg1,arg2);
  
}


void _wrap_SetWindowPos__SWIG_1_imgui_568d46c1e1b4102a(ImVec2 *_swig_go_0) {
  ImVec2 *arg1 = 0 ;
  
  arg1 = *(ImVec2 **)&_swig_go_0; 
  
  ImGui::SetWindowPos((ImVec2 const &)*arg1);
  
}


void _wrap_SetWindowSize__SWIG_0_imgui_568d46c1e1b4102a(ImVec2 *_swig_go_0, intgo _swig_go_1) {
  ImVec2 *arg1 = 0 ;
  ImGuiCond arg2 ;
  
  arg1 = *(ImVec2 **)&_swig_go_0; 
  arg2 = (ImGuiCond)_swig_go_1; 
  
  ImGui::SetWindowSize((ImVec2 const &)*arg1,arg2);
  
}


void _wrap_SetWindowSize__SWIG_1_imgui_568d46c1e1b4102a(ImVec2 *_swig_go_0) {
  ImVec2 *arg1 = 0 ;
  
  arg1 = *(ImVec2 **)&_swig_go_0; 
  
  ImGui::SetWindowSize((ImVec2 const &)*arg1);
  
}


void _wrap_SetWindowCollapsed__SWIG_0_imgui_568d46c1e1b4102a(bool _swig_go_0, intgo _swig_go_1) {
  bool arg1 ;
  ImGuiCond arg2 ;
  
  arg1 = (bool)_swig_go_0; 
  arg2 = (ImGuiCond)_swig_go_1; 
  
  ImGui::SetWindowCollapsed(arg1,arg2);
  
}


void _wrap_SetWindowCollapsed__SWIG_1_imgui_568d46c1e1b4102a(bool _swig_go_0) {
  bool arg1 ;
  
  arg1 = (bool)_swig_go_0; 
  
  ImGui::SetWindowCollapsed(arg1);
  
}


void _wrap_SetWindowFocus__SWIG_0_imgui_568d46c1e1b4102a() {
  ImGui::SetWindowFocus();
  
}


void _wrap_SetWindowFontScale_imgui_568d46c1e1b4102a(float _swig_go_0) {
  float arg1 ;
  
  arg1 = (float)_swig_go_0; 
  
  ImGui::SetWindowFontScale(arg1);
  
}


void _wrap_SetWindowPos__SWIG_2_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, ImVec2 *_swig_go_1, intgo _swig_go_2) {
  char *arg1 = (char *) 0 ;
  ImVec2 *arg2 = 0 ;
  ImGuiCond arg3 ;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(ImVec2 **)&_swig_go_1; 
  arg3 = (ImGuiCond)_swig_go_2; 
  
  ImGui::SetWindowPos((char const *)arg1,(ImVec2 const &)*arg2,arg3);
  
  free(arg1); 
}


void _wrap_SetWindowPos__SWIG_3_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, ImVec2 *_swig_go_1) {
  char *arg1 = (char *) 0 ;
  ImVec2 *arg2 = 0 ;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(ImVec2 **)&_swig_go_1; 
  
  ImGui::SetWindowPos((char const *)arg1,(ImVec2 const &)*arg2);
  
  free(arg1); 
}


void _wrap_SetWindowSize__SWIG_2_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, ImVec2 *_swig_go_1, intgo _swig_go_2) {
  char *arg1 = (char *) 0 ;
  ImVec2 *arg2 = 0 ;
  ImGuiCond arg3 ;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(ImVec2 **)&_swig_go_1; 
  arg3 = (ImGuiCond)_swig_go_2; 
  
  ImGui::SetWindowSize((char const *)arg1,(ImVec2 const &)*arg2,arg3);
  
  free(arg1); 
}


void _wrap_SetWindowSize__SWIG_3_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, ImVec2 *_swig_go_1) {
  char *arg1 = (char *) 0 ;
  ImVec2 *arg2 = 0 ;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(ImVec2 **)&_swig_go_1; 
  
  ImGui::SetWindowSize((char const *)arg1,(ImVec2 const &)*arg2);
  
  free(arg1); 
}


void _wrap_SetWindowCollapsed__SWIG_2_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, bool _swig_go_1, intgo _swig_go_2) {
  char *arg1 = (char *) 0 ;
  bool arg2 ;
  ImGuiCond arg3 ;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = (bool)_swig_go_1; 
  arg3 = (ImGuiCond)_swig_go_2; 
  
  ImGui::SetWindowCollapsed((char const *)arg1,arg2,arg3);
  
  free(arg1); 
}


void _wrap_SetWindowCollapsed__SWIG_3_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, bool _swig_go_1) {
  char *arg1 = (char *) 0 ;
  bool arg2 ;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = (bool)_swig_go_1; 
  
  ImGui::SetWindowCollapsed((char const *)arg1,arg2);
  
  free(arg1); 
}


void _wrap_SetWindowFocus__SWIG_1_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0) {
  char *arg1 = (char *) 0 ;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  ImGui::SetWindowFocus((char const *)arg1);
  
  free(arg1); 
}


float _wrap_GetScrollX_imgui_568d46c1e1b4102a() {
  float result;
  float _swig_go_result;
  
  
  result = (float)ImGui::GetScrollX();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_GetScrollY_imgui_568d46c1e1b4102a() {
  float result;
  float _swig_go_result;
  
  
  result = (float)ImGui::GetScrollY();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_SetScrollX_imgui_568d46c1e1b4102a(float _swig_go_0) {
  float arg1 ;
  
  arg1 = (float)_swig_go_0; 
  
  ImGui::SetScrollX(arg1);
  
}


void _wrap_SetScrollY_imgui_568d46c1e1b4102a(float _swig_go_0) {
  float arg1 ;
  
  arg1 = (float)_swig_go_0; 
  
  ImGui::SetScrollY(arg1);
  
}


float _wrap_GetScrollMaxX_imgui_568d46c1e1b4102a() {
  float result;
  float _swig_go_result;
  
  
  result = (float)ImGui::GetScrollMaxX();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_GetScrollMaxY_imgui_568d46c1e1b4102a() {
  float result;
  float _swig_go_result;
  
  
  result = (float)ImGui::GetScrollMaxY();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_SetScrollHereX__SWIG_0_imgui_568d46c1e1b4102a(float _swig_go_0) {
  float arg1 ;
  
  arg1 = (float)_swig_go_0; 
  
  ImGui::SetScrollHereX(arg1);
  
}


void _wrap_SetScrollHereX__SWIG_1_imgui_568d46c1e1b4102a() {
  ImGui::SetScrollHereX();
  
}


void _wrap_SetScrollHereY__SWIG_0_imgui_568d46c1e1b4102a(float _swig_go_0) {
  float arg1 ;
  
  arg1 = (float)_swig_go_0; 
  
  ImGui::SetScrollHereY(arg1);
  
}


void _wrap_SetScrollHereY__SWIG_1_imgui_568d46c1e1b4102a() {
  ImGui::SetScrollHereY();
  
}


void _wrap_SetScrollFromPosX__SWIG_0_imgui_568d46c1e1b4102a(float _swig_go_0, float _swig_go_1) {
  float arg1 ;
  float arg2 ;
  
  arg1 = (float)_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  ImGui::SetScrollFromPosX(arg1,arg2);
  
}


void _wrap_SetScrollFromPosX__SWIG_1_imgui_568d46c1e1b4102a(float _swig_go_0) {
  float arg1 ;
  
  arg1 = (float)_swig_go_0; 
  
  ImGui::SetScrollFromPosX(arg1);
  
}


void _wrap_SetScrollFromPosY__SWIG_0_imgui_568d46c1e1b4102a(float _swig_go_0, float _swig_go_1) {
  float arg1 ;
  float arg2 ;
  
  arg1 = (float)_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  ImGui::SetScrollFromPosY(arg1,arg2);
  
}


void _wrap_SetScrollFromPosY__SWIG_1_imgui_568d46c1e1b4102a(float _swig_go_0) {
  float arg1 ;
  
  arg1 = (float)_swig_go_0; 
  
  ImGui::SetScrollFromPosY(arg1);
  
}


void _wrap_PushFont_imgui_568d46c1e1b4102a(ImFont *_swig_go_0) {
  ImFont *arg1 = (ImFont *) 0 ;
  
  arg1 = *(ImFont **)&_swig_go_0; 
  
  ImGui::PushFont(arg1);
  
}


void _wrap_PopFont_imgui_568d46c1e1b4102a() {
  ImGui::PopFont();
  
}


void _wrap_PushStyleColor__SWIG_0_imgui_568d46c1e1b4102a(intgo _swig_go_0, intgo _swig_go_1) {
  ImGuiCol arg1 ;
  ImU32 arg2 ;
  
  arg1 = (ImGuiCol)_swig_go_0; 
  arg2 = (ImU32)_swig_go_1; 
  
  ImGui::PushStyleColor(arg1,arg2);
  
}


void _wrap_PushStyleColor__SWIG_1_imgui_568d46c1e1b4102a(intgo _swig_go_0, ImVec4 *_swig_go_1) {
  ImGuiCol arg1 ;
  ImVec4 *arg2 = 0 ;
  
  arg1 = (ImGuiCol)_swig_go_0; 
  arg2 = *(ImVec4 **)&_swig_go_1; 
  
  ImGui::PushStyleColor(arg1,(ImVec4 const &)*arg2);
  
}


void _wrap_PopStyleColor__SWIG_0_imgui_568d46c1e1b4102a(intgo _swig_go_0) {
  int arg1 ;
  
  arg1 = (int)_swig_go_0; 
  
  ImGui::PopStyleColor(arg1);
  
}


void _wrap_PopStyleColor__SWIG_1_imgui_568d46c1e1b4102a() {
  ImGui::PopStyleColor();
  
}


void _wrap_PushStyleVar__SWIG_0_imgui_568d46c1e1b4102a(intgo _swig_go_0, float _swig_go_1) {
  ImGuiStyleVar arg1 ;
  float arg2 ;
  
  arg1 = (ImGuiStyleVar)_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  ImGui::PushStyleVar(arg1,arg2);
  
}


void _wrap_PushStyleVar__SWIG_1_imgui_568d46c1e1b4102a(intgo _swig_go_0, ImVec2 *_swig_go_1) {
  ImGuiStyleVar arg1 ;
  ImVec2 *arg2 = 0 ;
  
  arg1 = (ImGuiStyleVar)_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  
  ImGui::PushStyleVar(arg1,(ImVec2 const &)*arg2);
  
}


void _wrap_PushStyleVarX_imgui_568d46c1e1b4102a(intgo _swig_go_0, float _swig_go_1) {
  ImGuiStyleVar arg1 ;
  float arg2 ;
  
  arg1 = (ImGuiStyleVar)_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  ImGui::PushStyleVarX(arg1,arg2);
  
}


void _wrap_PushStyleVarY_imgui_568d46c1e1b4102a(intgo _swig_go_0, float _swig_go_1) {
  ImGuiStyleVar arg1 ;
  float arg2 ;
  
  arg1 = (ImGuiStyleVar)_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  ImGui::PushStyleVarY(arg1,arg2);
  
}


void _wrap_PopStyleVar__SWIG_0_imgui_568d46c1e1b4102a(intgo _swig_go_0) {
  int arg1 ;
  
  arg1 = (int)_swig_go_0; 
  
  ImGui::PopStyleVar(arg1);
  
}


void _wrap_PopStyleVar__SWIG_1_imgui_568d46c1e1b4102a() {
  ImGui::PopStyleVar();
  
}


void _wrap_PushItemFlag_imgui_568d46c1e1b4102a(intgo _swig_go_0, bool _swig_go_1) {
  ImGuiItemFlags arg1 ;
  bool arg2 ;
  
  arg1 = (ImGuiItemFlags)_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  ImGui::PushItemFlag(arg1,arg2);
  
}


void _wrap_PopItemFlag_imgui_568d46c1e1b4102a() {
  ImGui::PopItemFlag();
  
}


void _wrap_PushItemWidth_imgui_568d46c1e1b4102a(float _swig_go_0) {
  float arg1 ;
  
  arg1 = (float)_swig_go_0; 
  
  ImGui::PushItemWidth(arg1);
  
}


void _wrap_PopItemWidth_imgui_568d46c1e1b4102a() {
  ImGui::PopItemWidth();
  
}


void _wrap_SetNextItemWidth_imgui_568d46c1e1b4102a(float _swig_go_0) {
  float arg1 ;
  
  arg1 = (float)_swig_go_0; 
  
  ImGui::SetNextItemWidth(arg1);
  
}


float _wrap_CalcItemWidth_imgui_568d46c1e1b4102a() {
  float result;
  float _swig_go_result;
  
  
  result = (float)ImGui::CalcItemWidth();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_PushTextWrapPos__SWIG_0_imgui_568d46c1e1b4102a(float _swig_go_0) {
  float arg1 ;
  
  arg1 = (float)_swig_go_0; 
  
  ImGui::PushTextWrapPos(arg1);
  
}


void _wrap_PushTextWrapPos__SWIG_1_imgui_568d46c1e1b4102a() {
  ImGui::PushTextWrapPos();
  
}


void _wrap_PopTextWrapPos_imgui_568d46c1e1b4102a() {
  ImGui::PopTextWrapPos();
  
}


ImFont *_wrap_GetFont_imgui_568d46c1e1b4102a() {
  ImFont *result = 0 ;
  ImFont *_swig_go_result;
  
  
  result = (ImFont *)ImGui::GetFont();
  *(ImFont **)&_swig_go_result = (ImFont *)result; 
  return _swig_go_result;
}


float _wrap_GetFontSize_imgui_568d46c1e1b4102a() {
  float result;
  float _swig_go_result;
  
  
  result = (float)ImGui::GetFontSize();
  _swig_go_result = result; 
  return _swig_go_result;
}


ImVec2 *_wrap_GetFontTexUvWhitePixel_imgui_568d46c1e1b4102a() {
  ImVec2 result;
  ImVec2 *_swig_go_result;
  
  
  result = ImGui::GetFontTexUvWhitePixel();
  *(ImVec2 **)&_swig_go_result = new ImVec2(result); 
  return _swig_go_result;
}


intgo _wrap_GetColorU32__SWIG_0_imgui_568d46c1e1b4102a(intgo _swig_go_0, float _swig_go_1) {
  ImGuiCol arg1 ;
  float arg2 ;
  ImU32 result;
  intgo _swig_go_result;
  
  arg1 = (ImGuiCol)_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  result = (ImU32)ImGui::GetColorU32(arg1,arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_GetColorU32__SWIG_1_imgui_568d46c1e1b4102a(intgo _swig_go_0) {
  ImGuiCol arg1 ;
  ImU32 result;
  intgo _swig_go_result;
  
  arg1 = (ImGuiCol)_swig_go_0; 
  
  result = (ImU32)ImGui::GetColorU32(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_GetColorU32__SWIG_2_imgui_568d46c1e1b4102a(ImVec4 *_swig_go_0) {
  ImVec4 *arg1 = 0 ;
  ImU32 result;
  intgo _swig_go_result;
  
  arg1 = *(ImVec4 **)&_swig_go_0; 
  
  result = (ImU32)ImGui::GetColorU32((ImVec4 const &)*arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_GetColorU32__SWIG_3_imgui_568d46c1e1b4102a(intgo _swig_go_0, float _swig_go_1) {
  ImU32 arg1 ;
  float arg2 ;
  ImU32 result;
  intgo _swig_go_result;
  
  arg1 = (ImU32)_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  result = (ImU32)ImGui::GetColorU32(arg1,arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_GetColorU32__SWIG_4_imgui_568d46c1e1b4102a(intgo _swig_go_0) {
  ImU32 arg1 ;
  ImU32 result;
  intgo _swig_go_result;
  
  arg1 = (ImU32)_swig_go_0; 
  
  result = (ImU32)ImGui::GetColorU32(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


ImVec4 *_wrap_GetStyleColorVec4_imgui_568d46c1e1b4102a(intgo _swig_go_0) {
  ImGuiCol arg1 ;
  ImVec4 *result = 0 ;
  ImVec4 *_swig_go_result;
  
  arg1 = (ImGuiCol)_swig_go_0; 
  
  result = (ImVec4 *) &ImGui::GetStyleColorVec4(arg1);
  *(ImVec4 **)&_swig_go_result = result; 
  return _swig_go_result;
}


ImVec2 *_wrap_GetCursorScreenPos_imgui_568d46c1e1b4102a() {
  ImVec2 result;
  ImVec2 *_swig_go_result;
  
  
  result = ImGui::GetCursorScreenPos();
  *(ImVec2 **)&_swig_go_result = new ImVec2(result); 
  return _swig_go_result;
}


void _wrap_SetCursorScreenPos_imgui_568d46c1e1b4102a(ImVec2 *_swig_go_0) {
  ImVec2 *arg1 = 0 ;
  
  arg1 = *(ImVec2 **)&_swig_go_0; 
  
  ImGui::SetCursorScreenPos((ImVec2 const &)*arg1);
  
}


ImVec2 *_wrap_GetContentRegionAvail_imgui_568d46c1e1b4102a() {
  ImVec2 result;
  ImVec2 *_swig_go_result;
  
  
  result = ImGui::GetContentRegionAvail();
  *(ImVec2 **)&_swig_go_result = new ImVec2(result); 
  return _swig_go_result;
}


ImVec2 *_wrap_GetCursorPos_imgui_568d46c1e1b4102a() {
  ImVec2 result;
  ImVec2 *_swig_go_result;
  
  
  result = ImGui::GetCursorPos();
  *(ImVec2 **)&_swig_go_result = new ImVec2(result); 
  return _swig_go_result;
}


float _wrap_GetCursorPosX_imgui_568d46c1e1b4102a() {
  float result;
  float _swig_go_result;
  
  
  result = (float)ImGui::GetCursorPosX();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_GetCursorPosY_imgui_568d46c1e1b4102a() {
  float result;
  float _swig_go_result;
  
  
  result = (float)ImGui::GetCursorPosY();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_SetCursorPos_imgui_568d46c1e1b4102a(ImVec2 *_swig_go_0) {
  ImVec2 *arg1 = 0 ;
  
  arg1 = *(ImVec2 **)&_swig_go_0; 
  
  ImGui::SetCursorPos((ImVec2 const &)*arg1);
  
}


void _wrap_SetCursorPosX_imgui_568d46c1e1b4102a(float _swig_go_0) {
  float arg1 ;
  
  arg1 = (float)_swig_go_0; 
  
  ImGui::SetCursorPosX(arg1);
  
}


void _wrap_SetCursorPosY_imgui_568d46c1e1b4102a(float _swig_go_0) {
  float arg1 ;
  
  arg1 = (float)_swig_go_0; 
  
  ImGui::SetCursorPosY(arg1);
  
}


ImVec2 *_wrap_GetCursorStartPos_imgui_568d46c1e1b4102a() {
  ImVec2 result;
  ImVec2 *_swig_go_result;
  
  
  result = ImGui::GetCursorStartPos();
  *(ImVec2 **)&_swig_go_result = new ImVec2(result); 
  return _swig_go_result;
}


void _wrap_Separator_imgui_568d46c1e1b4102a() {
  ImGui::Separator();
  
}


void _wrap_SameLine__SWIG_0_imgui_568d46c1e1b4102a(float _swig_go_0, float _swig_go_1) {
  float arg1 ;
  float arg2 ;
  
  arg1 = (float)_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  ImGui::SameLine(arg1,arg2);
  
}


void _wrap_SameLine__SWIG_1_imgui_568d46c1e1b4102a(float _swig_go_0) {
  float arg1 ;
  
  arg1 = (float)_swig_go_0; 
  
  ImGui::SameLine(arg1);
  
}


void _wrap_SameLine__SWIG_2_imgui_568d46c1e1b4102a() {
  ImGui::SameLine();
  
}


void _wrap_NewLine_imgui_568d46c1e1b4102a() {
  ImGui::NewLine();
  
}


void _wrap_Spacing_imgui_568d46c1e1b4102a() {
  ImGui::Spacing();
  
}


void _wrap_Dummy_imgui_568d46c1e1b4102a(ImVec2 *_swig_go_0) {
  ImVec2 *arg1 = 0 ;
  
  arg1 = *(ImVec2 **)&_swig_go_0; 
  
  ImGui::Dummy((ImVec2 const &)*arg1);
  
}


void _wrap_Indent__SWIG_0_imgui_568d46c1e1b4102a(float _swig_go_0) {
  float arg1 ;
  
  arg1 = (float)_swig_go_0; 
  
  ImGui::Indent(arg1);
  
}


void _wrap_Indent__SWIG_1_imgui_568d46c1e1b4102a() {
  ImGui::Indent();
  
}


void _wrap_Unindent__SWIG_0_imgui_568d46c1e1b4102a(float _swig_go_0) {
  float arg1 ;
  
  arg1 = (float)_swig_go_0; 
  
  ImGui::Unindent(arg1);
  
}


void _wrap_Unindent__SWIG_1_imgui_568d46c1e1b4102a() {
  ImGui::Unindent();
  
}


void _wrap_BeginGroup_imgui_568d46c1e1b4102a() {
  ImGui::BeginGroup();
  
}


void _wrap_EndGroup_imgui_568d46c1e1b4102a() {
  ImGui::EndGroup();
  
}


void _wrap_AlignTextToFramePadding_imgui_568d46c1e1b4102a() {
  ImGui::AlignTextToFramePadding();
  
}


float _wrap_GetTextLineHeight_imgui_568d46c1e1b4102a() {
  float result;
  float _swig_go_result;
  
  
  result = (float)ImGui::GetTextLineHeight();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_GetTextLineHeightWithSpacing_imgui_568d46c1e1b4102a() {
  float result;
  float _swig_go_result;
  
  
  result = (float)ImGui::GetTextLineHeightWithSpacing();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_GetFrameHeight_imgui_568d46c1e1b4102a() {
  float result;
  float _swig_go_result;
  
  
  result = (float)ImGui::GetFrameHeight();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_GetFrameHeightWithSpacing_imgui_568d46c1e1b4102a() {
  float result;
  float _swig_go_result;
  
  
  result = (float)ImGui::GetFrameHeightWithSpacing();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_PushID__SWIG_0_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0) {
  char *arg1 = (char *) 0 ;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  ImGui::PushID((char const *)arg1);
  
  free(arg1); 
}


void _wrap_PushID__SWIG_1_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, _gostring_ _swig_go_1) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  ImGui::PushID((char const *)arg1,(char const *)arg2);
  
  free(arg1); 
  free(arg2); 
}


void _wrap_PushID__SWIG_2_imgui_568d46c1e1b4102a(void *_swig_go_0) {
  void *arg1 = (void *) 0 ;
  
  arg1 = *(void **)&_swig_go_0; 
  
  ImGui::PushID((void const *)arg1);
  
}


void _wrap_PushID__SWIG_3_imgui_568d46c1e1b4102a(intgo _swig_go_0) {
  int arg1 ;
  
  arg1 = (int)_swig_go_0; 
  
  ImGui::PushID(arg1);
  
}


void _wrap_PopID_imgui_568d46c1e1b4102a() {
  ImGui::PopID();
  
}


intgo _wrap_GetID__SWIG_0_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0) {
  char *arg1 = (char *) 0 ;
  ImGuiID result;
  intgo _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  result = (ImGuiID)ImGui::GetID((char const *)arg1);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


intgo _wrap_GetID__SWIG_1_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, _gostring_ _swig_go_1) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  ImGuiID result;
  intgo _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  result = (ImGuiID)ImGui::GetID((char const *)arg1,(char const *)arg2);
  _swig_go_result = result; 
  free(arg1); 
  free(arg2); 
  return _swig_go_result;
}


intgo _wrap_GetID__SWIG_2_imgui_568d46c1e1b4102a(void *_swig_go_0) {
  void *arg1 = (void *) 0 ;
  ImGuiID result;
  intgo _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  
  result = (ImGuiID)ImGui::GetID((void const *)arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_GetID__SWIG_3_imgui_568d46c1e1b4102a(intgo _swig_go_0) {
  int arg1 ;
  ImGuiID result;
  intgo _swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  
  result = (ImGuiID)ImGui::GetID(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_TextUnformatted__SWIG_0_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, _gostring_ _swig_go_1) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  ImGui::TextUnformatted((char const *)arg1,(char const *)arg2);
  
  free(arg1); 
  free(arg2); 
}


void _wrap_TextUnformatted__SWIG_1_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0) {
  char *arg1 = (char *) 0 ;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  ImGui::TextUnformatted((char const *)arg1);
  
  free(arg1); 
}


void _wrap_Text_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0) {
  char *arg1 = (char *) 0 ;
  void *arg2 = 0 ;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  ImGui::Text((char const *)arg1,arg2);
  
  free(arg1); 
}


void _wrap_TextV_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, va_list *_swig_go_1) {
  char *arg1 = (char *) 0 ;
  va_list arg2 ;
  va_list *argp2 ;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  argp2 = (va_list *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null va_list");
  }
  arg2 = (va_list)*argp2;
  
  
  ImGui::TextV((char const *)arg1,SWIG_STD_MOVE(arg2));
  
  free(arg1); 
}


void _wrap_TextColored_imgui_568d46c1e1b4102a(ImVec4 *_swig_go_0, _gostring_ _swig_go_1) {
  ImVec4 *arg1 = 0 ;
  char *arg2 = (char *) 0 ;
  void *arg3 = 0 ;
  
  arg1 = *(ImVec4 **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  ImGui::TextColored((ImVec4 const &)*arg1,(char const *)arg2,arg3);
  
  free(arg2); 
}


void _wrap_TextColoredV_imgui_568d46c1e1b4102a(ImVec4 *_swig_go_0, _gostring_ _swig_go_1, va_list *_swig_go_2) {
  ImVec4 *arg1 = 0 ;
  char *arg2 = (char *) 0 ;
  va_list arg3 ;
  va_list *argp3 ;
  
  arg1 = *(ImVec4 **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  argp3 = (va_list *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null va_list");
  }
  arg3 = (va_list)*argp3;
  
  
  ImGui::TextColoredV((ImVec4 const &)*arg1,(char const *)arg2,SWIG_STD_MOVE(arg3));
  
  free(arg2); 
}


void _wrap_TextDisabled_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0) {
  char *arg1 = (char *) 0 ;
  void *arg2 = 0 ;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  ImGui::TextDisabled((char const *)arg1,arg2);
  
  free(arg1); 
}


void _wrap_TextDisabledV_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, va_list *_swig_go_1) {
  char *arg1 = (char *) 0 ;
  va_list arg2 ;
  va_list *argp2 ;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  argp2 = (va_list *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null va_list");
  }
  arg2 = (va_list)*argp2;
  
  
  ImGui::TextDisabledV((char const *)arg1,SWIG_STD_MOVE(arg2));
  
  free(arg1); 
}


void _wrap_TextWrapped_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0) {
  char *arg1 = (char *) 0 ;
  void *arg2 = 0 ;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  ImGui::TextWrapped((char const *)arg1,arg2);
  
  free(arg1); 
}


void _wrap_TextWrappedV_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, va_list *_swig_go_1) {
  char *arg1 = (char *) 0 ;
  va_list arg2 ;
  va_list *argp2 ;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  argp2 = (va_list *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null va_list");
  }
  arg2 = (va_list)*argp2;
  
  
  ImGui::TextWrappedV((char const *)arg1,SWIG_STD_MOVE(arg2));
  
  free(arg1); 
}


void _wrap_LabelText_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, _gostring_ _swig_go_1) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  void *arg3 = 0 ;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  ImGui::LabelText((char const *)arg1,(char const *)arg2,arg3);
  
  free(arg1); 
  free(arg2); 
}


void _wrap_LabelTextV_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, _gostring_ _swig_go_1, va_list *_swig_go_2) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  va_list arg3 ;
  va_list *argp3 ;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  argp3 = (va_list *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null va_list");
  }
  arg3 = (va_list)*argp3;
  
  
  ImGui::LabelTextV((char const *)arg1,(char const *)arg2,SWIG_STD_MOVE(arg3));
  
  free(arg1); 
  free(arg2); 
}


void _wrap_BulletText_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0) {
  char *arg1 = (char *) 0 ;
  void *arg2 = 0 ;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  ImGui::BulletText((char const *)arg1,arg2);
  
  free(arg1); 
}


void _wrap_BulletTextV_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, va_list *_swig_go_1) {
  char *arg1 = (char *) 0 ;
  va_list arg2 ;
  va_list *argp2 ;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  argp2 = (va_list *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null va_list");
  }
  arg2 = (va_list)*argp2;
  
  
  ImGui::BulletTextV((char const *)arg1,SWIG_STD_MOVE(arg2));
  
  free(arg1); 
}


void _wrap_SeparatorText_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0) {
  char *arg1 = (char *) 0 ;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  ImGui::SeparatorText((char const *)arg1);
  
  free(arg1); 
}


bool _wrap_Button__SWIG_0_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, ImVec2 *_swig_go_1) {
  char *arg1 = (char *) 0 ;
  ImVec2 *arg2 = 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(ImVec2 **)&_swig_go_1; 
  
  result = (bool)ImGui::Button((char const *)arg1,(ImVec2 const &)*arg2);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_Button__SWIG_1_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0) {
  char *arg1 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  result = (bool)ImGui::Button((char const *)arg1);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_SmallButton_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0) {
  char *arg1 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  result = (bool)ImGui::SmallButton((char const *)arg1);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_InvisibleButton__SWIG_0_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, ImVec2 *_swig_go_1, intgo _swig_go_2) {
  char *arg1 = (char *) 0 ;
  ImVec2 *arg2 = 0 ;
  ImGuiButtonFlags arg3 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(ImVec2 **)&_swig_go_1; 
  arg3 = (ImGuiButtonFlags)_swig_go_2; 
  
  result = (bool)ImGui::InvisibleButton((char const *)arg1,(ImVec2 const &)*arg2,arg3);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_InvisibleButton__SWIG_1_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, ImVec2 *_swig_go_1) {
  char *arg1 = (char *) 0 ;
  ImVec2 *arg2 = 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(ImVec2 **)&_swig_go_1; 
  
  result = (bool)ImGui::InvisibleButton((char const *)arg1,(ImVec2 const &)*arg2);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_ArrowButton_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo _swig_go_1) {
  char *arg1 = (char *) 0 ;
  ImGuiDir arg2 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = (ImGuiDir)_swig_go_1; 
  
  result = (bool)ImGui::ArrowButton((char const *)arg1,arg2);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_Checkbox_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, bool *_swig_go_1) {
  char *arg1 = (char *) 0 ;
  bool *arg2 = (bool *) 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(bool **)&_swig_go_1; 
  
  result = (bool)ImGui::Checkbox((char const *)arg1,arg2);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_CheckboxFlags__SWIG_0_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo *_swig_go_1, intgo _swig_go_2) {
  char *arg1 = (char *) 0 ;
  int *arg2 = (int *) 0 ;
  int arg3 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(int **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (bool)ImGui::CheckboxFlags((char const *)arg1,arg2,arg3);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_CheckboxFlags__SWIG_1_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo *_swig_go_1, intgo _swig_go_2) {
  char *arg1 = (char *) 0 ;
  unsigned int *arg2 = (unsigned int *) 0 ;
  unsigned int arg3 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(unsigned int **)&_swig_go_1; 
  arg3 = (unsigned int)_swig_go_2; 
  
  result = (bool)ImGui::CheckboxFlags((char const *)arg1,arg2,arg3);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_RadioButton__SWIG_0_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, bool _swig_go_1) {
  char *arg1 = (char *) 0 ;
  bool arg2 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = (bool)_swig_go_1; 
  
  result = (bool)ImGui::RadioButton((char const *)arg1,arg2);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_RadioButton__SWIG_1_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo *_swig_go_1, intgo _swig_go_2) {
  char *arg1 = (char *) 0 ;
  int *arg2 = (int *) 0 ;
  int arg3 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(int **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (bool)ImGui::RadioButton((char const *)arg1,arg2,arg3);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


void _wrap_ProgressBar__SWIG_0_imgui_568d46c1e1b4102a(float _swig_go_0, ImVec2 *_swig_go_1, _gostring_ _swig_go_2) {
  float arg1 ;
  ImVec2 *arg2 = 0 ;
  char *arg3 = (char *) 0 ;
  
  arg1 = (float)_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  ImGui::ProgressBar(arg1,(ImVec2 const &)*arg2,(char const *)arg3);
  
  free(arg3); 
}


void _wrap_ProgressBar__SWIG_1_imgui_568d46c1e1b4102a(float _swig_go_0, ImVec2 *_swig_go_1) {
  float arg1 ;
  ImVec2 *arg2 = 0 ;
  
  arg1 = (float)_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  
  ImGui::ProgressBar(arg1,(ImVec2 const &)*arg2);
  
}


void _wrap_ProgressBar__SWIG_2_imgui_568d46c1e1b4102a(float _swig_go_0) {
  float arg1 ;
  
  arg1 = (float)_swig_go_0; 
  
  ImGui::ProgressBar(arg1);
  
}


void _wrap_Bullet_imgui_568d46c1e1b4102a() {
  ImGui::Bullet();
  
}


bool _wrap_TextLink_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0) {
  char *arg1 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  result = (bool)ImGui::TextLink((char const *)arg1);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


void _wrap_TextLinkOpenURL__SWIG_0_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, _gostring_ _swig_go_1) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  ImGui::TextLinkOpenURL((char const *)arg1,(char const *)arg2);
  
  free(arg1); 
  free(arg2); 
}


void _wrap_TextLinkOpenURL__SWIG_1_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0) {
  char *arg1 = (char *) 0 ;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  ImGui::TextLinkOpenURL((char const *)arg1);
  
  free(arg1); 
}


void _wrap_Image__SWIG_0_imgui_568d46c1e1b4102a(ImTextureID _swig_go_0, ImVec2 *_swig_go_1, ImVec2 *_swig_go_2, ImVec2 *_swig_go_3, ImVec4 *_swig_go_4, ImVec4 *_swig_go_5) {
  ImTextureID arg1 = (ImTextureID) 0 ;
  ImVec2 *arg2 = 0 ;
  ImVec2 *arg3 = 0 ;
  ImVec2 *arg4 = 0 ;
  ImVec4 *arg5 = 0 ;
  ImVec4 *arg6 = 0 ;
  
  arg1 = *(ImTextureID *)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  arg3 = *(ImVec2 **)&_swig_go_2; 
  arg4 = *(ImVec2 **)&_swig_go_3; 
  arg5 = *(ImVec4 **)&_swig_go_4; 
  arg6 = *(ImVec4 **)&_swig_go_5; 
  
  ImGui::Image(arg1,(ImVec2 const &)*arg2,(ImVec2 const &)*arg3,(ImVec2 const &)*arg4,(ImVec4 const &)*arg5,(ImVec4 const &)*arg6);
  
}


void _wrap_Image__SWIG_1_imgui_568d46c1e1b4102a(ImTextureID _swig_go_0, ImVec2 *_swig_go_1, ImVec2 *_swig_go_2, ImVec2 *_swig_go_3, ImVec4 *_swig_go_4) {
  ImTextureID arg1 = (ImTextureID) 0 ;
  ImVec2 *arg2 = 0 ;
  ImVec2 *arg3 = 0 ;
  ImVec2 *arg4 = 0 ;
  ImVec4 *arg5 = 0 ;
  
  arg1 = *(ImTextureID *)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  arg3 = *(ImVec2 **)&_swig_go_2; 
  arg4 = *(ImVec2 **)&_swig_go_3; 
  arg5 = *(ImVec4 **)&_swig_go_4; 
  
  ImGui::Image(arg1,(ImVec2 const &)*arg2,(ImVec2 const &)*arg3,(ImVec2 const &)*arg4,(ImVec4 const &)*arg5);
  
}


void _wrap_Image__SWIG_2_imgui_568d46c1e1b4102a(ImTextureID _swig_go_0, ImVec2 *_swig_go_1, ImVec2 *_swig_go_2, ImVec2 *_swig_go_3) {
  ImTextureID arg1 = (ImTextureID) 0 ;
  ImVec2 *arg2 = 0 ;
  ImVec2 *arg3 = 0 ;
  ImVec2 *arg4 = 0 ;
  
  arg1 = *(ImTextureID *)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  arg3 = *(ImVec2 **)&_swig_go_2; 
  arg4 = *(ImVec2 **)&_swig_go_3; 
  
  ImGui::Image(arg1,(ImVec2 const &)*arg2,(ImVec2 const &)*arg3,(ImVec2 const &)*arg4);
  
}


void _wrap_Image__SWIG_3_imgui_568d46c1e1b4102a(ImTextureID _swig_go_0, ImVec2 *_swig_go_1, ImVec2 *_swig_go_2) {
  ImTextureID arg1 = (ImTextureID) 0 ;
  ImVec2 *arg2 = 0 ;
  ImVec2 *arg3 = 0 ;
  
  arg1 = *(ImTextureID *)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  arg3 = *(ImVec2 **)&_swig_go_2; 
  
  ImGui::Image(arg1,(ImVec2 const &)*arg2,(ImVec2 const &)*arg3);
  
}


void _wrap_Image__SWIG_4_imgui_568d46c1e1b4102a(ImTextureID _swig_go_0, ImVec2 *_swig_go_1) {
  ImTextureID arg1 = (ImTextureID) 0 ;
  ImVec2 *arg2 = 0 ;
  
  arg1 = *(ImTextureID *)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  
  ImGui::Image(arg1,(ImVec2 const &)*arg2);
  
}


bool _wrap_ImageButton__SWIG_0_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, ImTextureID _swig_go_1, ImVec2 *_swig_go_2, ImVec2 *_swig_go_3, ImVec2 *_swig_go_4, ImVec4 *_swig_go_5, ImVec4 *_swig_go_6) {
  char *arg1 = (char *) 0 ;
  ImTextureID arg2 = (ImTextureID) 0 ;
  ImVec2 *arg3 = 0 ;
  ImVec2 *arg4 = 0 ;
  ImVec2 *arg5 = 0 ;
  ImVec4 *arg6 = 0 ;
  ImVec4 *arg7 = 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(ImTextureID *)&_swig_go_1; 
  arg3 = *(ImVec2 **)&_swig_go_2; 
  arg4 = *(ImVec2 **)&_swig_go_3; 
  arg5 = *(ImVec2 **)&_swig_go_4; 
  arg6 = *(ImVec4 **)&_swig_go_5; 
  arg7 = *(ImVec4 **)&_swig_go_6; 
  
  result = (bool)ImGui::ImageButton((char const *)arg1,arg2,(ImVec2 const &)*arg3,(ImVec2 const &)*arg4,(ImVec2 const &)*arg5,(ImVec4 const &)*arg6,(ImVec4 const &)*arg7);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_ImageButton__SWIG_1_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, ImTextureID _swig_go_1, ImVec2 *_swig_go_2, ImVec2 *_swig_go_3, ImVec2 *_swig_go_4, ImVec4 *_swig_go_5) {
  char *arg1 = (char *) 0 ;
  ImTextureID arg2 = (ImTextureID) 0 ;
  ImVec2 *arg3 = 0 ;
  ImVec2 *arg4 = 0 ;
  ImVec2 *arg5 = 0 ;
  ImVec4 *arg6 = 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(ImTextureID *)&_swig_go_1; 
  arg3 = *(ImVec2 **)&_swig_go_2; 
  arg4 = *(ImVec2 **)&_swig_go_3; 
  arg5 = *(ImVec2 **)&_swig_go_4; 
  arg6 = *(ImVec4 **)&_swig_go_5; 
  
  result = (bool)ImGui::ImageButton((char const *)arg1,arg2,(ImVec2 const &)*arg3,(ImVec2 const &)*arg4,(ImVec2 const &)*arg5,(ImVec4 const &)*arg6);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_ImageButton__SWIG_2_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, ImTextureID _swig_go_1, ImVec2 *_swig_go_2, ImVec2 *_swig_go_3, ImVec2 *_swig_go_4) {
  char *arg1 = (char *) 0 ;
  ImTextureID arg2 = (ImTextureID) 0 ;
  ImVec2 *arg3 = 0 ;
  ImVec2 *arg4 = 0 ;
  ImVec2 *arg5 = 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(ImTextureID *)&_swig_go_1; 
  arg3 = *(ImVec2 **)&_swig_go_2; 
  arg4 = *(ImVec2 **)&_swig_go_3; 
  arg5 = *(ImVec2 **)&_swig_go_4; 
  
  result = (bool)ImGui::ImageButton((char const *)arg1,arg2,(ImVec2 const &)*arg3,(ImVec2 const &)*arg4,(ImVec2 const &)*arg5);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_ImageButton__SWIG_3_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, ImTextureID _swig_go_1, ImVec2 *_swig_go_2, ImVec2 *_swig_go_3) {
  char *arg1 = (char *) 0 ;
  ImTextureID arg2 = (ImTextureID) 0 ;
  ImVec2 *arg3 = 0 ;
  ImVec2 *arg4 = 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(ImTextureID *)&_swig_go_1; 
  arg3 = *(ImVec2 **)&_swig_go_2; 
  arg4 = *(ImVec2 **)&_swig_go_3; 
  
  result = (bool)ImGui::ImageButton((char const *)arg1,arg2,(ImVec2 const &)*arg3,(ImVec2 const &)*arg4);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_ImageButton__SWIG_4_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, ImTextureID _swig_go_1, ImVec2 *_swig_go_2) {
  char *arg1 = (char *) 0 ;
  ImTextureID arg2 = (ImTextureID) 0 ;
  ImVec2 *arg3 = 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(ImTextureID *)&_swig_go_1; 
  arg3 = *(ImVec2 **)&_swig_go_2; 
  
  result = (bool)ImGui::ImageButton((char const *)arg1,arg2,(ImVec2 const &)*arg3);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_BeginCombo__SWIG_0_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, _gostring_ _swig_go_1, intgo _swig_go_2) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  ImGuiComboFlags arg3 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (ImGuiComboFlags)_swig_go_2; 
  
  result = (bool)ImGui::BeginCombo((char const *)arg1,(char const *)arg2,arg3);
  _swig_go_result = result; 
  free(arg1); 
  free(arg2); 
  return _swig_go_result;
}


bool _wrap_BeginCombo__SWIG_1_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, _gostring_ _swig_go_1) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  result = (bool)ImGui::BeginCombo((char const *)arg1,(char const *)arg2);
  _swig_go_result = result; 
  free(arg1); 
  free(arg2); 
  return _swig_go_result;
}


void _wrap_EndCombo_imgui_568d46c1e1b4102a() {
  ImGui::EndCombo();
  
}


bool _wrap_Combo__SWIG_0_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo *_swig_go_1, _gostring_* _swig_go_2, intgo _swig_go_3, intgo _swig_go_4) {
  char *arg1 = (char *) 0 ;
  int *arg2 = (int *) 0 ;
  char **arg3 = (char **) (char **)0 ;
  int arg4 ;
  int arg5 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(int **)&_swig_go_1; 
  arg3 = *(char ***)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  result = (bool)ImGui::Combo((char const *)arg1,arg2,(char const *const (*))arg3,arg4,arg5);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_Combo__SWIG_1_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo *_swig_go_1, _gostring_* _swig_go_2, intgo _swig_go_3) {
  char *arg1 = (char *) 0 ;
  int *arg2 = (int *) 0 ;
  char **arg3 = (char **) (char **)0 ;
  int arg4 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(int **)&_swig_go_1; 
  arg3 = *(char ***)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  result = (bool)ImGui::Combo((char const *)arg1,arg2,(char const *const (*))arg3,arg4);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_Combo__SWIG_2_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo *_swig_go_1, _gostring_ _swig_go_2, intgo _swig_go_3) {
  char *arg1 = (char *) 0 ;
  int *arg2 = (int *) 0 ;
  char *arg3 = (char *) 0 ;
  int arg4 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(int **)&_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  arg4 = (int)_swig_go_3; 
  
  result = (bool)ImGui::Combo((char const *)arg1,arg2,(char const *)arg3,arg4);
  _swig_go_result = result; 
  free(arg1); 
  free(arg3); 
  return _swig_go_result;
}


bool _wrap_Combo__SWIG_3_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo *_swig_go_1, _gostring_ _swig_go_2) {
  char *arg1 = (char *) 0 ;
  int *arg2 = (int *) 0 ;
  char *arg3 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(int **)&_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  result = (bool)ImGui::Combo((char const *)arg1,arg2,(char const *)arg3);
  _swig_go_result = result; 
  free(arg1); 
  free(arg3); 
  return _swig_go_result;
}


bool _wrap_Combo__SWIG_4_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo *_swig_go_1, void* _swig_go_2, void *_swig_go_3, intgo _swig_go_4, intgo _swig_go_5) {
  char *arg1 = (char *) 0 ;
  int *arg2 = (int *) 0 ;
  char *(*arg3)(void *,int) = (char *(*)(void *,int)) 0 ;
  void *arg4 = (void *) 0 ;
  int arg5 ;
  int arg6 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(int **)&_swig_go_1; 
  arg3 = *(char *(**)(void *,int))&_swig_go_2; 
  arg4 = *(void **)&_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  
  result = (bool)ImGui::Combo((char const *)arg1,arg2,(char const *(*)(void *,int))arg3,arg4,arg5,arg6);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_Combo__SWIG_5_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo *_swig_go_1, void* _swig_go_2, void *_swig_go_3, intgo _swig_go_4) {
  char *arg1 = (char *) 0 ;
  int *arg2 = (int *) 0 ;
  char *(*arg3)(void *,int) = (char *(*)(void *,int)) 0 ;
  void *arg4 = (void *) 0 ;
  int arg5 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(int **)&_swig_go_1; 
  arg3 = *(char *(**)(void *,int))&_swig_go_2; 
  arg4 = *(void **)&_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  result = (bool)ImGui::Combo((char const *)arg1,arg2,(char const *(*)(void *,int))arg3,arg4,arg5);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_DragFloat__SWIG_0_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, float *_swig_go_1, float _swig_go_2, float _swig_go_3, float _swig_go_4, _gostring_ _swig_go_5, intgo _swig_go_6) {
  char *arg1 = (char *) 0 ;
  float *arg2 = (float *) 0 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  char *arg6 = (char *) 0 ;
  ImGuiSliderFlags arg7 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(float **)&_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  arg4 = (float)_swig_go_3; 
  arg5 = (float)_swig_go_4; 
  
  arg6 = (char *)malloc(_swig_go_5.n + 1);
  memcpy(arg6, _swig_go_5.p, _swig_go_5.n);
  arg6[_swig_go_5.n] = '\0';
  
  arg7 = (ImGuiSliderFlags)_swig_go_6; 
  
  result = (bool)ImGui::DragFloat((char const *)arg1,arg2,arg3,arg4,arg5,(char const *)arg6,arg7);
  _swig_go_result = result; 
  free(arg1); 
  free(arg6); 
  return _swig_go_result;
}


bool _wrap_DragFloat__SWIG_1_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, float *_swig_go_1, float _swig_go_2, float _swig_go_3, float _swig_go_4, _gostring_ _swig_go_5) {
  char *arg1 = (char *) 0 ;
  float *arg2 = (float *) 0 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  char *arg6 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(float **)&_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  arg4 = (float)_swig_go_3; 
  arg5 = (float)_swig_go_4; 
  
  arg6 = (char *)malloc(_swig_go_5.n + 1);
  memcpy(arg6, _swig_go_5.p, _swig_go_5.n);
  arg6[_swig_go_5.n] = '\0';
  
  
  result = (bool)ImGui::DragFloat((char const *)arg1,arg2,arg3,arg4,arg5,(char const *)arg6);
  _swig_go_result = result; 
  free(arg1); 
  free(arg6); 
  return _swig_go_result;
}


bool _wrap_DragFloat__SWIG_2_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, float *_swig_go_1, float _swig_go_2, float _swig_go_3, float _swig_go_4) {
  char *arg1 = (char *) 0 ;
  float *arg2 = (float *) 0 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(float **)&_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  arg4 = (float)_swig_go_3; 
  arg5 = (float)_swig_go_4; 
  
  result = (bool)ImGui::DragFloat((char const *)arg1,arg2,arg3,arg4,arg5);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_DragFloat__SWIG_3_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, float *_swig_go_1, float _swig_go_2, float _swig_go_3) {
  char *arg1 = (char *) 0 ;
  float *arg2 = (float *) 0 ;
  float arg3 ;
  float arg4 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(float **)&_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  arg4 = (float)_swig_go_3; 
  
  result = (bool)ImGui::DragFloat((char const *)arg1,arg2,arg3,arg4);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_DragFloat__SWIG_4_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, float *_swig_go_1, float _swig_go_2) {
  char *arg1 = (char *) 0 ;
  float *arg2 = (float *) 0 ;
  float arg3 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(float **)&_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  
  result = (bool)ImGui::DragFloat((char const *)arg1,arg2,arg3);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_DragFloat__SWIG_5_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, float *_swig_go_1) {
  char *arg1 = (char *) 0 ;
  float *arg2 = (float *) 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(float **)&_swig_go_1; 
  
  result = (bool)ImGui::DragFloat((char const *)arg1,arg2);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_DragFloat2__SWIG_0_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, float *_swig_go_1, float _swig_go_2, float _swig_go_3, float _swig_go_4, _gostring_ _swig_go_5, intgo _swig_go_6) {
  char *arg1 = (char *) 0 ;
  float *arg2 = (float *) (float *)0 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  char *arg6 = (char *) 0 ;
  ImGuiSliderFlags arg7 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(float **)&_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  arg4 = (float)_swig_go_3; 
  arg5 = (float)_swig_go_4; 
  
  arg6 = (char *)malloc(_swig_go_5.n + 1);
  memcpy(arg6, _swig_go_5.p, _swig_go_5.n);
  arg6[_swig_go_5.n] = '\0';
  
  arg7 = (ImGuiSliderFlags)_swig_go_6; 
  
  result = (bool)ImGui::DragFloat2((char const *)arg1,arg2,arg3,arg4,arg5,(char const *)arg6,arg7);
  _swig_go_result = result; 
  free(arg1); 
  free(arg6); 
  return _swig_go_result;
}


bool _wrap_DragFloat2__SWIG_1_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, float *_swig_go_1, float _swig_go_2, float _swig_go_3, float _swig_go_4, _gostring_ _swig_go_5) {
  char *arg1 = (char *) 0 ;
  float *arg2 = (float *) (float *)0 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  char *arg6 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(float **)&_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  arg4 = (float)_swig_go_3; 
  arg5 = (float)_swig_go_4; 
  
  arg6 = (char *)malloc(_swig_go_5.n + 1);
  memcpy(arg6, _swig_go_5.p, _swig_go_5.n);
  arg6[_swig_go_5.n] = '\0';
  
  
  result = (bool)ImGui::DragFloat2((char const *)arg1,arg2,arg3,arg4,arg5,(char const *)arg6);
  _swig_go_result = result; 
  free(arg1); 
  free(arg6); 
  return _swig_go_result;
}


bool _wrap_DragFloat2__SWIG_2_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, float *_swig_go_1, float _swig_go_2, float _swig_go_3, float _swig_go_4) {
  char *arg1 = (char *) 0 ;
  float *arg2 = (float *) (float *)0 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(float **)&_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  arg4 = (float)_swig_go_3; 
  arg5 = (float)_swig_go_4; 
  
  result = (bool)ImGui::DragFloat2((char const *)arg1,arg2,arg3,arg4,arg5);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_DragFloat2__SWIG_3_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, float *_swig_go_1, float _swig_go_2, float _swig_go_3) {
  char *arg1 = (char *) 0 ;
  float *arg2 = (float *) (float *)0 ;
  float arg3 ;
  float arg4 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(float **)&_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  arg4 = (float)_swig_go_3; 
  
  result = (bool)ImGui::DragFloat2((char const *)arg1,arg2,arg3,arg4);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_DragFloat2__SWIG_4_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, float *_swig_go_1, float _swig_go_2) {
  char *arg1 = (char *) 0 ;
  float *arg2 = (float *) (float *)0 ;
  float arg3 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(float **)&_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  
  result = (bool)ImGui::DragFloat2((char const *)arg1,arg2,arg3);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_DragFloat2__SWIG_5_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, float *_swig_go_1) {
  char *arg1 = (char *) 0 ;
  float *arg2 = (float *) (float *)0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(float **)&_swig_go_1; 
  
  result = (bool)ImGui::DragFloat2((char const *)arg1,arg2);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_DragFloat3__SWIG_0_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, float *_swig_go_1, float _swig_go_2, float _swig_go_3, float _swig_go_4, _gostring_ _swig_go_5, intgo _swig_go_6) {
  char *arg1 = (char *) 0 ;
  float *arg2 = (float *) (float *)0 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  char *arg6 = (char *) 0 ;
  ImGuiSliderFlags arg7 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(float **)&_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  arg4 = (float)_swig_go_3; 
  arg5 = (float)_swig_go_4; 
  
  arg6 = (char *)malloc(_swig_go_5.n + 1);
  memcpy(arg6, _swig_go_5.p, _swig_go_5.n);
  arg6[_swig_go_5.n] = '\0';
  
  arg7 = (ImGuiSliderFlags)_swig_go_6; 
  
  result = (bool)ImGui::DragFloat3((char const *)arg1,arg2,arg3,arg4,arg5,(char const *)arg6,arg7);
  _swig_go_result = result; 
  free(arg1); 
  free(arg6); 
  return _swig_go_result;
}


bool _wrap_DragFloat3__SWIG_1_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, float *_swig_go_1, float _swig_go_2, float _swig_go_3, float _swig_go_4, _gostring_ _swig_go_5) {
  char *arg1 = (char *) 0 ;
  float *arg2 = (float *) (float *)0 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  char *arg6 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(float **)&_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  arg4 = (float)_swig_go_3; 
  arg5 = (float)_swig_go_4; 
  
  arg6 = (char *)malloc(_swig_go_5.n + 1);
  memcpy(arg6, _swig_go_5.p, _swig_go_5.n);
  arg6[_swig_go_5.n] = '\0';
  
  
  result = (bool)ImGui::DragFloat3((char const *)arg1,arg2,arg3,arg4,arg5,(char const *)arg6);
  _swig_go_result = result; 
  free(arg1); 
  free(arg6); 
  return _swig_go_result;
}


bool _wrap_DragFloat3__SWIG_2_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, float *_swig_go_1, float _swig_go_2, float _swig_go_3, float _swig_go_4) {
  char *arg1 = (char *) 0 ;
  float *arg2 = (float *) (float *)0 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(float **)&_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  arg4 = (float)_swig_go_3; 
  arg5 = (float)_swig_go_4; 
  
  result = (bool)ImGui::DragFloat3((char const *)arg1,arg2,arg3,arg4,arg5);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_DragFloat3__SWIG_3_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, float *_swig_go_1, float _swig_go_2, float _swig_go_3) {
  char *arg1 = (char *) 0 ;
  float *arg2 = (float *) (float *)0 ;
  float arg3 ;
  float arg4 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(float **)&_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  arg4 = (float)_swig_go_3; 
  
  result = (bool)ImGui::DragFloat3((char const *)arg1,arg2,arg3,arg4);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_DragFloat3__SWIG_4_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, float *_swig_go_1, float _swig_go_2) {
  char *arg1 = (char *) 0 ;
  float *arg2 = (float *) (float *)0 ;
  float arg3 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(float **)&_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  
  result = (bool)ImGui::DragFloat3((char const *)arg1,arg2,arg3);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_DragFloat3__SWIG_5_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, float *_swig_go_1) {
  char *arg1 = (char *) 0 ;
  float *arg2 = (float *) (float *)0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(float **)&_swig_go_1; 
  
  result = (bool)ImGui::DragFloat3((char const *)arg1,arg2);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_DragFloat4__SWIG_0_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, float *_swig_go_1, float _swig_go_2, float _swig_go_3, float _swig_go_4, _gostring_ _swig_go_5, intgo _swig_go_6) {
  char *arg1 = (char *) 0 ;
  float *arg2 = (float *) (float *)0 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  char *arg6 = (char *) 0 ;
  ImGuiSliderFlags arg7 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(float **)&_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  arg4 = (float)_swig_go_3; 
  arg5 = (float)_swig_go_4; 
  
  arg6 = (char *)malloc(_swig_go_5.n + 1);
  memcpy(arg6, _swig_go_5.p, _swig_go_5.n);
  arg6[_swig_go_5.n] = '\0';
  
  arg7 = (ImGuiSliderFlags)_swig_go_6; 
  
  result = (bool)ImGui::DragFloat4((char const *)arg1,arg2,arg3,arg4,arg5,(char const *)arg6,arg7);
  _swig_go_result = result; 
  free(arg1); 
  free(arg6); 
  return _swig_go_result;
}


bool _wrap_DragFloat4__SWIG_1_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, float *_swig_go_1, float _swig_go_2, float _swig_go_3, float _swig_go_4, _gostring_ _swig_go_5) {
  char *arg1 = (char *) 0 ;
  float *arg2 = (float *) (float *)0 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  char *arg6 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(float **)&_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  arg4 = (float)_swig_go_3; 
  arg5 = (float)_swig_go_4; 
  
  arg6 = (char *)malloc(_swig_go_5.n + 1);
  memcpy(arg6, _swig_go_5.p, _swig_go_5.n);
  arg6[_swig_go_5.n] = '\0';
  
  
  result = (bool)ImGui::DragFloat4((char const *)arg1,arg2,arg3,arg4,arg5,(char const *)arg6);
  _swig_go_result = result; 
  free(arg1); 
  free(arg6); 
  return _swig_go_result;
}


bool _wrap_DragFloat4__SWIG_2_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, float *_swig_go_1, float _swig_go_2, float _swig_go_3, float _swig_go_4) {
  char *arg1 = (char *) 0 ;
  float *arg2 = (float *) (float *)0 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(float **)&_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  arg4 = (float)_swig_go_3; 
  arg5 = (float)_swig_go_4; 
  
  result = (bool)ImGui::DragFloat4((char const *)arg1,arg2,arg3,arg4,arg5);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_DragFloat4__SWIG_3_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, float *_swig_go_1, float _swig_go_2, float _swig_go_3) {
  char *arg1 = (char *) 0 ;
  float *arg2 = (float *) (float *)0 ;
  float arg3 ;
  float arg4 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(float **)&_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  arg4 = (float)_swig_go_3; 
  
  result = (bool)ImGui::DragFloat4((char const *)arg1,arg2,arg3,arg4);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_DragFloat4__SWIG_4_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, float *_swig_go_1, float _swig_go_2) {
  char *arg1 = (char *) 0 ;
  float *arg2 = (float *) (float *)0 ;
  float arg3 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(float **)&_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  
  result = (bool)ImGui::DragFloat4((char const *)arg1,arg2,arg3);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_DragFloat4__SWIG_5_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, float *_swig_go_1) {
  char *arg1 = (char *) 0 ;
  float *arg2 = (float *) (float *)0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(float **)&_swig_go_1; 
  
  result = (bool)ImGui::DragFloat4((char const *)arg1,arg2);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_DragFloatRange2__SWIG_0_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, float *_swig_go_1, float *_swig_go_2, float _swig_go_3, float _swig_go_4, float _swig_go_5, _gostring_ _swig_go_6, _gostring_ _swig_go_7, intgo _swig_go_8) {
  char *arg1 = (char *) 0 ;
  float *arg2 = (float *) 0 ;
  float *arg3 = (float *) 0 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  char *arg7 = (char *) 0 ;
  char *arg8 = (char *) 0 ;
  ImGuiSliderFlags arg9 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(float **)&_swig_go_1; 
  arg3 = *(float **)&_swig_go_2; 
  arg4 = (float)_swig_go_3; 
  arg5 = (float)_swig_go_4; 
  arg6 = (float)_swig_go_5; 
  
  arg7 = (char *)malloc(_swig_go_6.n + 1);
  memcpy(arg7, _swig_go_6.p, _swig_go_6.n);
  arg7[_swig_go_6.n] = '\0';
  
  
  arg8 = (char *)malloc(_swig_go_7.n + 1);
  memcpy(arg8, _swig_go_7.p, _swig_go_7.n);
  arg8[_swig_go_7.n] = '\0';
  
  arg9 = (ImGuiSliderFlags)_swig_go_8; 
  
  result = (bool)ImGui::DragFloatRange2((char const *)arg1,arg2,arg3,arg4,arg5,arg6,(char const *)arg7,(char const *)arg8,arg9);
  _swig_go_result = result; 
  free(arg1); 
  free(arg7); 
  free(arg8); 
  return _swig_go_result;
}


bool _wrap_DragFloatRange2__SWIG_1_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, float *_swig_go_1, float *_swig_go_2, float _swig_go_3, float _swig_go_4, float _swig_go_5, _gostring_ _swig_go_6, _gostring_ _swig_go_7) {
  char *arg1 = (char *) 0 ;
  float *arg2 = (float *) 0 ;
  float *arg3 = (float *) 0 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  char *arg7 = (char *) 0 ;
  char *arg8 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(float **)&_swig_go_1; 
  arg3 = *(float **)&_swig_go_2; 
  arg4 = (float)_swig_go_3; 
  arg5 = (float)_swig_go_4; 
  arg6 = (float)_swig_go_5; 
  
  arg7 = (char *)malloc(_swig_go_6.n + 1);
  memcpy(arg7, _swig_go_6.p, _swig_go_6.n);
  arg7[_swig_go_6.n] = '\0';
  
  
  arg8 = (char *)malloc(_swig_go_7.n + 1);
  memcpy(arg8, _swig_go_7.p, _swig_go_7.n);
  arg8[_swig_go_7.n] = '\0';
  
  
  result = (bool)ImGui::DragFloatRange2((char const *)arg1,arg2,arg3,arg4,arg5,arg6,(char const *)arg7,(char const *)arg8);
  _swig_go_result = result; 
  free(arg1); 
  free(arg7); 
  free(arg8); 
  return _swig_go_result;
}


bool _wrap_DragFloatRange2__SWIG_2_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, float *_swig_go_1, float *_swig_go_2, float _swig_go_3, float _swig_go_4, float _swig_go_5, _gostring_ _swig_go_6) {
  char *arg1 = (char *) 0 ;
  float *arg2 = (float *) 0 ;
  float *arg3 = (float *) 0 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  char *arg7 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(float **)&_swig_go_1; 
  arg3 = *(float **)&_swig_go_2; 
  arg4 = (float)_swig_go_3; 
  arg5 = (float)_swig_go_4; 
  arg6 = (float)_swig_go_5; 
  
  arg7 = (char *)malloc(_swig_go_6.n + 1);
  memcpy(arg7, _swig_go_6.p, _swig_go_6.n);
  arg7[_swig_go_6.n] = '\0';
  
  
  result = (bool)ImGui::DragFloatRange2((char const *)arg1,arg2,arg3,arg4,arg5,arg6,(char const *)arg7);
  _swig_go_result = result; 
  free(arg1); 
  free(arg7); 
  return _swig_go_result;
}


bool _wrap_DragFloatRange2__SWIG_3_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, float *_swig_go_1, float *_swig_go_2, float _swig_go_3, float _swig_go_4, float _swig_go_5) {
  char *arg1 = (char *) 0 ;
  float *arg2 = (float *) 0 ;
  float *arg3 = (float *) 0 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(float **)&_swig_go_1; 
  arg3 = *(float **)&_swig_go_2; 
  arg4 = (float)_swig_go_3; 
  arg5 = (float)_swig_go_4; 
  arg6 = (float)_swig_go_5; 
  
  result = (bool)ImGui::DragFloatRange2((char const *)arg1,arg2,arg3,arg4,arg5,arg6);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_DragFloatRange2__SWIG_4_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, float *_swig_go_1, float *_swig_go_2, float _swig_go_3, float _swig_go_4) {
  char *arg1 = (char *) 0 ;
  float *arg2 = (float *) 0 ;
  float *arg3 = (float *) 0 ;
  float arg4 ;
  float arg5 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(float **)&_swig_go_1; 
  arg3 = *(float **)&_swig_go_2; 
  arg4 = (float)_swig_go_3; 
  arg5 = (float)_swig_go_4; 
  
  result = (bool)ImGui::DragFloatRange2((char const *)arg1,arg2,arg3,arg4,arg5);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_DragFloatRange2__SWIG_5_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, float *_swig_go_1, float *_swig_go_2, float _swig_go_3) {
  char *arg1 = (char *) 0 ;
  float *arg2 = (float *) 0 ;
  float *arg3 = (float *) 0 ;
  float arg4 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(float **)&_swig_go_1; 
  arg3 = *(float **)&_swig_go_2; 
  arg4 = (float)_swig_go_3; 
  
  result = (bool)ImGui::DragFloatRange2((char const *)arg1,arg2,arg3,arg4);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_DragFloatRange2__SWIG_6_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, float *_swig_go_1, float *_swig_go_2) {
  char *arg1 = (char *) 0 ;
  float *arg2 = (float *) 0 ;
  float *arg3 = (float *) 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(float **)&_swig_go_1; 
  arg3 = *(float **)&_swig_go_2; 
  
  result = (bool)ImGui::DragFloatRange2((char const *)arg1,arg2,arg3);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_DragInt__SWIG_0_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo *_swig_go_1, float _swig_go_2, intgo _swig_go_3, intgo _swig_go_4, _gostring_ _swig_go_5, intgo _swig_go_6) {
  char *arg1 = (char *) 0 ;
  int *arg2 = (int *) 0 ;
  float arg3 ;
  int arg4 ;
  int arg5 ;
  char *arg6 = (char *) 0 ;
  ImGuiSliderFlags arg7 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(int **)&_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  arg6 = (char *)malloc(_swig_go_5.n + 1);
  memcpy(arg6, _swig_go_5.p, _swig_go_5.n);
  arg6[_swig_go_5.n] = '\0';
  
  arg7 = (ImGuiSliderFlags)_swig_go_6; 
  
  result = (bool)ImGui::DragInt((char const *)arg1,arg2,arg3,arg4,arg5,(char const *)arg6,arg7);
  _swig_go_result = result; 
  free(arg1); 
  free(arg6); 
  return _swig_go_result;
}


bool _wrap_DragInt__SWIG_1_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo *_swig_go_1, float _swig_go_2, intgo _swig_go_3, intgo _swig_go_4, _gostring_ _swig_go_5) {
  char *arg1 = (char *) 0 ;
  int *arg2 = (int *) 0 ;
  float arg3 ;
  int arg4 ;
  int arg5 ;
  char *arg6 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(int **)&_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  arg6 = (char *)malloc(_swig_go_5.n + 1);
  memcpy(arg6, _swig_go_5.p, _swig_go_5.n);
  arg6[_swig_go_5.n] = '\0';
  
  
  result = (bool)ImGui::DragInt((char const *)arg1,arg2,arg3,arg4,arg5,(char const *)arg6);
  _swig_go_result = result; 
  free(arg1); 
  free(arg6); 
  return _swig_go_result;
}


bool _wrap_DragInt__SWIG_2_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo *_swig_go_1, float _swig_go_2, intgo _swig_go_3, intgo _swig_go_4) {
  char *arg1 = (char *) 0 ;
  int *arg2 = (int *) 0 ;
  float arg3 ;
  int arg4 ;
  int arg5 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(int **)&_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  result = (bool)ImGui::DragInt((char const *)arg1,arg2,arg3,arg4,arg5);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_DragInt__SWIG_3_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo *_swig_go_1, float _swig_go_2, intgo _swig_go_3) {
  char *arg1 = (char *) 0 ;
  int *arg2 = (int *) 0 ;
  float arg3 ;
  int arg4 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(int **)&_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  result = (bool)ImGui::DragInt((char const *)arg1,arg2,arg3,arg4);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_DragInt__SWIG_4_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo *_swig_go_1, float _swig_go_2) {
  char *arg1 = (char *) 0 ;
  int *arg2 = (int *) 0 ;
  float arg3 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(int **)&_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  
  result = (bool)ImGui::DragInt((char const *)arg1,arg2,arg3);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_DragInt__SWIG_5_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo *_swig_go_1) {
  char *arg1 = (char *) 0 ;
  int *arg2 = (int *) 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(int **)&_swig_go_1; 
  
  result = (bool)ImGui::DragInt((char const *)arg1,arg2);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_DragInt2__SWIG_0_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo *_swig_go_1, float _swig_go_2, intgo _swig_go_3, intgo _swig_go_4, _gostring_ _swig_go_5, intgo _swig_go_6) {
  char *arg1 = (char *) 0 ;
  int *arg2 = (int *) (int *)0 ;
  float arg3 ;
  int arg4 ;
  int arg5 ;
  char *arg6 = (char *) 0 ;
  ImGuiSliderFlags arg7 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(int **)&_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  arg6 = (char *)malloc(_swig_go_5.n + 1);
  memcpy(arg6, _swig_go_5.p, _swig_go_5.n);
  arg6[_swig_go_5.n] = '\0';
  
  arg7 = (ImGuiSliderFlags)_swig_go_6; 
  
  result = (bool)ImGui::DragInt2((char const *)arg1,arg2,arg3,arg4,arg5,(char const *)arg6,arg7);
  _swig_go_result = result; 
  free(arg1); 
  free(arg6); 
  return _swig_go_result;
}


bool _wrap_DragInt2__SWIG_1_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo *_swig_go_1, float _swig_go_2, intgo _swig_go_3, intgo _swig_go_4, _gostring_ _swig_go_5) {
  char *arg1 = (char *) 0 ;
  int *arg2 = (int *) (int *)0 ;
  float arg3 ;
  int arg4 ;
  int arg5 ;
  char *arg6 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(int **)&_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  arg6 = (char *)malloc(_swig_go_5.n + 1);
  memcpy(arg6, _swig_go_5.p, _swig_go_5.n);
  arg6[_swig_go_5.n] = '\0';
  
  
  result = (bool)ImGui::DragInt2((char const *)arg1,arg2,arg3,arg4,arg5,(char const *)arg6);
  _swig_go_result = result; 
  free(arg1); 
  free(arg6); 
  return _swig_go_result;
}


bool _wrap_DragInt2__SWIG_2_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo *_swig_go_1, float _swig_go_2, intgo _swig_go_3, intgo _swig_go_4) {
  char *arg1 = (char *) 0 ;
  int *arg2 = (int *) (int *)0 ;
  float arg3 ;
  int arg4 ;
  int arg5 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(int **)&_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  result = (bool)ImGui::DragInt2((char const *)arg1,arg2,arg3,arg4,arg5);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_DragInt2__SWIG_3_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo *_swig_go_1, float _swig_go_2, intgo _swig_go_3) {
  char *arg1 = (char *) 0 ;
  int *arg2 = (int *) (int *)0 ;
  float arg3 ;
  int arg4 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(int **)&_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  result = (bool)ImGui::DragInt2((char const *)arg1,arg2,arg3,arg4);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_DragInt2__SWIG_4_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo *_swig_go_1, float _swig_go_2) {
  char *arg1 = (char *) 0 ;
  int *arg2 = (int *) (int *)0 ;
  float arg3 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(int **)&_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  
  result = (bool)ImGui::DragInt2((char const *)arg1,arg2,arg3);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_DragInt2__SWIG_5_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo *_swig_go_1) {
  char *arg1 = (char *) 0 ;
  int *arg2 = (int *) (int *)0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(int **)&_swig_go_1; 
  
  result = (bool)ImGui::DragInt2((char const *)arg1,arg2);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_DragInt3__SWIG_0_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo *_swig_go_1, float _swig_go_2, intgo _swig_go_3, intgo _swig_go_4, _gostring_ _swig_go_5, intgo _swig_go_6) {
  char *arg1 = (char *) 0 ;
  int *arg2 = (int *) (int *)0 ;
  float arg3 ;
  int arg4 ;
  int arg5 ;
  char *arg6 = (char *) 0 ;
  ImGuiSliderFlags arg7 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(int **)&_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  arg6 = (char *)malloc(_swig_go_5.n + 1);
  memcpy(arg6, _swig_go_5.p, _swig_go_5.n);
  arg6[_swig_go_5.n] = '\0';
  
  arg7 = (ImGuiSliderFlags)_swig_go_6; 
  
  result = (bool)ImGui::DragInt3((char const *)arg1,arg2,arg3,arg4,arg5,(char const *)arg6,arg7);
  _swig_go_result = result; 
  free(arg1); 
  free(arg6); 
  return _swig_go_result;
}


bool _wrap_DragInt3__SWIG_1_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo *_swig_go_1, float _swig_go_2, intgo _swig_go_3, intgo _swig_go_4, _gostring_ _swig_go_5) {
  char *arg1 = (char *) 0 ;
  int *arg2 = (int *) (int *)0 ;
  float arg3 ;
  int arg4 ;
  int arg5 ;
  char *arg6 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(int **)&_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  arg6 = (char *)malloc(_swig_go_5.n + 1);
  memcpy(arg6, _swig_go_5.p, _swig_go_5.n);
  arg6[_swig_go_5.n] = '\0';
  
  
  result = (bool)ImGui::DragInt3((char const *)arg1,arg2,arg3,arg4,arg5,(char const *)arg6);
  _swig_go_result = result; 
  free(arg1); 
  free(arg6); 
  return _swig_go_result;
}


bool _wrap_DragInt3__SWIG_2_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo *_swig_go_1, float _swig_go_2, intgo _swig_go_3, intgo _swig_go_4) {
  char *arg1 = (char *) 0 ;
  int *arg2 = (int *) (int *)0 ;
  float arg3 ;
  int arg4 ;
  int arg5 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(int **)&_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  result = (bool)ImGui::DragInt3((char const *)arg1,arg2,arg3,arg4,arg5);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_DragInt3__SWIG_3_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo *_swig_go_1, float _swig_go_2, intgo _swig_go_3) {
  char *arg1 = (char *) 0 ;
  int *arg2 = (int *) (int *)0 ;
  float arg3 ;
  int arg4 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(int **)&_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  result = (bool)ImGui::DragInt3((char const *)arg1,arg2,arg3,arg4);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_DragInt3__SWIG_4_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo *_swig_go_1, float _swig_go_2) {
  char *arg1 = (char *) 0 ;
  int *arg2 = (int *) (int *)0 ;
  float arg3 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(int **)&_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  
  result = (bool)ImGui::DragInt3((char const *)arg1,arg2,arg3);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_DragInt3__SWIG_5_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo *_swig_go_1) {
  char *arg1 = (char *) 0 ;
  int *arg2 = (int *) (int *)0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(int **)&_swig_go_1; 
  
  result = (bool)ImGui::DragInt3((char const *)arg1,arg2);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_DragInt4__SWIG_0_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo *_swig_go_1, float _swig_go_2, intgo _swig_go_3, intgo _swig_go_4, _gostring_ _swig_go_5, intgo _swig_go_6) {
  char *arg1 = (char *) 0 ;
  int *arg2 = (int *) (int *)0 ;
  float arg3 ;
  int arg4 ;
  int arg5 ;
  char *arg6 = (char *) 0 ;
  ImGuiSliderFlags arg7 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(int **)&_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  arg6 = (char *)malloc(_swig_go_5.n + 1);
  memcpy(arg6, _swig_go_5.p, _swig_go_5.n);
  arg6[_swig_go_5.n] = '\0';
  
  arg7 = (ImGuiSliderFlags)_swig_go_6; 
  
  result = (bool)ImGui::DragInt4((char const *)arg1,arg2,arg3,arg4,arg5,(char const *)arg6,arg7);
  _swig_go_result = result; 
  free(arg1); 
  free(arg6); 
  return _swig_go_result;
}


bool _wrap_DragInt4__SWIG_1_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo *_swig_go_1, float _swig_go_2, intgo _swig_go_3, intgo _swig_go_4, _gostring_ _swig_go_5) {
  char *arg1 = (char *) 0 ;
  int *arg2 = (int *) (int *)0 ;
  float arg3 ;
  int arg4 ;
  int arg5 ;
  char *arg6 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(int **)&_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  arg6 = (char *)malloc(_swig_go_5.n + 1);
  memcpy(arg6, _swig_go_5.p, _swig_go_5.n);
  arg6[_swig_go_5.n] = '\0';
  
  
  result = (bool)ImGui::DragInt4((char const *)arg1,arg2,arg3,arg4,arg5,(char const *)arg6);
  _swig_go_result = result; 
  free(arg1); 
  free(arg6); 
  return _swig_go_result;
}


bool _wrap_DragInt4__SWIG_2_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo *_swig_go_1, float _swig_go_2, intgo _swig_go_3, intgo _swig_go_4) {
  char *arg1 = (char *) 0 ;
  int *arg2 = (int *) (int *)0 ;
  float arg3 ;
  int arg4 ;
  int arg5 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(int **)&_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  result = (bool)ImGui::DragInt4((char const *)arg1,arg2,arg3,arg4,arg5);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_DragInt4__SWIG_3_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo *_swig_go_1, float _swig_go_2, intgo _swig_go_3) {
  char *arg1 = (char *) 0 ;
  int *arg2 = (int *) (int *)0 ;
  float arg3 ;
  int arg4 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(int **)&_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  result = (bool)ImGui::DragInt4((char const *)arg1,arg2,arg3,arg4);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_DragInt4__SWIG_4_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo *_swig_go_1, float _swig_go_2) {
  char *arg1 = (char *) 0 ;
  int *arg2 = (int *) (int *)0 ;
  float arg3 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(int **)&_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  
  result = (bool)ImGui::DragInt4((char const *)arg1,arg2,arg3);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_DragInt4__SWIG_5_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo *_swig_go_1) {
  char *arg1 = (char *) 0 ;
  int *arg2 = (int *) (int *)0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(int **)&_swig_go_1; 
  
  result = (bool)ImGui::DragInt4((char const *)arg1,arg2);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_DragIntRange2__SWIG_0_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo *_swig_go_1, intgo *_swig_go_2, float _swig_go_3, intgo _swig_go_4, intgo _swig_go_5, _gostring_ _swig_go_6, _gostring_ _swig_go_7, intgo _swig_go_8) {
  char *arg1 = (char *) 0 ;
  int *arg2 = (int *) 0 ;
  int *arg3 = (int *) 0 ;
  float arg4 ;
  int arg5 ;
  int arg6 ;
  char *arg7 = (char *) 0 ;
  char *arg8 = (char *) 0 ;
  ImGuiSliderFlags arg9 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(int **)&_swig_go_1; 
  arg3 = *(int **)&_swig_go_2; 
  arg4 = (float)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  
  arg7 = (char *)malloc(_swig_go_6.n + 1);
  memcpy(arg7, _swig_go_6.p, _swig_go_6.n);
  arg7[_swig_go_6.n] = '\0';
  
  
  arg8 = (char *)malloc(_swig_go_7.n + 1);
  memcpy(arg8, _swig_go_7.p, _swig_go_7.n);
  arg8[_swig_go_7.n] = '\0';
  
  arg9 = (ImGuiSliderFlags)_swig_go_8; 
  
  result = (bool)ImGui::DragIntRange2((char const *)arg1,arg2,arg3,arg4,arg5,arg6,(char const *)arg7,(char const *)arg8,arg9);
  _swig_go_result = result; 
  free(arg1); 
  free(arg7); 
  free(arg8); 
  return _swig_go_result;
}


bool _wrap_DragIntRange2__SWIG_1_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo *_swig_go_1, intgo *_swig_go_2, float _swig_go_3, intgo _swig_go_4, intgo _swig_go_5, _gostring_ _swig_go_6, _gostring_ _swig_go_7) {
  char *arg1 = (char *) 0 ;
  int *arg2 = (int *) 0 ;
  int *arg3 = (int *) 0 ;
  float arg4 ;
  int arg5 ;
  int arg6 ;
  char *arg7 = (char *) 0 ;
  char *arg8 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(int **)&_swig_go_1; 
  arg3 = *(int **)&_swig_go_2; 
  arg4 = (float)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  
  arg7 = (char *)malloc(_swig_go_6.n + 1);
  memcpy(arg7, _swig_go_6.p, _swig_go_6.n);
  arg7[_swig_go_6.n] = '\0';
  
  
  arg8 = (char *)malloc(_swig_go_7.n + 1);
  memcpy(arg8, _swig_go_7.p, _swig_go_7.n);
  arg8[_swig_go_7.n] = '\0';
  
  
  result = (bool)ImGui::DragIntRange2((char const *)arg1,arg2,arg3,arg4,arg5,arg6,(char const *)arg7,(char const *)arg8);
  _swig_go_result = result; 
  free(arg1); 
  free(arg7); 
  free(arg8); 
  return _swig_go_result;
}


bool _wrap_DragIntRange2__SWIG_2_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo *_swig_go_1, intgo *_swig_go_2, float _swig_go_3, intgo _swig_go_4, intgo _swig_go_5, _gostring_ _swig_go_6) {
  char *arg1 = (char *) 0 ;
  int *arg2 = (int *) 0 ;
  int *arg3 = (int *) 0 ;
  float arg4 ;
  int arg5 ;
  int arg6 ;
  char *arg7 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(int **)&_swig_go_1; 
  arg3 = *(int **)&_swig_go_2; 
  arg4 = (float)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  
  arg7 = (char *)malloc(_swig_go_6.n + 1);
  memcpy(arg7, _swig_go_6.p, _swig_go_6.n);
  arg7[_swig_go_6.n] = '\0';
  
  
  result = (bool)ImGui::DragIntRange2((char const *)arg1,arg2,arg3,arg4,arg5,arg6,(char const *)arg7);
  _swig_go_result = result; 
  free(arg1); 
  free(arg7); 
  return _swig_go_result;
}


bool _wrap_DragIntRange2__SWIG_3_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo *_swig_go_1, intgo *_swig_go_2, float _swig_go_3, intgo _swig_go_4, intgo _swig_go_5) {
  char *arg1 = (char *) 0 ;
  int *arg2 = (int *) 0 ;
  int *arg3 = (int *) 0 ;
  float arg4 ;
  int arg5 ;
  int arg6 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(int **)&_swig_go_1; 
  arg3 = *(int **)&_swig_go_2; 
  arg4 = (float)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  
  result = (bool)ImGui::DragIntRange2((char const *)arg1,arg2,arg3,arg4,arg5,arg6);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_DragIntRange2__SWIG_4_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo *_swig_go_1, intgo *_swig_go_2, float _swig_go_3, intgo _swig_go_4) {
  char *arg1 = (char *) 0 ;
  int *arg2 = (int *) 0 ;
  int *arg3 = (int *) 0 ;
  float arg4 ;
  int arg5 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(int **)&_swig_go_1; 
  arg3 = *(int **)&_swig_go_2; 
  arg4 = (float)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  result = (bool)ImGui::DragIntRange2((char const *)arg1,arg2,arg3,arg4,arg5);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_DragIntRange2__SWIG_5_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo *_swig_go_1, intgo *_swig_go_2, float _swig_go_3) {
  char *arg1 = (char *) 0 ;
  int *arg2 = (int *) 0 ;
  int *arg3 = (int *) 0 ;
  float arg4 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(int **)&_swig_go_1; 
  arg3 = *(int **)&_swig_go_2; 
  arg4 = (float)_swig_go_3; 
  
  result = (bool)ImGui::DragIntRange2((char const *)arg1,arg2,arg3,arg4);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_DragIntRange2__SWIG_6_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo *_swig_go_1, intgo *_swig_go_2) {
  char *arg1 = (char *) 0 ;
  int *arg2 = (int *) 0 ;
  int *arg3 = (int *) 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(int **)&_swig_go_1; 
  arg3 = *(int **)&_swig_go_2; 
  
  result = (bool)ImGui::DragIntRange2((char const *)arg1,arg2,arg3);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_DragScalar__SWIG_0_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo _swig_go_1, void *_swig_go_2, float _swig_go_3, void *_swig_go_4, void *_swig_go_5, _gostring_ _swig_go_6, intgo _swig_go_7) {
  char *arg1 = (char *) 0 ;
  ImGuiDataType arg2 ;
  void *arg3 = (void *) 0 ;
  float arg4 ;
  void *arg5 = (void *) 0 ;
  void *arg6 = (void *) 0 ;
  char *arg7 = (char *) 0 ;
  ImGuiSliderFlags arg8 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = (ImGuiDataType)_swig_go_1; 
  arg3 = *(void **)&_swig_go_2; 
  arg4 = (float)_swig_go_3; 
  arg5 = *(void **)&_swig_go_4; 
  arg6 = *(void **)&_swig_go_5; 
  
  arg7 = (char *)malloc(_swig_go_6.n + 1);
  memcpy(arg7, _swig_go_6.p, _swig_go_6.n);
  arg7[_swig_go_6.n] = '\0';
  
  arg8 = (ImGuiSliderFlags)_swig_go_7; 
  
  result = (bool)ImGui::DragScalar((char const *)arg1,arg2,arg3,arg4,(void const *)arg5,(void const *)arg6,(char const *)arg7,arg8);
  _swig_go_result = result; 
  free(arg1); 
  free(arg7); 
  return _swig_go_result;
}


bool _wrap_DragScalar__SWIG_1_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo _swig_go_1, void *_swig_go_2, float _swig_go_3, void *_swig_go_4, void *_swig_go_5, _gostring_ _swig_go_6) {
  char *arg1 = (char *) 0 ;
  ImGuiDataType arg2 ;
  void *arg3 = (void *) 0 ;
  float arg4 ;
  void *arg5 = (void *) 0 ;
  void *arg6 = (void *) 0 ;
  char *arg7 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = (ImGuiDataType)_swig_go_1; 
  arg3 = *(void **)&_swig_go_2; 
  arg4 = (float)_swig_go_3; 
  arg5 = *(void **)&_swig_go_4; 
  arg6 = *(void **)&_swig_go_5; 
  
  arg7 = (char *)malloc(_swig_go_6.n + 1);
  memcpy(arg7, _swig_go_6.p, _swig_go_6.n);
  arg7[_swig_go_6.n] = '\0';
  
  
  result = (bool)ImGui::DragScalar((char const *)arg1,arg2,arg3,arg4,(void const *)arg5,(void const *)arg6,(char const *)arg7);
  _swig_go_result = result; 
  free(arg1); 
  free(arg7); 
  return _swig_go_result;
}


bool _wrap_DragScalar__SWIG_2_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo _swig_go_1, void *_swig_go_2, float _swig_go_3, void *_swig_go_4, void *_swig_go_5) {
  char *arg1 = (char *) 0 ;
  ImGuiDataType arg2 ;
  void *arg3 = (void *) 0 ;
  float arg4 ;
  void *arg5 = (void *) 0 ;
  void *arg6 = (void *) 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = (ImGuiDataType)_swig_go_1; 
  arg3 = *(void **)&_swig_go_2; 
  arg4 = (float)_swig_go_3; 
  arg5 = *(void **)&_swig_go_4; 
  arg6 = *(void **)&_swig_go_5; 
  
  result = (bool)ImGui::DragScalar((char const *)arg1,arg2,arg3,arg4,(void const *)arg5,(void const *)arg6);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_DragScalar__SWIG_3_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo _swig_go_1, void *_swig_go_2, float _swig_go_3, void *_swig_go_4) {
  char *arg1 = (char *) 0 ;
  ImGuiDataType arg2 ;
  void *arg3 = (void *) 0 ;
  float arg4 ;
  void *arg5 = (void *) 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = (ImGuiDataType)_swig_go_1; 
  arg3 = *(void **)&_swig_go_2; 
  arg4 = (float)_swig_go_3; 
  arg5 = *(void **)&_swig_go_4; 
  
  result = (bool)ImGui::DragScalar((char const *)arg1,arg2,arg3,arg4,(void const *)arg5);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_DragScalar__SWIG_4_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo _swig_go_1, void *_swig_go_2, float _swig_go_3) {
  char *arg1 = (char *) 0 ;
  ImGuiDataType arg2 ;
  void *arg3 = (void *) 0 ;
  float arg4 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = (ImGuiDataType)_swig_go_1; 
  arg3 = *(void **)&_swig_go_2; 
  arg4 = (float)_swig_go_3; 
  
  result = (bool)ImGui::DragScalar((char const *)arg1,arg2,arg3,arg4);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_DragScalar__SWIG_5_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo _swig_go_1, void *_swig_go_2) {
  char *arg1 = (char *) 0 ;
  ImGuiDataType arg2 ;
  void *arg3 = (void *) 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = (ImGuiDataType)_swig_go_1; 
  arg3 = *(void **)&_swig_go_2; 
  
  result = (bool)ImGui::DragScalar((char const *)arg1,arg2,arg3);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_DragScalarN__SWIG_0_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo _swig_go_1, void *_swig_go_2, intgo _swig_go_3, float _swig_go_4, void *_swig_go_5, void *_swig_go_6, _gostring_ _swig_go_7, intgo _swig_go_8) {
  char *arg1 = (char *) 0 ;
  ImGuiDataType arg2 ;
  void *arg3 = (void *) 0 ;
  int arg4 ;
  float arg5 ;
  void *arg6 = (void *) 0 ;
  void *arg7 = (void *) 0 ;
  char *arg8 = (char *) 0 ;
  ImGuiSliderFlags arg9 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = (ImGuiDataType)_swig_go_1; 
  arg3 = *(void **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (float)_swig_go_4; 
  arg6 = *(void **)&_swig_go_5; 
  arg7 = *(void **)&_swig_go_6; 
  
  arg8 = (char *)malloc(_swig_go_7.n + 1);
  memcpy(arg8, _swig_go_7.p, _swig_go_7.n);
  arg8[_swig_go_7.n] = '\0';
  
  arg9 = (ImGuiSliderFlags)_swig_go_8; 
  
  result = (bool)ImGui::DragScalarN((char const *)arg1,arg2,arg3,arg4,arg5,(void const *)arg6,(void const *)arg7,(char const *)arg8,arg9);
  _swig_go_result = result; 
  free(arg1); 
  free(arg8); 
  return _swig_go_result;
}


bool _wrap_DragScalarN__SWIG_1_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo _swig_go_1, void *_swig_go_2, intgo _swig_go_3, float _swig_go_4, void *_swig_go_5, void *_swig_go_6, _gostring_ _swig_go_7) {
  char *arg1 = (char *) 0 ;
  ImGuiDataType arg2 ;
  void *arg3 = (void *) 0 ;
  int arg4 ;
  float arg5 ;
  void *arg6 = (void *) 0 ;
  void *arg7 = (void *) 0 ;
  char *arg8 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = (ImGuiDataType)_swig_go_1; 
  arg3 = *(void **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (float)_swig_go_4; 
  arg6 = *(void **)&_swig_go_5; 
  arg7 = *(void **)&_swig_go_6; 
  
  arg8 = (char *)malloc(_swig_go_7.n + 1);
  memcpy(arg8, _swig_go_7.p, _swig_go_7.n);
  arg8[_swig_go_7.n] = '\0';
  
  
  result = (bool)ImGui::DragScalarN((char const *)arg1,arg2,arg3,arg4,arg5,(void const *)arg6,(void const *)arg7,(char const *)arg8);
  _swig_go_result = result; 
  free(arg1); 
  free(arg8); 
  return _swig_go_result;
}


bool _wrap_DragScalarN__SWIG_2_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo _swig_go_1, void *_swig_go_2, intgo _swig_go_3, float _swig_go_4, void *_swig_go_5, void *_swig_go_6) {
  char *arg1 = (char *) 0 ;
  ImGuiDataType arg2 ;
  void *arg3 = (void *) 0 ;
  int arg4 ;
  float arg5 ;
  void *arg6 = (void *) 0 ;
  void *arg7 = (void *) 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = (ImGuiDataType)_swig_go_1; 
  arg3 = *(void **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (float)_swig_go_4; 
  arg6 = *(void **)&_swig_go_5; 
  arg7 = *(void **)&_swig_go_6; 
  
  result = (bool)ImGui::DragScalarN((char const *)arg1,arg2,arg3,arg4,arg5,(void const *)arg6,(void const *)arg7);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_DragScalarN__SWIG_3_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo _swig_go_1, void *_swig_go_2, intgo _swig_go_3, float _swig_go_4, void *_swig_go_5) {
  char *arg1 = (char *) 0 ;
  ImGuiDataType arg2 ;
  void *arg3 = (void *) 0 ;
  int arg4 ;
  float arg5 ;
  void *arg6 = (void *) 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = (ImGuiDataType)_swig_go_1; 
  arg3 = *(void **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (float)_swig_go_4; 
  arg6 = *(void **)&_swig_go_5; 
  
  result = (bool)ImGui::DragScalarN((char const *)arg1,arg2,arg3,arg4,arg5,(void const *)arg6);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_DragScalarN__SWIG_4_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo _swig_go_1, void *_swig_go_2, intgo _swig_go_3, float _swig_go_4) {
  char *arg1 = (char *) 0 ;
  ImGuiDataType arg2 ;
  void *arg3 = (void *) 0 ;
  int arg4 ;
  float arg5 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = (ImGuiDataType)_swig_go_1; 
  arg3 = *(void **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (float)_swig_go_4; 
  
  result = (bool)ImGui::DragScalarN((char const *)arg1,arg2,arg3,arg4,arg5);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_DragScalarN__SWIG_5_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo _swig_go_1, void *_swig_go_2, intgo _swig_go_3) {
  char *arg1 = (char *) 0 ;
  ImGuiDataType arg2 ;
  void *arg3 = (void *) 0 ;
  int arg4 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = (ImGuiDataType)_swig_go_1; 
  arg3 = *(void **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  result = (bool)ImGui::DragScalarN((char const *)arg1,arg2,arg3,arg4);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_SliderFloat__SWIG_0_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, float *_swig_go_1, float _swig_go_2, float _swig_go_3, _gostring_ _swig_go_4, intgo _swig_go_5) {
  char *arg1 = (char *) 0 ;
  float *arg2 = (float *) 0 ;
  float arg3 ;
  float arg4 ;
  char *arg5 = (char *) 0 ;
  ImGuiSliderFlags arg6 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(float **)&_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  arg4 = (float)_swig_go_3; 
  
  arg5 = (char *)malloc(_swig_go_4.n + 1);
  memcpy(arg5, _swig_go_4.p, _swig_go_4.n);
  arg5[_swig_go_4.n] = '\0';
  
  arg6 = (ImGuiSliderFlags)_swig_go_5; 
  
  result = (bool)ImGui::SliderFloat((char const *)arg1,arg2,arg3,arg4,(char const *)arg5,arg6);
  _swig_go_result = result; 
  free(arg1); 
  free(arg5); 
  return _swig_go_result;
}


bool _wrap_SliderFloat__SWIG_1_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, float *_swig_go_1, float _swig_go_2, float _swig_go_3, _gostring_ _swig_go_4) {
  char *arg1 = (char *) 0 ;
  float *arg2 = (float *) 0 ;
  float arg3 ;
  float arg4 ;
  char *arg5 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(float **)&_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  arg4 = (float)_swig_go_3; 
  
  arg5 = (char *)malloc(_swig_go_4.n + 1);
  memcpy(arg5, _swig_go_4.p, _swig_go_4.n);
  arg5[_swig_go_4.n] = '\0';
  
  
  result = (bool)ImGui::SliderFloat((char const *)arg1,arg2,arg3,arg4,(char const *)arg5);
  _swig_go_result = result; 
  free(arg1); 
  free(arg5); 
  return _swig_go_result;
}


bool _wrap_SliderFloat__SWIG_2_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, float *_swig_go_1, float _swig_go_2, float _swig_go_3) {
  char *arg1 = (char *) 0 ;
  float *arg2 = (float *) 0 ;
  float arg3 ;
  float arg4 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(float **)&_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  arg4 = (float)_swig_go_3; 
  
  result = (bool)ImGui::SliderFloat((char const *)arg1,arg2,arg3,arg4);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_SliderFloat2__SWIG_0_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, float *_swig_go_1, float _swig_go_2, float _swig_go_3, _gostring_ _swig_go_4, intgo _swig_go_5) {
  char *arg1 = (char *) 0 ;
  float *arg2 = (float *) (float *)0 ;
  float arg3 ;
  float arg4 ;
  char *arg5 = (char *) 0 ;
  ImGuiSliderFlags arg6 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(float **)&_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  arg4 = (float)_swig_go_3; 
  
  arg5 = (char *)malloc(_swig_go_4.n + 1);
  memcpy(arg5, _swig_go_4.p, _swig_go_4.n);
  arg5[_swig_go_4.n] = '\0';
  
  arg6 = (ImGuiSliderFlags)_swig_go_5; 
  
  result = (bool)ImGui::SliderFloat2((char const *)arg1,arg2,arg3,arg4,(char const *)arg5,arg6);
  _swig_go_result = result; 
  free(arg1); 
  free(arg5); 
  return _swig_go_result;
}


bool _wrap_SliderFloat2__SWIG_1_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, float *_swig_go_1, float _swig_go_2, float _swig_go_3, _gostring_ _swig_go_4) {
  char *arg1 = (char *) 0 ;
  float *arg2 = (float *) (float *)0 ;
  float arg3 ;
  float arg4 ;
  char *arg5 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(float **)&_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  arg4 = (float)_swig_go_3; 
  
  arg5 = (char *)malloc(_swig_go_4.n + 1);
  memcpy(arg5, _swig_go_4.p, _swig_go_4.n);
  arg5[_swig_go_4.n] = '\0';
  
  
  result = (bool)ImGui::SliderFloat2((char const *)arg1,arg2,arg3,arg4,(char const *)arg5);
  _swig_go_result = result; 
  free(arg1); 
  free(arg5); 
  return _swig_go_result;
}


bool _wrap_SliderFloat2__SWIG_2_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, float *_swig_go_1, float _swig_go_2, float _swig_go_3) {
  char *arg1 = (char *) 0 ;
  float *arg2 = (float *) (float *)0 ;
  float arg3 ;
  float arg4 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(float **)&_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  arg4 = (float)_swig_go_3; 
  
  result = (bool)ImGui::SliderFloat2((char const *)arg1,arg2,arg3,arg4);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_SliderFloat3__SWIG_0_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, float *_swig_go_1, float _swig_go_2, float _swig_go_3, _gostring_ _swig_go_4, intgo _swig_go_5) {
  char *arg1 = (char *) 0 ;
  float *arg2 = (float *) (float *)0 ;
  float arg3 ;
  float arg4 ;
  char *arg5 = (char *) 0 ;
  ImGuiSliderFlags arg6 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(float **)&_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  arg4 = (float)_swig_go_3; 
  
  arg5 = (char *)malloc(_swig_go_4.n + 1);
  memcpy(arg5, _swig_go_4.p, _swig_go_4.n);
  arg5[_swig_go_4.n] = '\0';
  
  arg6 = (ImGuiSliderFlags)_swig_go_5; 
  
  result = (bool)ImGui::SliderFloat3((char const *)arg1,arg2,arg3,arg4,(char const *)arg5,arg6);
  _swig_go_result = result; 
  free(arg1); 
  free(arg5); 
  return _swig_go_result;
}


bool _wrap_SliderFloat3__SWIG_1_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, float *_swig_go_1, float _swig_go_2, float _swig_go_3, _gostring_ _swig_go_4) {
  char *arg1 = (char *) 0 ;
  float *arg2 = (float *) (float *)0 ;
  float arg3 ;
  float arg4 ;
  char *arg5 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(float **)&_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  arg4 = (float)_swig_go_3; 
  
  arg5 = (char *)malloc(_swig_go_4.n + 1);
  memcpy(arg5, _swig_go_4.p, _swig_go_4.n);
  arg5[_swig_go_4.n] = '\0';
  
  
  result = (bool)ImGui::SliderFloat3((char const *)arg1,arg2,arg3,arg4,(char const *)arg5);
  _swig_go_result = result; 
  free(arg1); 
  free(arg5); 
  return _swig_go_result;
}


bool _wrap_SliderFloat3__SWIG_2_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, float *_swig_go_1, float _swig_go_2, float _swig_go_3) {
  char *arg1 = (char *) 0 ;
  float *arg2 = (float *) (float *)0 ;
  float arg3 ;
  float arg4 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(float **)&_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  arg4 = (float)_swig_go_3; 
  
  result = (bool)ImGui::SliderFloat3((char const *)arg1,arg2,arg3,arg4);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_SliderFloat4__SWIG_0_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, float *_swig_go_1, float _swig_go_2, float _swig_go_3, _gostring_ _swig_go_4, intgo _swig_go_5) {
  char *arg1 = (char *) 0 ;
  float *arg2 = (float *) (float *)0 ;
  float arg3 ;
  float arg4 ;
  char *arg5 = (char *) 0 ;
  ImGuiSliderFlags arg6 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(float **)&_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  arg4 = (float)_swig_go_3; 
  
  arg5 = (char *)malloc(_swig_go_4.n + 1);
  memcpy(arg5, _swig_go_4.p, _swig_go_4.n);
  arg5[_swig_go_4.n] = '\0';
  
  arg6 = (ImGuiSliderFlags)_swig_go_5; 
  
  result = (bool)ImGui::SliderFloat4((char const *)arg1,arg2,arg3,arg4,(char const *)arg5,arg6);
  _swig_go_result = result; 
  free(arg1); 
  free(arg5); 
  return _swig_go_result;
}


bool _wrap_SliderFloat4__SWIG_1_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, float *_swig_go_1, float _swig_go_2, float _swig_go_3, _gostring_ _swig_go_4) {
  char *arg1 = (char *) 0 ;
  float *arg2 = (float *) (float *)0 ;
  float arg3 ;
  float arg4 ;
  char *arg5 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(float **)&_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  arg4 = (float)_swig_go_3; 
  
  arg5 = (char *)malloc(_swig_go_4.n + 1);
  memcpy(arg5, _swig_go_4.p, _swig_go_4.n);
  arg5[_swig_go_4.n] = '\0';
  
  
  result = (bool)ImGui::SliderFloat4((char const *)arg1,arg2,arg3,arg4,(char const *)arg5);
  _swig_go_result = result; 
  free(arg1); 
  free(arg5); 
  return _swig_go_result;
}


bool _wrap_SliderFloat4__SWIG_2_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, float *_swig_go_1, float _swig_go_2, float _swig_go_3) {
  char *arg1 = (char *) 0 ;
  float *arg2 = (float *) (float *)0 ;
  float arg3 ;
  float arg4 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(float **)&_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  arg4 = (float)_swig_go_3; 
  
  result = (bool)ImGui::SliderFloat4((char const *)arg1,arg2,arg3,arg4);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_SliderAngle__SWIG_0_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, float *_swig_go_1, float _swig_go_2, float _swig_go_3, _gostring_ _swig_go_4, intgo _swig_go_5) {
  char *arg1 = (char *) 0 ;
  float *arg2 = (float *) 0 ;
  float arg3 ;
  float arg4 ;
  char *arg5 = (char *) 0 ;
  ImGuiSliderFlags arg6 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(float **)&_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  arg4 = (float)_swig_go_3; 
  
  arg5 = (char *)malloc(_swig_go_4.n + 1);
  memcpy(arg5, _swig_go_4.p, _swig_go_4.n);
  arg5[_swig_go_4.n] = '\0';
  
  arg6 = (ImGuiSliderFlags)_swig_go_5; 
  
  result = (bool)ImGui::SliderAngle((char const *)arg1,arg2,arg3,arg4,(char const *)arg5,arg6);
  _swig_go_result = result; 
  free(arg1); 
  free(arg5); 
  return _swig_go_result;
}


bool _wrap_SliderAngle__SWIG_1_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, float *_swig_go_1, float _swig_go_2, float _swig_go_3, _gostring_ _swig_go_4) {
  char *arg1 = (char *) 0 ;
  float *arg2 = (float *) 0 ;
  float arg3 ;
  float arg4 ;
  char *arg5 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(float **)&_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  arg4 = (float)_swig_go_3; 
  
  arg5 = (char *)malloc(_swig_go_4.n + 1);
  memcpy(arg5, _swig_go_4.p, _swig_go_4.n);
  arg5[_swig_go_4.n] = '\0';
  
  
  result = (bool)ImGui::SliderAngle((char const *)arg1,arg2,arg3,arg4,(char const *)arg5);
  _swig_go_result = result; 
  free(arg1); 
  free(arg5); 
  return _swig_go_result;
}


bool _wrap_SliderAngle__SWIG_2_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, float *_swig_go_1, float _swig_go_2, float _swig_go_3) {
  char *arg1 = (char *) 0 ;
  float *arg2 = (float *) 0 ;
  float arg3 ;
  float arg4 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(float **)&_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  arg4 = (float)_swig_go_3; 
  
  result = (bool)ImGui::SliderAngle((char const *)arg1,arg2,arg3,arg4);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_SliderAngle__SWIG_3_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, float *_swig_go_1, float _swig_go_2) {
  char *arg1 = (char *) 0 ;
  float *arg2 = (float *) 0 ;
  float arg3 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(float **)&_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  
  result = (bool)ImGui::SliderAngle((char const *)arg1,arg2,arg3);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_SliderAngle__SWIG_4_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, float *_swig_go_1) {
  char *arg1 = (char *) 0 ;
  float *arg2 = (float *) 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(float **)&_swig_go_1; 
  
  result = (bool)ImGui::SliderAngle((char const *)arg1,arg2);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_SliderInt__SWIG_0_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo *_swig_go_1, intgo _swig_go_2, intgo _swig_go_3, _gostring_ _swig_go_4, intgo _swig_go_5) {
  char *arg1 = (char *) 0 ;
  int *arg2 = (int *) 0 ;
  int arg3 ;
  int arg4 ;
  char *arg5 = (char *) 0 ;
  ImGuiSliderFlags arg6 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(int **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  arg5 = (char *)malloc(_swig_go_4.n + 1);
  memcpy(arg5, _swig_go_4.p, _swig_go_4.n);
  arg5[_swig_go_4.n] = '\0';
  
  arg6 = (ImGuiSliderFlags)_swig_go_5; 
  
  result = (bool)ImGui::SliderInt((char const *)arg1,arg2,arg3,arg4,(char const *)arg5,arg6);
  _swig_go_result = result; 
  free(arg1); 
  free(arg5); 
  return _swig_go_result;
}


bool _wrap_SliderInt__SWIG_1_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo *_swig_go_1, intgo _swig_go_2, intgo _swig_go_3, _gostring_ _swig_go_4) {
  char *arg1 = (char *) 0 ;
  int *arg2 = (int *) 0 ;
  int arg3 ;
  int arg4 ;
  char *arg5 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(int **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  arg5 = (char *)malloc(_swig_go_4.n + 1);
  memcpy(arg5, _swig_go_4.p, _swig_go_4.n);
  arg5[_swig_go_4.n] = '\0';
  
  
  result = (bool)ImGui::SliderInt((char const *)arg1,arg2,arg3,arg4,(char const *)arg5);
  _swig_go_result = result; 
  free(arg1); 
  free(arg5); 
  return _swig_go_result;
}


bool _wrap_SliderInt__SWIG_2_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo *_swig_go_1, intgo _swig_go_2, intgo _swig_go_3) {
  char *arg1 = (char *) 0 ;
  int *arg2 = (int *) 0 ;
  int arg3 ;
  int arg4 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(int **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  result = (bool)ImGui::SliderInt((char const *)arg1,arg2,arg3,arg4);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_SliderInt2__SWIG_0_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo *_swig_go_1, intgo _swig_go_2, intgo _swig_go_3, _gostring_ _swig_go_4, intgo _swig_go_5) {
  char *arg1 = (char *) 0 ;
  int *arg2 = (int *) (int *)0 ;
  int arg3 ;
  int arg4 ;
  char *arg5 = (char *) 0 ;
  ImGuiSliderFlags arg6 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(int **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  arg5 = (char *)malloc(_swig_go_4.n + 1);
  memcpy(arg5, _swig_go_4.p, _swig_go_4.n);
  arg5[_swig_go_4.n] = '\0';
  
  arg6 = (ImGuiSliderFlags)_swig_go_5; 
  
  result = (bool)ImGui::SliderInt2((char const *)arg1,arg2,arg3,arg4,(char const *)arg5,arg6);
  _swig_go_result = result; 
  free(arg1); 
  free(arg5); 
  return _swig_go_result;
}


bool _wrap_SliderInt2__SWIG_1_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo *_swig_go_1, intgo _swig_go_2, intgo _swig_go_3, _gostring_ _swig_go_4) {
  char *arg1 = (char *) 0 ;
  int *arg2 = (int *) (int *)0 ;
  int arg3 ;
  int arg4 ;
  char *arg5 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(int **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  arg5 = (char *)malloc(_swig_go_4.n + 1);
  memcpy(arg5, _swig_go_4.p, _swig_go_4.n);
  arg5[_swig_go_4.n] = '\0';
  
  
  result = (bool)ImGui::SliderInt2((char const *)arg1,arg2,arg3,arg4,(char const *)arg5);
  _swig_go_result = result; 
  free(arg1); 
  free(arg5); 
  return _swig_go_result;
}


bool _wrap_SliderInt2__SWIG_2_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo *_swig_go_1, intgo _swig_go_2, intgo _swig_go_3) {
  char *arg1 = (char *) 0 ;
  int *arg2 = (int *) (int *)0 ;
  int arg3 ;
  int arg4 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(int **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  result = (bool)ImGui::SliderInt2((char const *)arg1,arg2,arg3,arg4);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_SliderInt3__SWIG_0_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo *_swig_go_1, intgo _swig_go_2, intgo _swig_go_3, _gostring_ _swig_go_4, intgo _swig_go_5) {
  char *arg1 = (char *) 0 ;
  int *arg2 = (int *) (int *)0 ;
  int arg3 ;
  int arg4 ;
  char *arg5 = (char *) 0 ;
  ImGuiSliderFlags arg6 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(int **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  arg5 = (char *)malloc(_swig_go_4.n + 1);
  memcpy(arg5, _swig_go_4.p, _swig_go_4.n);
  arg5[_swig_go_4.n] = '\0';
  
  arg6 = (ImGuiSliderFlags)_swig_go_5; 
  
  result = (bool)ImGui::SliderInt3((char const *)arg1,arg2,arg3,arg4,(char const *)arg5,arg6);
  _swig_go_result = result; 
  free(arg1); 
  free(arg5); 
  return _swig_go_result;
}


bool _wrap_SliderInt3__SWIG_1_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo *_swig_go_1, intgo _swig_go_2, intgo _swig_go_3, _gostring_ _swig_go_4) {
  char *arg1 = (char *) 0 ;
  int *arg2 = (int *) (int *)0 ;
  int arg3 ;
  int arg4 ;
  char *arg5 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(int **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  arg5 = (char *)malloc(_swig_go_4.n + 1);
  memcpy(arg5, _swig_go_4.p, _swig_go_4.n);
  arg5[_swig_go_4.n] = '\0';
  
  
  result = (bool)ImGui::SliderInt3((char const *)arg1,arg2,arg3,arg4,(char const *)arg5);
  _swig_go_result = result; 
  free(arg1); 
  free(arg5); 
  return _swig_go_result;
}


bool _wrap_SliderInt3__SWIG_2_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo *_swig_go_1, intgo _swig_go_2, intgo _swig_go_3) {
  char *arg1 = (char *) 0 ;
  int *arg2 = (int *) (int *)0 ;
  int arg3 ;
  int arg4 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(int **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  result = (bool)ImGui::SliderInt3((char const *)arg1,arg2,arg3,arg4);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_SliderInt4__SWIG_0_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo *_swig_go_1, intgo _swig_go_2, intgo _swig_go_3, _gostring_ _swig_go_4, intgo _swig_go_5) {
  char *arg1 = (char *) 0 ;
  int *arg2 = (int *) (int *)0 ;
  int arg3 ;
  int arg4 ;
  char *arg5 = (char *) 0 ;
  ImGuiSliderFlags arg6 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(int **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  arg5 = (char *)malloc(_swig_go_4.n + 1);
  memcpy(arg5, _swig_go_4.p, _swig_go_4.n);
  arg5[_swig_go_4.n] = '\0';
  
  arg6 = (ImGuiSliderFlags)_swig_go_5; 
  
  result = (bool)ImGui::SliderInt4((char const *)arg1,arg2,arg3,arg4,(char const *)arg5,arg6);
  _swig_go_result = result; 
  free(arg1); 
  free(arg5); 
  return _swig_go_result;
}


bool _wrap_SliderInt4__SWIG_1_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo *_swig_go_1, intgo _swig_go_2, intgo _swig_go_3, _gostring_ _swig_go_4) {
  char *arg1 = (char *) 0 ;
  int *arg2 = (int *) (int *)0 ;
  int arg3 ;
  int arg4 ;
  char *arg5 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(int **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  arg5 = (char *)malloc(_swig_go_4.n + 1);
  memcpy(arg5, _swig_go_4.p, _swig_go_4.n);
  arg5[_swig_go_4.n] = '\0';
  
  
  result = (bool)ImGui::SliderInt4((char const *)arg1,arg2,arg3,arg4,(char const *)arg5);
  _swig_go_result = result; 
  free(arg1); 
  free(arg5); 
  return _swig_go_result;
}


bool _wrap_SliderInt4__SWIG_2_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo *_swig_go_1, intgo _swig_go_2, intgo _swig_go_3) {
  char *arg1 = (char *) 0 ;
  int *arg2 = (int *) (int *)0 ;
  int arg3 ;
  int arg4 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(int **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  result = (bool)ImGui::SliderInt4((char const *)arg1,arg2,arg3,arg4);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_SliderScalar__SWIG_0_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo _swig_go_1, void *_swig_go_2, void *_swig_go_3, void *_swig_go_4, _gostring_ _swig_go_5, intgo _swig_go_6) {
  char *arg1 = (char *) 0 ;
  ImGuiDataType arg2 ;
  void *arg3 = (void *) 0 ;
  void *arg4 = (void *) 0 ;
  void *arg5 = (void *) 0 ;
  char *arg6 = (char *) 0 ;
  ImGuiSliderFlags arg7 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = (ImGuiDataType)_swig_go_1; 
  arg3 = *(void **)&_swig_go_2; 
  arg4 = *(void **)&_swig_go_3; 
  arg5 = *(void **)&_swig_go_4; 
  
  arg6 = (char *)malloc(_swig_go_5.n + 1);
  memcpy(arg6, _swig_go_5.p, _swig_go_5.n);
  arg6[_swig_go_5.n] = '\0';
  
  arg7 = (ImGuiSliderFlags)_swig_go_6; 
  
  result = (bool)ImGui::SliderScalar((char const *)arg1,arg2,arg3,(void const *)arg4,(void const *)arg5,(char const *)arg6,arg7);
  _swig_go_result = result; 
  free(arg1); 
  free(arg6); 
  return _swig_go_result;
}


bool _wrap_SliderScalar__SWIG_1_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo _swig_go_1, void *_swig_go_2, void *_swig_go_3, void *_swig_go_4, _gostring_ _swig_go_5) {
  char *arg1 = (char *) 0 ;
  ImGuiDataType arg2 ;
  void *arg3 = (void *) 0 ;
  void *arg4 = (void *) 0 ;
  void *arg5 = (void *) 0 ;
  char *arg6 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = (ImGuiDataType)_swig_go_1; 
  arg3 = *(void **)&_swig_go_2; 
  arg4 = *(void **)&_swig_go_3; 
  arg5 = *(void **)&_swig_go_4; 
  
  arg6 = (char *)malloc(_swig_go_5.n + 1);
  memcpy(arg6, _swig_go_5.p, _swig_go_5.n);
  arg6[_swig_go_5.n] = '\0';
  
  
  result = (bool)ImGui::SliderScalar((char const *)arg1,arg2,arg3,(void const *)arg4,(void const *)arg5,(char const *)arg6);
  _swig_go_result = result; 
  free(arg1); 
  free(arg6); 
  return _swig_go_result;
}


bool _wrap_SliderScalar__SWIG_2_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo _swig_go_1, void *_swig_go_2, void *_swig_go_3, void *_swig_go_4) {
  char *arg1 = (char *) 0 ;
  ImGuiDataType arg2 ;
  void *arg3 = (void *) 0 ;
  void *arg4 = (void *) 0 ;
  void *arg5 = (void *) 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = (ImGuiDataType)_swig_go_1; 
  arg3 = *(void **)&_swig_go_2; 
  arg4 = *(void **)&_swig_go_3; 
  arg5 = *(void **)&_swig_go_4; 
  
  result = (bool)ImGui::SliderScalar((char const *)arg1,arg2,arg3,(void const *)arg4,(void const *)arg5);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_SliderScalarN__SWIG_0_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo _swig_go_1, void *_swig_go_2, intgo _swig_go_3, void *_swig_go_4, void *_swig_go_5, _gostring_ _swig_go_6, intgo _swig_go_7) {
  char *arg1 = (char *) 0 ;
  ImGuiDataType arg2 ;
  void *arg3 = (void *) 0 ;
  int arg4 ;
  void *arg5 = (void *) 0 ;
  void *arg6 = (void *) 0 ;
  char *arg7 = (char *) 0 ;
  ImGuiSliderFlags arg8 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = (ImGuiDataType)_swig_go_1; 
  arg3 = *(void **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = *(void **)&_swig_go_4; 
  arg6 = *(void **)&_swig_go_5; 
  
  arg7 = (char *)malloc(_swig_go_6.n + 1);
  memcpy(arg7, _swig_go_6.p, _swig_go_6.n);
  arg7[_swig_go_6.n] = '\0';
  
  arg8 = (ImGuiSliderFlags)_swig_go_7; 
  
  result = (bool)ImGui::SliderScalarN((char const *)arg1,arg2,arg3,arg4,(void const *)arg5,(void const *)arg6,(char const *)arg7,arg8);
  _swig_go_result = result; 
  free(arg1); 
  free(arg7); 
  return _swig_go_result;
}


bool _wrap_SliderScalarN__SWIG_1_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo _swig_go_1, void *_swig_go_2, intgo _swig_go_3, void *_swig_go_4, void *_swig_go_5, _gostring_ _swig_go_6) {
  char *arg1 = (char *) 0 ;
  ImGuiDataType arg2 ;
  void *arg3 = (void *) 0 ;
  int arg4 ;
  void *arg5 = (void *) 0 ;
  void *arg6 = (void *) 0 ;
  char *arg7 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = (ImGuiDataType)_swig_go_1; 
  arg3 = *(void **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = *(void **)&_swig_go_4; 
  arg6 = *(void **)&_swig_go_5; 
  
  arg7 = (char *)malloc(_swig_go_6.n + 1);
  memcpy(arg7, _swig_go_6.p, _swig_go_6.n);
  arg7[_swig_go_6.n] = '\0';
  
  
  result = (bool)ImGui::SliderScalarN((char const *)arg1,arg2,arg3,arg4,(void const *)arg5,(void const *)arg6,(char const *)arg7);
  _swig_go_result = result; 
  free(arg1); 
  free(arg7); 
  return _swig_go_result;
}


bool _wrap_SliderScalarN__SWIG_2_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo _swig_go_1, void *_swig_go_2, intgo _swig_go_3, void *_swig_go_4, void *_swig_go_5) {
  char *arg1 = (char *) 0 ;
  ImGuiDataType arg2 ;
  void *arg3 = (void *) 0 ;
  int arg4 ;
  void *arg5 = (void *) 0 ;
  void *arg6 = (void *) 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = (ImGuiDataType)_swig_go_1; 
  arg3 = *(void **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = *(void **)&_swig_go_4; 
  arg6 = *(void **)&_swig_go_5; 
  
  result = (bool)ImGui::SliderScalarN((char const *)arg1,arg2,arg3,arg4,(void const *)arg5,(void const *)arg6);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_VSliderFloat__SWIG_0_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, ImVec2 *_swig_go_1, float *_swig_go_2, float _swig_go_3, float _swig_go_4, _gostring_ _swig_go_5, intgo _swig_go_6) {
  char *arg1 = (char *) 0 ;
  ImVec2 *arg2 = 0 ;
  float *arg3 = (float *) 0 ;
  float arg4 ;
  float arg5 ;
  char *arg6 = (char *) 0 ;
  ImGuiSliderFlags arg7 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(ImVec2 **)&_swig_go_1; 
  arg3 = *(float **)&_swig_go_2; 
  arg4 = (float)_swig_go_3; 
  arg5 = (float)_swig_go_4; 
  
  arg6 = (char *)malloc(_swig_go_5.n + 1);
  memcpy(arg6, _swig_go_5.p, _swig_go_5.n);
  arg6[_swig_go_5.n] = '\0';
  
  arg7 = (ImGuiSliderFlags)_swig_go_6; 
  
  result = (bool)ImGui::VSliderFloat((char const *)arg1,(ImVec2 const &)*arg2,arg3,arg4,arg5,(char const *)arg6,arg7);
  _swig_go_result = result; 
  free(arg1); 
  free(arg6); 
  return _swig_go_result;
}


bool _wrap_VSliderFloat__SWIG_1_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, ImVec2 *_swig_go_1, float *_swig_go_2, float _swig_go_3, float _swig_go_4, _gostring_ _swig_go_5) {
  char *arg1 = (char *) 0 ;
  ImVec2 *arg2 = 0 ;
  float *arg3 = (float *) 0 ;
  float arg4 ;
  float arg5 ;
  char *arg6 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(ImVec2 **)&_swig_go_1; 
  arg3 = *(float **)&_swig_go_2; 
  arg4 = (float)_swig_go_3; 
  arg5 = (float)_swig_go_4; 
  
  arg6 = (char *)malloc(_swig_go_5.n + 1);
  memcpy(arg6, _swig_go_5.p, _swig_go_5.n);
  arg6[_swig_go_5.n] = '\0';
  
  
  result = (bool)ImGui::VSliderFloat((char const *)arg1,(ImVec2 const &)*arg2,arg3,arg4,arg5,(char const *)arg6);
  _swig_go_result = result; 
  free(arg1); 
  free(arg6); 
  return _swig_go_result;
}


bool _wrap_VSliderFloat__SWIG_2_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, ImVec2 *_swig_go_1, float *_swig_go_2, float _swig_go_3, float _swig_go_4) {
  char *arg1 = (char *) 0 ;
  ImVec2 *arg2 = 0 ;
  float *arg3 = (float *) 0 ;
  float arg4 ;
  float arg5 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(ImVec2 **)&_swig_go_1; 
  arg3 = *(float **)&_swig_go_2; 
  arg4 = (float)_swig_go_3; 
  arg5 = (float)_swig_go_4; 
  
  result = (bool)ImGui::VSliderFloat((char const *)arg1,(ImVec2 const &)*arg2,arg3,arg4,arg5);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_VSliderInt__SWIG_0_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, ImVec2 *_swig_go_1, intgo *_swig_go_2, intgo _swig_go_3, intgo _swig_go_4, _gostring_ _swig_go_5, intgo _swig_go_6) {
  char *arg1 = (char *) 0 ;
  ImVec2 *arg2 = 0 ;
  int *arg3 = (int *) 0 ;
  int arg4 ;
  int arg5 ;
  char *arg6 = (char *) 0 ;
  ImGuiSliderFlags arg7 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(ImVec2 **)&_swig_go_1; 
  arg3 = *(int **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  arg6 = (char *)malloc(_swig_go_5.n + 1);
  memcpy(arg6, _swig_go_5.p, _swig_go_5.n);
  arg6[_swig_go_5.n] = '\0';
  
  arg7 = (ImGuiSliderFlags)_swig_go_6; 
  
  result = (bool)ImGui::VSliderInt((char const *)arg1,(ImVec2 const &)*arg2,arg3,arg4,arg5,(char const *)arg6,arg7);
  _swig_go_result = result; 
  free(arg1); 
  free(arg6); 
  return _swig_go_result;
}


bool _wrap_VSliderInt__SWIG_1_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, ImVec2 *_swig_go_1, intgo *_swig_go_2, intgo _swig_go_3, intgo _swig_go_4, _gostring_ _swig_go_5) {
  char *arg1 = (char *) 0 ;
  ImVec2 *arg2 = 0 ;
  int *arg3 = (int *) 0 ;
  int arg4 ;
  int arg5 ;
  char *arg6 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(ImVec2 **)&_swig_go_1; 
  arg3 = *(int **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  arg6 = (char *)malloc(_swig_go_5.n + 1);
  memcpy(arg6, _swig_go_5.p, _swig_go_5.n);
  arg6[_swig_go_5.n] = '\0';
  
  
  result = (bool)ImGui::VSliderInt((char const *)arg1,(ImVec2 const &)*arg2,arg3,arg4,arg5,(char const *)arg6);
  _swig_go_result = result; 
  free(arg1); 
  free(arg6); 
  return _swig_go_result;
}


bool _wrap_VSliderInt__SWIG_2_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, ImVec2 *_swig_go_1, intgo *_swig_go_2, intgo _swig_go_3, intgo _swig_go_4) {
  char *arg1 = (char *) 0 ;
  ImVec2 *arg2 = 0 ;
  int *arg3 = (int *) 0 ;
  int arg4 ;
  int arg5 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(ImVec2 **)&_swig_go_1; 
  arg3 = *(int **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  result = (bool)ImGui::VSliderInt((char const *)arg1,(ImVec2 const &)*arg2,arg3,arg4,arg5);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_VSliderScalar__SWIG_0_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, ImVec2 *_swig_go_1, intgo _swig_go_2, void *_swig_go_3, void *_swig_go_4, void *_swig_go_5, _gostring_ _swig_go_6, intgo _swig_go_7) {
  char *arg1 = (char *) 0 ;
  ImVec2 *arg2 = 0 ;
  ImGuiDataType arg3 ;
  void *arg4 = (void *) 0 ;
  void *arg5 = (void *) 0 ;
  void *arg6 = (void *) 0 ;
  char *arg7 = (char *) 0 ;
  ImGuiSliderFlags arg8 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(ImVec2 **)&_swig_go_1; 
  arg3 = (ImGuiDataType)_swig_go_2; 
  arg4 = *(void **)&_swig_go_3; 
  arg5 = *(void **)&_swig_go_4; 
  arg6 = *(void **)&_swig_go_5; 
  
  arg7 = (char *)malloc(_swig_go_6.n + 1);
  memcpy(arg7, _swig_go_6.p, _swig_go_6.n);
  arg7[_swig_go_6.n] = '\0';
  
  arg8 = (ImGuiSliderFlags)_swig_go_7; 
  
  result = (bool)ImGui::VSliderScalar((char const *)arg1,(ImVec2 const &)*arg2,arg3,arg4,(void const *)arg5,(void const *)arg6,(char const *)arg7,arg8);
  _swig_go_result = result; 
  free(arg1); 
  free(arg7); 
  return _swig_go_result;
}


bool _wrap_VSliderScalar__SWIG_1_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, ImVec2 *_swig_go_1, intgo _swig_go_2, void *_swig_go_3, void *_swig_go_4, void *_swig_go_5, _gostring_ _swig_go_6) {
  char *arg1 = (char *) 0 ;
  ImVec2 *arg2 = 0 ;
  ImGuiDataType arg3 ;
  void *arg4 = (void *) 0 ;
  void *arg5 = (void *) 0 ;
  void *arg6 = (void *) 0 ;
  char *arg7 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(ImVec2 **)&_swig_go_1; 
  arg3 = (ImGuiDataType)_swig_go_2; 
  arg4 = *(void **)&_swig_go_3; 
  arg5 = *(void **)&_swig_go_4; 
  arg6 = *(void **)&_swig_go_5; 
  
  arg7 = (char *)malloc(_swig_go_6.n + 1);
  memcpy(arg7, _swig_go_6.p, _swig_go_6.n);
  arg7[_swig_go_6.n] = '\0';
  
  
  result = (bool)ImGui::VSliderScalar((char const *)arg1,(ImVec2 const &)*arg2,arg3,arg4,(void const *)arg5,(void const *)arg6,(char const *)arg7);
  _swig_go_result = result; 
  free(arg1); 
  free(arg7); 
  return _swig_go_result;
}


bool _wrap_VSliderScalar__SWIG_2_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, ImVec2 *_swig_go_1, intgo _swig_go_2, void *_swig_go_3, void *_swig_go_4, void *_swig_go_5) {
  char *arg1 = (char *) 0 ;
  ImVec2 *arg2 = 0 ;
  ImGuiDataType arg3 ;
  void *arg4 = (void *) 0 ;
  void *arg5 = (void *) 0 ;
  void *arg6 = (void *) 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(ImVec2 **)&_swig_go_1; 
  arg3 = (ImGuiDataType)_swig_go_2; 
  arg4 = *(void **)&_swig_go_3; 
  arg5 = *(void **)&_swig_go_4; 
  arg6 = *(void **)&_swig_go_5; 
  
  result = (bool)ImGui::VSliderScalar((char const *)arg1,(ImVec2 const &)*arg2,arg3,arg4,(void const *)arg5,(void const *)arg6);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_InputText__SWIG_0_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, _gostring_ _swig_go_1, long long _swig_go_2, intgo _swig_go_3, void* _swig_go_4, void *_swig_go_5) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  size_t arg3 ;
  ImGuiInputTextFlags arg4 ;
  ImGuiInputTextCallback arg5 = (ImGuiInputTextCallback) 0 ;
  void *arg6 = (void *) 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (size_t)_swig_go_2; 
  arg4 = (ImGuiInputTextFlags)_swig_go_3; 
  arg5 = *(ImGuiInputTextCallback *)&_swig_go_4; 
  arg6 = *(void **)&_swig_go_5; 
  
  result = (bool)ImGui::InputText((char const *)arg1,arg2,SWIG_STD_MOVE(arg3),arg4,arg5,arg6);
  _swig_go_result = result; 
  free(arg1); 
  free(arg2); 
  return _swig_go_result;
}


bool _wrap_InputText__SWIG_1_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, _gostring_ _swig_go_1, long long _swig_go_2, intgo _swig_go_3, void* _swig_go_4) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  size_t arg3 ;
  ImGuiInputTextFlags arg4 ;
  ImGuiInputTextCallback arg5 = (ImGuiInputTextCallback) 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (size_t)_swig_go_2; 
  arg4 = (ImGuiInputTextFlags)_swig_go_3; 
  arg5 = *(ImGuiInputTextCallback *)&_swig_go_4; 
  
  result = (bool)ImGui::InputText((char const *)arg1,arg2,SWIG_STD_MOVE(arg3),arg4,arg5);
  _swig_go_result = result; 
  free(arg1); 
  free(arg2); 
  return _swig_go_result;
}


bool _wrap_InputText__SWIG_2_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, _gostring_ _swig_go_1, long long _swig_go_2, intgo _swig_go_3) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  size_t arg3 ;
  ImGuiInputTextFlags arg4 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (size_t)_swig_go_2; 
  arg4 = (ImGuiInputTextFlags)_swig_go_3; 
  
  result = (bool)ImGui::InputText((char const *)arg1,arg2,SWIG_STD_MOVE(arg3),arg4);
  _swig_go_result = result; 
  free(arg1); 
  free(arg2); 
  return _swig_go_result;
}


bool _wrap_InputText__SWIG_3_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, _gostring_ _swig_go_1, long long _swig_go_2) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  size_t arg3 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (size_t)_swig_go_2; 
  
  result = (bool)ImGui::InputText((char const *)arg1,arg2,SWIG_STD_MOVE(arg3));
  _swig_go_result = result; 
  free(arg1); 
  free(arg2); 
  return _swig_go_result;
}


bool _wrap_InputTextMultiline__SWIG_0_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, _gostring_ _swig_go_1, long long _swig_go_2, ImVec2 *_swig_go_3, intgo _swig_go_4, void* _swig_go_5, void *_swig_go_6) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  size_t arg3 ;
  ImVec2 *arg4 = 0 ;
  ImGuiInputTextFlags arg5 ;
  ImGuiInputTextCallback arg6 = (ImGuiInputTextCallback) 0 ;
  void *arg7 = (void *) 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (size_t)_swig_go_2; 
  arg4 = *(ImVec2 **)&_swig_go_3; 
  arg5 = (ImGuiInputTextFlags)_swig_go_4; 
  arg6 = *(ImGuiInputTextCallback *)&_swig_go_5; 
  arg7 = *(void **)&_swig_go_6; 
  
  result = (bool)ImGui::InputTextMultiline((char const *)arg1,arg2,SWIG_STD_MOVE(arg3),(ImVec2 const &)*arg4,arg5,arg6,arg7);
  _swig_go_result = result; 
  free(arg1); 
  free(arg2); 
  return _swig_go_result;
}


bool _wrap_InputTextMultiline__SWIG_1_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, _gostring_ _swig_go_1, long long _swig_go_2, ImVec2 *_swig_go_3, intgo _swig_go_4, void* _swig_go_5) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  size_t arg3 ;
  ImVec2 *arg4 = 0 ;
  ImGuiInputTextFlags arg5 ;
  ImGuiInputTextCallback arg6 = (ImGuiInputTextCallback) 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (size_t)_swig_go_2; 
  arg4 = *(ImVec2 **)&_swig_go_3; 
  arg5 = (ImGuiInputTextFlags)_swig_go_4; 
  arg6 = *(ImGuiInputTextCallback *)&_swig_go_5; 
  
  result = (bool)ImGui::InputTextMultiline((char const *)arg1,arg2,SWIG_STD_MOVE(arg3),(ImVec2 const &)*arg4,arg5,arg6);
  _swig_go_result = result; 
  free(arg1); 
  free(arg2); 
  return _swig_go_result;
}


bool _wrap_InputTextMultiline__SWIG_2_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, _gostring_ _swig_go_1, long long _swig_go_2, ImVec2 *_swig_go_3, intgo _swig_go_4) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  size_t arg3 ;
  ImVec2 *arg4 = 0 ;
  ImGuiInputTextFlags arg5 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (size_t)_swig_go_2; 
  arg4 = *(ImVec2 **)&_swig_go_3; 
  arg5 = (ImGuiInputTextFlags)_swig_go_4; 
  
  result = (bool)ImGui::InputTextMultiline((char const *)arg1,arg2,SWIG_STD_MOVE(arg3),(ImVec2 const &)*arg4,arg5);
  _swig_go_result = result; 
  free(arg1); 
  free(arg2); 
  return _swig_go_result;
}


bool _wrap_InputTextMultiline__SWIG_3_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, _gostring_ _swig_go_1, long long _swig_go_2, ImVec2 *_swig_go_3) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  size_t arg3 ;
  ImVec2 *arg4 = 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (size_t)_swig_go_2; 
  arg4 = *(ImVec2 **)&_swig_go_3; 
  
  result = (bool)ImGui::InputTextMultiline((char const *)arg1,arg2,SWIG_STD_MOVE(arg3),(ImVec2 const &)*arg4);
  _swig_go_result = result; 
  free(arg1); 
  free(arg2); 
  return _swig_go_result;
}


bool _wrap_InputTextMultiline__SWIG_4_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, _gostring_ _swig_go_1, long long _swig_go_2) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  size_t arg3 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (size_t)_swig_go_2; 
  
  result = (bool)ImGui::InputTextMultiline((char const *)arg1,arg2,SWIG_STD_MOVE(arg3));
  _swig_go_result = result; 
  free(arg1); 
  free(arg2); 
  return _swig_go_result;
}


bool _wrap_InputTextWithHint__SWIG_0_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, _gostring_ _swig_go_1, _gostring_ _swig_go_2, long long _swig_go_3, intgo _swig_go_4, void* _swig_go_5, void *_swig_go_6) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  size_t arg4 ;
  ImGuiInputTextFlags arg5 ;
  ImGuiInputTextCallback arg6 = (ImGuiInputTextCallback) 0 ;
  void *arg7 = (void *) 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  arg4 = (size_t)_swig_go_3; 
  arg5 = (ImGuiInputTextFlags)_swig_go_4; 
  arg6 = *(ImGuiInputTextCallback *)&_swig_go_5; 
  arg7 = *(void **)&_swig_go_6; 
  
  result = (bool)ImGui::InputTextWithHint((char const *)arg1,(char const *)arg2,arg3,SWIG_STD_MOVE(arg4),arg5,arg6,arg7);
  _swig_go_result = result; 
  free(arg1); 
  free(arg2); 
  free(arg3); 
  return _swig_go_result;
}


bool _wrap_InputTextWithHint__SWIG_1_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, _gostring_ _swig_go_1, _gostring_ _swig_go_2, long long _swig_go_3, intgo _swig_go_4, void* _swig_go_5) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  size_t arg4 ;
  ImGuiInputTextFlags arg5 ;
  ImGuiInputTextCallback arg6 = (ImGuiInputTextCallback) 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  arg4 = (size_t)_swig_go_3; 
  arg5 = (ImGuiInputTextFlags)_swig_go_4; 
  arg6 = *(ImGuiInputTextCallback *)&_swig_go_5; 
  
  result = (bool)ImGui::InputTextWithHint((char const *)arg1,(char const *)arg2,arg3,SWIG_STD_MOVE(arg4),arg5,arg6);
  _swig_go_result = result; 
  free(arg1); 
  free(arg2); 
  free(arg3); 
  return _swig_go_result;
}


bool _wrap_InputTextWithHint__SWIG_2_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, _gostring_ _swig_go_1, _gostring_ _swig_go_2, long long _swig_go_3, intgo _swig_go_4) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  size_t arg4 ;
  ImGuiInputTextFlags arg5 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  arg4 = (size_t)_swig_go_3; 
  arg5 = (ImGuiInputTextFlags)_swig_go_4; 
  
  result = (bool)ImGui::InputTextWithHint((char const *)arg1,(char const *)arg2,arg3,SWIG_STD_MOVE(arg4),arg5);
  _swig_go_result = result; 
  free(arg1); 
  free(arg2); 
  free(arg3); 
  return _swig_go_result;
}


bool _wrap_InputTextWithHint__SWIG_3_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, _gostring_ _swig_go_1, _gostring_ _swig_go_2, long long _swig_go_3) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  size_t arg4 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  arg4 = (size_t)_swig_go_3; 
  
  result = (bool)ImGui::InputTextWithHint((char const *)arg1,(char const *)arg2,arg3,SWIG_STD_MOVE(arg4));
  _swig_go_result = result; 
  free(arg1); 
  free(arg2); 
  free(arg3); 
  return _swig_go_result;
}


bool _wrap_InputFloat__SWIG_0_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, float *_swig_go_1, float _swig_go_2, float _swig_go_3, _gostring_ _swig_go_4, intgo _swig_go_5) {
  char *arg1 = (char *) 0 ;
  float *arg2 = (float *) 0 ;
  float arg3 ;
  float arg4 ;
  char *arg5 = (char *) 0 ;
  ImGuiInputTextFlags arg6 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(float **)&_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  arg4 = (float)_swig_go_3; 
  
  arg5 = (char *)malloc(_swig_go_4.n + 1);
  memcpy(arg5, _swig_go_4.p, _swig_go_4.n);
  arg5[_swig_go_4.n] = '\0';
  
  arg6 = (ImGuiInputTextFlags)_swig_go_5; 
  
  result = (bool)ImGui::InputFloat((char const *)arg1,arg2,arg3,arg4,(char const *)arg5,arg6);
  _swig_go_result = result; 
  free(arg1); 
  free(arg5); 
  return _swig_go_result;
}


bool _wrap_InputFloat__SWIG_1_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, float *_swig_go_1, float _swig_go_2, float _swig_go_3, _gostring_ _swig_go_4) {
  char *arg1 = (char *) 0 ;
  float *arg2 = (float *) 0 ;
  float arg3 ;
  float arg4 ;
  char *arg5 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(float **)&_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  arg4 = (float)_swig_go_3; 
  
  arg5 = (char *)malloc(_swig_go_4.n + 1);
  memcpy(arg5, _swig_go_4.p, _swig_go_4.n);
  arg5[_swig_go_4.n] = '\0';
  
  
  result = (bool)ImGui::InputFloat((char const *)arg1,arg2,arg3,arg4,(char const *)arg5);
  _swig_go_result = result; 
  free(arg1); 
  free(arg5); 
  return _swig_go_result;
}


bool _wrap_InputFloat__SWIG_2_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, float *_swig_go_1, float _swig_go_2, float _swig_go_3) {
  char *arg1 = (char *) 0 ;
  float *arg2 = (float *) 0 ;
  float arg3 ;
  float arg4 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(float **)&_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  arg4 = (float)_swig_go_3; 
  
  result = (bool)ImGui::InputFloat((char const *)arg1,arg2,arg3,arg4);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_InputFloat__SWIG_3_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, float *_swig_go_1, float _swig_go_2) {
  char *arg1 = (char *) 0 ;
  float *arg2 = (float *) 0 ;
  float arg3 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(float **)&_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  
  result = (bool)ImGui::InputFloat((char const *)arg1,arg2,arg3);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_InputFloat__SWIG_4_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, float *_swig_go_1) {
  char *arg1 = (char *) 0 ;
  float *arg2 = (float *) 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(float **)&_swig_go_1; 
  
  result = (bool)ImGui::InputFloat((char const *)arg1,arg2);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_InputFloat2__SWIG_0_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, float *_swig_go_1, _gostring_ _swig_go_2, intgo _swig_go_3) {
  char *arg1 = (char *) 0 ;
  float *arg2 = (float *) (float *)0 ;
  char *arg3 = (char *) 0 ;
  ImGuiInputTextFlags arg4 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(float **)&_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  arg4 = (ImGuiInputTextFlags)_swig_go_3; 
  
  result = (bool)ImGui::InputFloat2((char const *)arg1,arg2,(char const *)arg3,arg4);
  _swig_go_result = result; 
  free(arg1); 
  free(arg3); 
  return _swig_go_result;
}


bool _wrap_InputFloat2__SWIG_1_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, float *_swig_go_1, _gostring_ _swig_go_2) {
  char *arg1 = (char *) 0 ;
  float *arg2 = (float *) (float *)0 ;
  char *arg3 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(float **)&_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  result = (bool)ImGui::InputFloat2((char const *)arg1,arg2,(char const *)arg3);
  _swig_go_result = result; 
  free(arg1); 
  free(arg3); 
  return _swig_go_result;
}


bool _wrap_InputFloat2__SWIG_2_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, float *_swig_go_1) {
  char *arg1 = (char *) 0 ;
  float *arg2 = (float *) (float *)0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(float **)&_swig_go_1; 
  
  result = (bool)ImGui::InputFloat2((char const *)arg1,arg2);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_InputFloat3__SWIG_0_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, float *_swig_go_1, _gostring_ _swig_go_2, intgo _swig_go_3) {
  char *arg1 = (char *) 0 ;
  float *arg2 = (float *) (float *)0 ;
  char *arg3 = (char *) 0 ;
  ImGuiInputTextFlags arg4 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(float **)&_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  arg4 = (ImGuiInputTextFlags)_swig_go_3; 
  
  result = (bool)ImGui::InputFloat3((char const *)arg1,arg2,(char const *)arg3,arg4);
  _swig_go_result = result; 
  free(arg1); 
  free(arg3); 
  return _swig_go_result;
}


bool _wrap_InputFloat3__SWIG_1_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, float *_swig_go_1, _gostring_ _swig_go_2) {
  char *arg1 = (char *) 0 ;
  float *arg2 = (float *) (float *)0 ;
  char *arg3 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(float **)&_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  result = (bool)ImGui::InputFloat3((char const *)arg1,arg2,(char const *)arg3);
  _swig_go_result = result; 
  free(arg1); 
  free(arg3); 
  return _swig_go_result;
}


bool _wrap_InputFloat3__SWIG_2_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, float *_swig_go_1) {
  char *arg1 = (char *) 0 ;
  float *arg2 = (float *) (float *)0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(float **)&_swig_go_1; 
  
  result = (bool)ImGui::InputFloat3((char const *)arg1,arg2);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_InputFloat4__SWIG_0_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, float *_swig_go_1, _gostring_ _swig_go_2, intgo _swig_go_3) {
  char *arg1 = (char *) 0 ;
  float *arg2 = (float *) (float *)0 ;
  char *arg3 = (char *) 0 ;
  ImGuiInputTextFlags arg4 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(float **)&_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  arg4 = (ImGuiInputTextFlags)_swig_go_3; 
  
  result = (bool)ImGui::InputFloat4((char const *)arg1,arg2,(char const *)arg3,arg4);
  _swig_go_result = result; 
  free(arg1); 
  free(arg3); 
  return _swig_go_result;
}


bool _wrap_InputFloat4__SWIG_1_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, float *_swig_go_1, _gostring_ _swig_go_2) {
  char *arg1 = (char *) 0 ;
  float *arg2 = (float *) (float *)0 ;
  char *arg3 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(float **)&_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  result = (bool)ImGui::InputFloat4((char const *)arg1,arg2,(char const *)arg3);
  _swig_go_result = result; 
  free(arg1); 
  free(arg3); 
  return _swig_go_result;
}


bool _wrap_InputFloat4__SWIG_2_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, float *_swig_go_1) {
  char *arg1 = (char *) 0 ;
  float *arg2 = (float *) (float *)0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(float **)&_swig_go_1; 
  
  result = (bool)ImGui::InputFloat4((char const *)arg1,arg2);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_InputInt__SWIG_0_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo *_swig_go_1, intgo _swig_go_2, intgo _swig_go_3, intgo _swig_go_4) {
  char *arg1 = (char *) 0 ;
  int *arg2 = (int *) 0 ;
  int arg3 ;
  int arg4 ;
  ImGuiInputTextFlags arg5 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(int **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (ImGuiInputTextFlags)_swig_go_4; 
  
  result = (bool)ImGui::InputInt((char const *)arg1,arg2,arg3,arg4,arg5);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_InputInt__SWIG_1_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo *_swig_go_1, intgo _swig_go_2, intgo _swig_go_3) {
  char *arg1 = (char *) 0 ;
  int *arg2 = (int *) 0 ;
  int arg3 ;
  int arg4 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(int **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  result = (bool)ImGui::InputInt((char const *)arg1,arg2,arg3,arg4);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_InputInt__SWIG_2_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo *_swig_go_1, intgo _swig_go_2) {
  char *arg1 = (char *) 0 ;
  int *arg2 = (int *) 0 ;
  int arg3 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(int **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (bool)ImGui::InputInt((char const *)arg1,arg2,arg3);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_InputInt__SWIG_3_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo *_swig_go_1) {
  char *arg1 = (char *) 0 ;
  int *arg2 = (int *) 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(int **)&_swig_go_1; 
  
  result = (bool)ImGui::InputInt((char const *)arg1,arg2);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_InputInt2__SWIG_0_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo *_swig_go_1, intgo _swig_go_2) {
  char *arg1 = (char *) 0 ;
  int *arg2 = (int *) (int *)0 ;
  ImGuiInputTextFlags arg3 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(int **)&_swig_go_1; 
  arg3 = (ImGuiInputTextFlags)_swig_go_2; 
  
  result = (bool)ImGui::InputInt2((char const *)arg1,arg2,arg3);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_InputInt2__SWIG_1_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo *_swig_go_1) {
  char *arg1 = (char *) 0 ;
  int *arg2 = (int *) (int *)0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(int **)&_swig_go_1; 
  
  result = (bool)ImGui::InputInt2((char const *)arg1,arg2);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_InputInt3__SWIG_0_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo *_swig_go_1, intgo _swig_go_2) {
  char *arg1 = (char *) 0 ;
  int *arg2 = (int *) (int *)0 ;
  ImGuiInputTextFlags arg3 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(int **)&_swig_go_1; 
  arg3 = (ImGuiInputTextFlags)_swig_go_2; 
  
  result = (bool)ImGui::InputInt3((char const *)arg1,arg2,arg3);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_InputInt3__SWIG_1_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo *_swig_go_1) {
  char *arg1 = (char *) 0 ;
  int *arg2 = (int *) (int *)0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(int **)&_swig_go_1; 
  
  result = (bool)ImGui::InputInt3((char const *)arg1,arg2);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_InputInt4__SWIG_0_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo *_swig_go_1, intgo _swig_go_2) {
  char *arg1 = (char *) 0 ;
  int *arg2 = (int *) (int *)0 ;
  ImGuiInputTextFlags arg3 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(int **)&_swig_go_1; 
  arg3 = (ImGuiInputTextFlags)_swig_go_2; 
  
  result = (bool)ImGui::InputInt4((char const *)arg1,arg2,arg3);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_InputInt4__SWIG_1_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo *_swig_go_1) {
  char *arg1 = (char *) 0 ;
  int *arg2 = (int *) (int *)0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(int **)&_swig_go_1; 
  
  result = (bool)ImGui::InputInt4((char const *)arg1,arg2);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_InputDouble__SWIG_0_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, double *_swig_go_1, double _swig_go_2, double _swig_go_3, _gostring_ _swig_go_4, intgo _swig_go_5) {
  char *arg1 = (char *) 0 ;
  double *arg2 = (double *) 0 ;
  double arg3 ;
  double arg4 ;
  char *arg5 = (char *) 0 ;
  ImGuiInputTextFlags arg6 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(double **)&_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  
  arg5 = (char *)malloc(_swig_go_4.n + 1);
  memcpy(arg5, _swig_go_4.p, _swig_go_4.n);
  arg5[_swig_go_4.n] = '\0';
  
  arg6 = (ImGuiInputTextFlags)_swig_go_5; 
  
  result = (bool)ImGui::InputDouble((char const *)arg1,arg2,arg3,arg4,(char const *)arg5,arg6);
  _swig_go_result = result; 
  free(arg1); 
  free(arg5); 
  return _swig_go_result;
}


bool _wrap_InputDouble__SWIG_1_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, double *_swig_go_1, double _swig_go_2, double _swig_go_3, _gostring_ _swig_go_4) {
  char *arg1 = (char *) 0 ;
  double *arg2 = (double *) 0 ;
  double arg3 ;
  double arg4 ;
  char *arg5 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(double **)&_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  
  arg5 = (char *)malloc(_swig_go_4.n + 1);
  memcpy(arg5, _swig_go_4.p, _swig_go_4.n);
  arg5[_swig_go_4.n] = '\0';
  
  
  result = (bool)ImGui::InputDouble((char const *)arg1,arg2,arg3,arg4,(char const *)arg5);
  _swig_go_result = result; 
  free(arg1); 
  free(arg5); 
  return _swig_go_result;
}


bool _wrap_InputDouble__SWIG_2_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, double *_swig_go_1, double _swig_go_2, double _swig_go_3) {
  char *arg1 = (char *) 0 ;
  double *arg2 = (double *) 0 ;
  double arg3 ;
  double arg4 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(double **)&_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  
  result = (bool)ImGui::InputDouble((char const *)arg1,arg2,arg3,arg4);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_InputDouble__SWIG_3_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, double *_swig_go_1, double _swig_go_2) {
  char *arg1 = (char *) 0 ;
  double *arg2 = (double *) 0 ;
  double arg3 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(double **)&_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  
  result = (bool)ImGui::InputDouble((char const *)arg1,arg2,arg3);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_InputDouble__SWIG_4_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, double *_swig_go_1) {
  char *arg1 = (char *) 0 ;
  double *arg2 = (double *) 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(double **)&_swig_go_1; 
  
  result = (bool)ImGui::InputDouble((char const *)arg1,arg2);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_InputScalar__SWIG_0_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo _swig_go_1, void *_swig_go_2, void *_swig_go_3, void *_swig_go_4, _gostring_ _swig_go_5, intgo _swig_go_6) {
  char *arg1 = (char *) 0 ;
  ImGuiDataType arg2 ;
  void *arg3 = (void *) 0 ;
  void *arg4 = (void *) 0 ;
  void *arg5 = (void *) 0 ;
  char *arg6 = (char *) 0 ;
  ImGuiInputTextFlags arg7 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = (ImGuiDataType)_swig_go_1; 
  arg3 = *(void **)&_swig_go_2; 
  arg4 = *(void **)&_swig_go_3; 
  arg5 = *(void **)&_swig_go_4; 
  
  arg6 = (char *)malloc(_swig_go_5.n + 1);
  memcpy(arg6, _swig_go_5.p, _swig_go_5.n);
  arg6[_swig_go_5.n] = '\0';
  
  arg7 = (ImGuiInputTextFlags)_swig_go_6; 
  
  result = (bool)ImGui::InputScalar((char const *)arg1,arg2,arg3,(void const *)arg4,(void const *)arg5,(char const *)arg6,arg7);
  _swig_go_result = result; 
  free(arg1); 
  free(arg6); 
  return _swig_go_result;
}


bool _wrap_InputScalar__SWIG_1_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo _swig_go_1, void *_swig_go_2, void *_swig_go_3, void *_swig_go_4, _gostring_ _swig_go_5) {
  char *arg1 = (char *) 0 ;
  ImGuiDataType arg2 ;
  void *arg3 = (void *) 0 ;
  void *arg4 = (void *) 0 ;
  void *arg5 = (void *) 0 ;
  char *arg6 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = (ImGuiDataType)_swig_go_1; 
  arg3 = *(void **)&_swig_go_2; 
  arg4 = *(void **)&_swig_go_3; 
  arg5 = *(void **)&_swig_go_4; 
  
  arg6 = (char *)malloc(_swig_go_5.n + 1);
  memcpy(arg6, _swig_go_5.p, _swig_go_5.n);
  arg6[_swig_go_5.n] = '\0';
  
  
  result = (bool)ImGui::InputScalar((char const *)arg1,arg2,arg3,(void const *)arg4,(void const *)arg5,(char const *)arg6);
  _swig_go_result = result; 
  free(arg1); 
  free(arg6); 
  return _swig_go_result;
}


bool _wrap_InputScalar__SWIG_2_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo _swig_go_1, void *_swig_go_2, void *_swig_go_3, void *_swig_go_4) {
  char *arg1 = (char *) 0 ;
  ImGuiDataType arg2 ;
  void *arg3 = (void *) 0 ;
  void *arg4 = (void *) 0 ;
  void *arg5 = (void *) 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = (ImGuiDataType)_swig_go_1; 
  arg3 = *(void **)&_swig_go_2; 
  arg4 = *(void **)&_swig_go_3; 
  arg5 = *(void **)&_swig_go_4; 
  
  result = (bool)ImGui::InputScalar((char const *)arg1,arg2,arg3,(void const *)arg4,(void const *)arg5);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_InputScalar__SWIG_3_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo _swig_go_1, void *_swig_go_2, void *_swig_go_3) {
  char *arg1 = (char *) 0 ;
  ImGuiDataType arg2 ;
  void *arg3 = (void *) 0 ;
  void *arg4 = (void *) 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = (ImGuiDataType)_swig_go_1; 
  arg3 = *(void **)&_swig_go_2; 
  arg4 = *(void **)&_swig_go_3; 
  
  result = (bool)ImGui::InputScalar((char const *)arg1,arg2,arg3,(void const *)arg4);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_InputScalar__SWIG_4_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo _swig_go_1, void *_swig_go_2) {
  char *arg1 = (char *) 0 ;
  ImGuiDataType arg2 ;
  void *arg3 = (void *) 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = (ImGuiDataType)_swig_go_1; 
  arg3 = *(void **)&_swig_go_2; 
  
  result = (bool)ImGui::InputScalar((char const *)arg1,arg2,arg3);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_InputScalarN__SWIG_0_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo _swig_go_1, void *_swig_go_2, intgo _swig_go_3, void *_swig_go_4, void *_swig_go_5, _gostring_ _swig_go_6, intgo _swig_go_7) {
  char *arg1 = (char *) 0 ;
  ImGuiDataType arg2 ;
  void *arg3 = (void *) 0 ;
  int arg4 ;
  void *arg5 = (void *) 0 ;
  void *arg6 = (void *) 0 ;
  char *arg7 = (char *) 0 ;
  ImGuiInputTextFlags arg8 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = (ImGuiDataType)_swig_go_1; 
  arg3 = *(void **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = *(void **)&_swig_go_4; 
  arg6 = *(void **)&_swig_go_5; 
  
  arg7 = (char *)malloc(_swig_go_6.n + 1);
  memcpy(arg7, _swig_go_6.p, _swig_go_6.n);
  arg7[_swig_go_6.n] = '\0';
  
  arg8 = (ImGuiInputTextFlags)_swig_go_7; 
  
  result = (bool)ImGui::InputScalarN((char const *)arg1,arg2,arg3,arg4,(void const *)arg5,(void const *)arg6,(char const *)arg7,arg8);
  _swig_go_result = result; 
  free(arg1); 
  free(arg7); 
  return _swig_go_result;
}


bool _wrap_InputScalarN__SWIG_1_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo _swig_go_1, void *_swig_go_2, intgo _swig_go_3, void *_swig_go_4, void *_swig_go_5, _gostring_ _swig_go_6) {
  char *arg1 = (char *) 0 ;
  ImGuiDataType arg2 ;
  void *arg3 = (void *) 0 ;
  int arg4 ;
  void *arg5 = (void *) 0 ;
  void *arg6 = (void *) 0 ;
  char *arg7 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = (ImGuiDataType)_swig_go_1; 
  arg3 = *(void **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = *(void **)&_swig_go_4; 
  arg6 = *(void **)&_swig_go_5; 
  
  arg7 = (char *)malloc(_swig_go_6.n + 1);
  memcpy(arg7, _swig_go_6.p, _swig_go_6.n);
  arg7[_swig_go_6.n] = '\0';
  
  
  result = (bool)ImGui::InputScalarN((char const *)arg1,arg2,arg3,arg4,(void const *)arg5,(void const *)arg6,(char const *)arg7);
  _swig_go_result = result; 
  free(arg1); 
  free(arg7); 
  return _swig_go_result;
}


bool _wrap_InputScalarN__SWIG_2_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo _swig_go_1, void *_swig_go_2, intgo _swig_go_3, void *_swig_go_4, void *_swig_go_5) {
  char *arg1 = (char *) 0 ;
  ImGuiDataType arg2 ;
  void *arg3 = (void *) 0 ;
  int arg4 ;
  void *arg5 = (void *) 0 ;
  void *arg6 = (void *) 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = (ImGuiDataType)_swig_go_1; 
  arg3 = *(void **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = *(void **)&_swig_go_4; 
  arg6 = *(void **)&_swig_go_5; 
  
  result = (bool)ImGui::InputScalarN((char const *)arg1,arg2,arg3,arg4,(void const *)arg5,(void const *)arg6);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_InputScalarN__SWIG_3_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo _swig_go_1, void *_swig_go_2, intgo _swig_go_3, void *_swig_go_4) {
  char *arg1 = (char *) 0 ;
  ImGuiDataType arg2 ;
  void *arg3 = (void *) 0 ;
  int arg4 ;
  void *arg5 = (void *) 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = (ImGuiDataType)_swig_go_1; 
  arg3 = *(void **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = *(void **)&_swig_go_4; 
  
  result = (bool)ImGui::InputScalarN((char const *)arg1,arg2,arg3,arg4,(void const *)arg5);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_InputScalarN__SWIG_4_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo _swig_go_1, void *_swig_go_2, intgo _swig_go_3) {
  char *arg1 = (char *) 0 ;
  ImGuiDataType arg2 ;
  void *arg3 = (void *) 0 ;
  int arg4 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = (ImGuiDataType)_swig_go_1; 
  arg3 = *(void **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  result = (bool)ImGui::InputScalarN((char const *)arg1,arg2,arg3,arg4);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_ColorEdit3__SWIG_0_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, float *_swig_go_1, intgo _swig_go_2) {
  char *arg1 = (char *) 0 ;
  float *arg2 = (float *) (float *)0 ;
  ImGuiColorEditFlags arg3 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(float **)&_swig_go_1; 
  arg3 = (ImGuiColorEditFlags)_swig_go_2; 
  
  result = (bool)ImGui::ColorEdit3((char const *)arg1,arg2,arg3);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_ColorEdit3__SWIG_1_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, float *_swig_go_1) {
  char *arg1 = (char *) 0 ;
  float *arg2 = (float *) (float *)0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(float **)&_swig_go_1; 
  
  result = (bool)ImGui::ColorEdit3((char const *)arg1,arg2);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_ColorEdit4__SWIG_0_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, float *_swig_go_1, intgo _swig_go_2) {
  char *arg1 = (char *) 0 ;
  float *arg2 = (float *) (float *)0 ;
  ImGuiColorEditFlags arg3 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(float **)&_swig_go_1; 
  arg3 = (ImGuiColorEditFlags)_swig_go_2; 
  
  result = (bool)ImGui::ColorEdit4((char const *)arg1,arg2,arg3);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_ColorEdit4__SWIG_1_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, float *_swig_go_1) {
  char *arg1 = (char *) 0 ;
  float *arg2 = (float *) (float *)0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(float **)&_swig_go_1; 
  
  result = (bool)ImGui::ColorEdit4((char const *)arg1,arg2);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_ColorPicker3__SWIG_0_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, float *_swig_go_1, intgo _swig_go_2) {
  char *arg1 = (char *) 0 ;
  float *arg2 = (float *) (float *)0 ;
  ImGuiColorEditFlags arg3 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(float **)&_swig_go_1; 
  arg3 = (ImGuiColorEditFlags)_swig_go_2; 
  
  result = (bool)ImGui::ColorPicker3((char const *)arg1,arg2,arg3);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_ColorPicker3__SWIG_1_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, float *_swig_go_1) {
  char *arg1 = (char *) 0 ;
  float *arg2 = (float *) (float *)0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(float **)&_swig_go_1; 
  
  result = (bool)ImGui::ColorPicker3((char const *)arg1,arg2);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_ColorPicker4__SWIG_0_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, float *_swig_go_1, intgo _swig_go_2, float *_swig_go_3) {
  char *arg1 = (char *) 0 ;
  float *arg2 = (float *) (float *)0 ;
  ImGuiColorEditFlags arg3 ;
  float *arg4 = (float *) 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(float **)&_swig_go_1; 
  arg3 = (ImGuiColorEditFlags)_swig_go_2; 
  arg4 = *(float **)&_swig_go_3; 
  
  result = (bool)ImGui::ColorPicker4((char const *)arg1,arg2,arg3,(float const *)arg4);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_ColorPicker4__SWIG_1_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, float *_swig_go_1, intgo _swig_go_2) {
  char *arg1 = (char *) 0 ;
  float *arg2 = (float *) (float *)0 ;
  ImGuiColorEditFlags arg3 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(float **)&_swig_go_1; 
  arg3 = (ImGuiColorEditFlags)_swig_go_2; 
  
  result = (bool)ImGui::ColorPicker4((char const *)arg1,arg2,arg3);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_ColorPicker4__SWIG_2_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, float *_swig_go_1) {
  char *arg1 = (char *) 0 ;
  float *arg2 = (float *) (float *)0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(float **)&_swig_go_1; 
  
  result = (bool)ImGui::ColorPicker4((char const *)arg1,arg2);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_ColorButton__SWIG_0_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, ImVec4 *_swig_go_1, intgo _swig_go_2, ImVec2 *_swig_go_3) {
  char *arg1 = (char *) 0 ;
  ImVec4 *arg2 = 0 ;
  ImGuiColorEditFlags arg3 ;
  ImVec2 *arg4 = 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(ImVec4 **)&_swig_go_1; 
  arg3 = (ImGuiColorEditFlags)_swig_go_2; 
  arg4 = *(ImVec2 **)&_swig_go_3; 
  
  result = (bool)ImGui::ColorButton((char const *)arg1,(ImVec4 const &)*arg2,arg3,(ImVec2 const &)*arg4);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_ColorButton__SWIG_1_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, ImVec4 *_swig_go_1, intgo _swig_go_2) {
  char *arg1 = (char *) 0 ;
  ImVec4 *arg2 = 0 ;
  ImGuiColorEditFlags arg3 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(ImVec4 **)&_swig_go_1; 
  arg3 = (ImGuiColorEditFlags)_swig_go_2; 
  
  result = (bool)ImGui::ColorButton((char const *)arg1,(ImVec4 const &)*arg2,arg3);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_ColorButton__SWIG_2_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, ImVec4 *_swig_go_1) {
  char *arg1 = (char *) 0 ;
  ImVec4 *arg2 = 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(ImVec4 **)&_swig_go_1; 
  
  result = (bool)ImGui::ColorButton((char const *)arg1,(ImVec4 const &)*arg2);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


void _wrap_SetColorEditOptions_imgui_568d46c1e1b4102a(intgo _swig_go_0) {
  ImGuiColorEditFlags arg1 ;
  
  arg1 = (ImGuiColorEditFlags)_swig_go_0; 
  
  ImGui::SetColorEditOptions(arg1);
  
}


bool _wrap_TreeNode__SWIG_0_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0) {
  char *arg1 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  result = (bool)ImGui::TreeNode((char const *)arg1);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_TreeNode__SWIG_1_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, _gostring_ _swig_go_1) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  void *arg3 = 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  result = (bool)ImGui::TreeNode((char const *)arg1,(char const *)arg2,arg3);
  _swig_go_result = result; 
  free(arg1); 
  free(arg2); 
  return _swig_go_result;
}


bool _wrap_TreeNode__SWIG_2_imgui_568d46c1e1b4102a(void *_swig_go_0, _gostring_ _swig_go_1) {
  void *arg1 = (void *) 0 ;
  char *arg2 = (char *) 0 ;
  void *arg3 = 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  result = (bool)ImGui::TreeNode((void const *)arg1,(char const *)arg2,arg3);
  _swig_go_result = result; 
  free(arg2); 
  return _swig_go_result;
}


bool _wrap_TreeNodeV__SWIG_0_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, _gostring_ _swig_go_1, va_list *_swig_go_2) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  va_list arg3 ;
  va_list *argp3 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  argp3 = (va_list *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null va_list");
  }
  arg3 = (va_list)*argp3;
  
  
  result = (bool)ImGui::TreeNodeV((char const *)arg1,(char const *)arg2,SWIG_STD_MOVE(arg3));
  _swig_go_result = result; 
  free(arg1); 
  free(arg2); 
  return _swig_go_result;
}


bool _wrap_TreeNodeV__SWIG_1_imgui_568d46c1e1b4102a(void *_swig_go_0, _gostring_ _swig_go_1, va_list *_swig_go_2) {
  void *arg1 = (void *) 0 ;
  char *arg2 = (char *) 0 ;
  va_list arg3 ;
  va_list *argp3 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  argp3 = (va_list *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null va_list");
  }
  arg3 = (va_list)*argp3;
  
  
  result = (bool)ImGui::TreeNodeV((void const *)arg1,(char const *)arg2,SWIG_STD_MOVE(arg3));
  _swig_go_result = result; 
  free(arg2); 
  return _swig_go_result;
}


bool _wrap_TreeNodeEx__SWIG_0_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo _swig_go_1) {
  char *arg1 = (char *) 0 ;
  ImGuiTreeNodeFlags arg2 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = (ImGuiTreeNodeFlags)_swig_go_1; 
  
  result = (bool)ImGui::TreeNodeEx((char const *)arg1,arg2);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_TreeNodeEx__SWIG_1_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0) {
  char *arg1 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  result = (bool)ImGui::TreeNodeEx((char const *)arg1);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_TreeNodeEx__SWIG_2_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo _swig_go_1, _gostring_ _swig_go_2) {
  char *arg1 = (char *) 0 ;
  ImGuiTreeNodeFlags arg2 ;
  char *arg3 = (char *) 0 ;
  void *arg4 = 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = (ImGuiTreeNodeFlags)_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  result = (bool)ImGui::TreeNodeEx((char const *)arg1,arg2,(char const *)arg3,arg4);
  _swig_go_result = result; 
  free(arg1); 
  free(arg3); 
  return _swig_go_result;
}


bool _wrap_TreeNodeEx__SWIG_3_imgui_568d46c1e1b4102a(void *_swig_go_0, intgo _swig_go_1, _gostring_ _swig_go_2) {
  void *arg1 = (void *) 0 ;
  ImGuiTreeNodeFlags arg2 ;
  char *arg3 = (char *) 0 ;
  void *arg4 = 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  arg2 = (ImGuiTreeNodeFlags)_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  result = (bool)ImGui::TreeNodeEx((void const *)arg1,arg2,(char const *)arg3,arg4);
  _swig_go_result = result; 
  free(arg3); 
  return _swig_go_result;
}


bool _wrap_TreeNodeExV__SWIG_0_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo _swig_go_1, _gostring_ _swig_go_2, va_list *_swig_go_3) {
  char *arg1 = (char *) 0 ;
  ImGuiTreeNodeFlags arg2 ;
  char *arg3 = (char *) 0 ;
  va_list arg4 ;
  va_list *argp4 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = (ImGuiTreeNodeFlags)_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  argp4 = (va_list *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null va_list");
  }
  arg4 = (va_list)*argp4;
  
  
  result = (bool)ImGui::TreeNodeExV((char const *)arg1,arg2,(char const *)arg3,SWIG_STD_MOVE(arg4));
  _swig_go_result = result; 
  free(arg1); 
  free(arg3); 
  return _swig_go_result;
}


bool _wrap_TreeNodeExV__SWIG_1_imgui_568d46c1e1b4102a(void *_swig_go_0, intgo _swig_go_1, _gostring_ _swig_go_2, va_list *_swig_go_3) {
  void *arg1 = (void *) 0 ;
  ImGuiTreeNodeFlags arg2 ;
  char *arg3 = (char *) 0 ;
  va_list arg4 ;
  va_list *argp4 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(void **)&_swig_go_0; 
  arg2 = (ImGuiTreeNodeFlags)_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  argp4 = (va_list *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null va_list");
  }
  arg4 = (va_list)*argp4;
  
  
  result = (bool)ImGui::TreeNodeExV((void const *)arg1,arg2,(char const *)arg3,SWIG_STD_MOVE(arg4));
  _swig_go_result = result; 
  free(arg3); 
  return _swig_go_result;
}


void _wrap_TreePush__SWIG_0_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0) {
  char *arg1 = (char *) 0 ;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  ImGui::TreePush((char const *)arg1);
  
  free(arg1); 
}


void _wrap_TreePush__SWIG_1_imgui_568d46c1e1b4102a(void *_swig_go_0) {
  void *arg1 = (void *) 0 ;
  
  arg1 = *(void **)&_swig_go_0; 
  
  ImGui::TreePush((void const *)arg1);
  
}


void _wrap_TreePop_imgui_568d46c1e1b4102a() {
  ImGui::TreePop();
  
}


float _wrap_GetTreeNodeToLabelSpacing_imgui_568d46c1e1b4102a() {
  float result;
  float _swig_go_result;
  
  
  result = (float)ImGui::GetTreeNodeToLabelSpacing();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_CollapsingHeader__SWIG_0_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo _swig_go_1) {
  char *arg1 = (char *) 0 ;
  ImGuiTreeNodeFlags arg2 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = (ImGuiTreeNodeFlags)_swig_go_1; 
  
  result = (bool)ImGui::CollapsingHeader((char const *)arg1,arg2);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_CollapsingHeader__SWIG_1_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0) {
  char *arg1 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  result = (bool)ImGui::CollapsingHeader((char const *)arg1);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_CollapsingHeader__SWIG_2_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, bool *_swig_go_1, intgo _swig_go_2) {
  char *arg1 = (char *) 0 ;
  bool *arg2 = (bool *) 0 ;
  ImGuiTreeNodeFlags arg3 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(bool **)&_swig_go_1; 
  arg3 = (ImGuiTreeNodeFlags)_swig_go_2; 
  
  result = (bool)ImGui::CollapsingHeader((char const *)arg1,arg2,arg3);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_CollapsingHeader__SWIG_3_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, bool *_swig_go_1) {
  char *arg1 = (char *) 0 ;
  bool *arg2 = (bool *) 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(bool **)&_swig_go_1; 
  
  result = (bool)ImGui::CollapsingHeader((char const *)arg1,arg2);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


void _wrap_SetNextItemOpen__SWIG_0_imgui_568d46c1e1b4102a(bool _swig_go_0, intgo _swig_go_1) {
  bool arg1 ;
  ImGuiCond arg2 ;
  
  arg1 = (bool)_swig_go_0; 
  arg2 = (ImGuiCond)_swig_go_1; 
  
  ImGui::SetNextItemOpen(arg1,arg2);
  
}


void _wrap_SetNextItemOpen__SWIG_1_imgui_568d46c1e1b4102a(bool _swig_go_0) {
  bool arg1 ;
  
  arg1 = (bool)_swig_go_0; 
  
  ImGui::SetNextItemOpen(arg1);
  
}


void _wrap_SetNextItemStorageID_imgui_568d46c1e1b4102a(intgo _swig_go_0) {
  ImGuiID arg1 ;
  
  arg1 = (ImGuiID)_swig_go_0; 
  
  ImGui::SetNextItemStorageID(arg1);
  
}


bool _wrap_Selectable__SWIG_0_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, bool _swig_go_1, intgo _swig_go_2, ImVec2 *_swig_go_3) {
  char *arg1 = (char *) 0 ;
  bool arg2 ;
  ImGuiSelectableFlags arg3 ;
  ImVec2 *arg4 = 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = (bool)_swig_go_1; 
  arg3 = (ImGuiSelectableFlags)_swig_go_2; 
  arg4 = *(ImVec2 **)&_swig_go_3; 
  
  result = (bool)ImGui::Selectable((char const *)arg1,arg2,arg3,(ImVec2 const &)*arg4);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_Selectable__SWIG_1_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, bool _swig_go_1, intgo _swig_go_2) {
  char *arg1 = (char *) 0 ;
  bool arg2 ;
  ImGuiSelectableFlags arg3 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = (bool)_swig_go_1; 
  arg3 = (ImGuiSelectableFlags)_swig_go_2; 
  
  result = (bool)ImGui::Selectable((char const *)arg1,arg2,arg3);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_Selectable__SWIG_2_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, bool _swig_go_1) {
  char *arg1 = (char *) 0 ;
  bool arg2 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = (bool)_swig_go_1; 
  
  result = (bool)ImGui::Selectable((char const *)arg1,arg2);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_Selectable__SWIG_3_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0) {
  char *arg1 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  result = (bool)ImGui::Selectable((char const *)arg1);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_Selectable__SWIG_4_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, bool *_swig_go_1, intgo _swig_go_2, ImVec2 *_swig_go_3) {
  char *arg1 = (char *) 0 ;
  bool *arg2 = (bool *) 0 ;
  ImGuiSelectableFlags arg3 ;
  ImVec2 *arg4 = 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(bool **)&_swig_go_1; 
  arg3 = (ImGuiSelectableFlags)_swig_go_2; 
  arg4 = *(ImVec2 **)&_swig_go_3; 
  
  result = (bool)ImGui::Selectable((char const *)arg1,arg2,arg3,(ImVec2 const &)*arg4);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_Selectable__SWIG_5_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, bool *_swig_go_1, intgo _swig_go_2) {
  char *arg1 = (char *) 0 ;
  bool *arg2 = (bool *) 0 ;
  ImGuiSelectableFlags arg3 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(bool **)&_swig_go_1; 
  arg3 = (ImGuiSelectableFlags)_swig_go_2; 
  
  result = (bool)ImGui::Selectable((char const *)arg1,arg2,arg3);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_Selectable__SWIG_6_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, bool *_swig_go_1) {
  char *arg1 = (char *) 0 ;
  bool *arg2 = (bool *) 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(bool **)&_swig_go_1; 
  
  result = (bool)ImGui::Selectable((char const *)arg1,arg2);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


ImGuiMultiSelectIO *_wrap_BeginMultiSelect__SWIG_0_imgui_568d46c1e1b4102a(intgo _swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  ImGuiMultiSelectFlags arg1 ;
  int arg2 ;
  int arg3 ;
  ImGuiMultiSelectIO *result = 0 ;
  ImGuiMultiSelectIO *_swig_go_result;
  
  arg1 = (ImGuiMultiSelectFlags)_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (ImGuiMultiSelectIO *)ImGui::BeginMultiSelect(arg1,arg2,arg3);
  *(ImGuiMultiSelectIO **)&_swig_go_result = (ImGuiMultiSelectIO *)result; 
  return _swig_go_result;
}


ImGuiMultiSelectIO *_wrap_BeginMultiSelect__SWIG_1_imgui_568d46c1e1b4102a(intgo _swig_go_0, intgo _swig_go_1) {
  ImGuiMultiSelectFlags arg1 ;
  int arg2 ;
  ImGuiMultiSelectIO *result = 0 ;
  ImGuiMultiSelectIO *_swig_go_result;
  
  arg1 = (ImGuiMultiSelectFlags)_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (ImGuiMultiSelectIO *)ImGui::BeginMultiSelect(arg1,arg2);
  *(ImGuiMultiSelectIO **)&_swig_go_result = (ImGuiMultiSelectIO *)result; 
  return _swig_go_result;
}


ImGuiMultiSelectIO *_wrap_BeginMultiSelect__SWIG_2_imgui_568d46c1e1b4102a(intgo _swig_go_0) {
  ImGuiMultiSelectFlags arg1 ;
  ImGuiMultiSelectIO *result = 0 ;
  ImGuiMultiSelectIO *_swig_go_result;
  
  arg1 = (ImGuiMultiSelectFlags)_swig_go_0; 
  
  result = (ImGuiMultiSelectIO *)ImGui::BeginMultiSelect(arg1);
  *(ImGuiMultiSelectIO **)&_swig_go_result = (ImGuiMultiSelectIO *)result; 
  return _swig_go_result;
}


ImGuiMultiSelectIO *_wrap_EndMultiSelect_imgui_568d46c1e1b4102a() {
  ImGuiMultiSelectIO *result = 0 ;
  ImGuiMultiSelectIO *_swig_go_result;
  
  
  result = (ImGuiMultiSelectIO *)ImGui::EndMultiSelect();
  *(ImGuiMultiSelectIO **)&_swig_go_result = (ImGuiMultiSelectIO *)result; 
  return _swig_go_result;
}


void _wrap_SetNextItemSelectionUserData_imgui_568d46c1e1b4102a(long long _swig_go_0) {
  ImGuiSelectionUserData arg1 ;
  
  arg1 = (ImGuiSelectionUserData)_swig_go_0; 
  
  ImGui::SetNextItemSelectionUserData(arg1);
  
}


bool _wrap_IsItemToggledSelection_imgui_568d46c1e1b4102a() {
  bool result;
  bool _swig_go_result;
  
  
  result = (bool)ImGui::IsItemToggledSelection();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_BeginListBox__SWIG_0_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, ImVec2 *_swig_go_1) {
  char *arg1 = (char *) 0 ;
  ImVec2 *arg2 = 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(ImVec2 **)&_swig_go_1; 
  
  result = (bool)ImGui::BeginListBox((char const *)arg1,(ImVec2 const &)*arg2);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_BeginListBox__SWIG_1_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0) {
  char *arg1 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  result = (bool)ImGui::BeginListBox((char const *)arg1);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


void _wrap_EndListBox_imgui_568d46c1e1b4102a() {
  ImGui::EndListBox();
  
}


bool _wrap_ListBox__SWIG_0_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo *_swig_go_1, _gostring_* _swig_go_2, intgo _swig_go_3, intgo _swig_go_4) {
  char *arg1 = (char *) 0 ;
  int *arg2 = (int *) 0 ;
  char **arg3 = (char **) (char **)0 ;
  int arg4 ;
  int arg5 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(int **)&_swig_go_1; 
  arg3 = *(char ***)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  result = (bool)ImGui::ListBox((char const *)arg1,arg2,(char const *const (*))arg3,arg4,arg5);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_ListBox__SWIG_1_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo *_swig_go_1, _gostring_* _swig_go_2, intgo _swig_go_3) {
  char *arg1 = (char *) 0 ;
  int *arg2 = (int *) 0 ;
  char **arg3 = (char **) (char **)0 ;
  int arg4 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(int **)&_swig_go_1; 
  arg3 = *(char ***)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  result = (bool)ImGui::ListBox((char const *)arg1,arg2,(char const *const (*))arg3,arg4);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_ListBox__SWIG_2_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo *_swig_go_1, void* _swig_go_2, void *_swig_go_3, intgo _swig_go_4, intgo _swig_go_5) {
  char *arg1 = (char *) 0 ;
  int *arg2 = (int *) 0 ;
  char *(*arg3)(void *,int) = (char *(*)(void *,int)) 0 ;
  void *arg4 = (void *) 0 ;
  int arg5 ;
  int arg6 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(int **)&_swig_go_1; 
  arg3 = *(char *(**)(void *,int))&_swig_go_2; 
  arg4 = *(void **)&_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  
  result = (bool)ImGui::ListBox((char const *)arg1,arg2,(char const *(*)(void *,int))arg3,arg4,arg5,arg6);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_ListBox__SWIG_3_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo *_swig_go_1, void* _swig_go_2, void *_swig_go_3, intgo _swig_go_4) {
  char *arg1 = (char *) 0 ;
  int *arg2 = (int *) 0 ;
  char *(*arg3)(void *,int) = (char *(*)(void *,int)) 0 ;
  void *arg4 = (void *) 0 ;
  int arg5 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(int **)&_swig_go_1; 
  arg3 = *(char *(**)(void *,int))&_swig_go_2; 
  arg4 = *(void **)&_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  result = (bool)ImGui::ListBox((char const *)arg1,arg2,(char const *(*)(void *,int))arg3,arg4,arg5);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


void _wrap_PlotLines__SWIG_0_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, float *_swig_go_1, intgo _swig_go_2, intgo _swig_go_3, _gostring_ _swig_go_4, float _swig_go_5, float _swig_go_6, ImVec2 *_swig_go_7, intgo _swig_go_8) {
  char *arg1 = (char *) 0 ;
  float *arg2 = (float *) 0 ;
  int arg3 ;
  int arg4 ;
  char *arg5 = (char *) 0 ;
  float arg6 ;
  float arg7 ;
  ImVec2 arg8 ;
  int arg9 ;
  ImVec2 *argp8 ;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(float **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  arg5 = (char *)malloc(_swig_go_4.n + 1);
  memcpy(arg5, _swig_go_4.p, _swig_go_4.n);
  arg5[_swig_go_4.n] = '\0';
  
  arg6 = (float)_swig_go_5; 
  arg7 = (float)_swig_go_6; 
  
  argp8 = (ImVec2 *)_swig_go_7;
  if (argp8 == NULL) {
    _swig_gopanic("Attempt to dereference null ImVec2");
  }
  arg8 = (ImVec2)*argp8;
  
  arg9 = (int)_swig_go_8; 
  
  ImGui::PlotLines((char const *)arg1,(float const *)arg2,arg3,arg4,(char const *)arg5,arg6,arg7,SWIG_STD_MOVE(arg8),arg9);
  
  free(arg1); 
  free(arg5); 
}


void _wrap_PlotLines__SWIG_1_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, float *_swig_go_1, intgo _swig_go_2, intgo _swig_go_3, _gostring_ _swig_go_4, float _swig_go_5, float _swig_go_6, ImVec2 *_swig_go_7) {
  char *arg1 = (char *) 0 ;
  float *arg2 = (float *) 0 ;
  int arg3 ;
  int arg4 ;
  char *arg5 = (char *) 0 ;
  float arg6 ;
  float arg7 ;
  ImVec2 arg8 ;
  ImVec2 *argp8 ;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(float **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  arg5 = (char *)malloc(_swig_go_4.n + 1);
  memcpy(arg5, _swig_go_4.p, _swig_go_4.n);
  arg5[_swig_go_4.n] = '\0';
  
  arg6 = (float)_swig_go_5; 
  arg7 = (float)_swig_go_6; 
  
  argp8 = (ImVec2 *)_swig_go_7;
  if (argp8 == NULL) {
    _swig_gopanic("Attempt to dereference null ImVec2");
  }
  arg8 = (ImVec2)*argp8;
  
  
  ImGui::PlotLines((char const *)arg1,(float const *)arg2,arg3,arg4,(char const *)arg5,arg6,arg7,SWIG_STD_MOVE(arg8));
  
  free(arg1); 
  free(arg5); 
}


void _wrap_PlotLines__SWIG_2_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, float *_swig_go_1, intgo _swig_go_2, intgo _swig_go_3, _gostring_ _swig_go_4, float _swig_go_5, float _swig_go_6) {
  char *arg1 = (char *) 0 ;
  float *arg2 = (float *) 0 ;
  int arg3 ;
  int arg4 ;
  char *arg5 = (char *) 0 ;
  float arg6 ;
  float arg7 ;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(float **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  arg5 = (char *)malloc(_swig_go_4.n + 1);
  memcpy(arg5, _swig_go_4.p, _swig_go_4.n);
  arg5[_swig_go_4.n] = '\0';
  
  arg6 = (float)_swig_go_5; 
  arg7 = (float)_swig_go_6; 
  
  ImGui::PlotLines((char const *)arg1,(float const *)arg2,arg3,arg4,(char const *)arg5,arg6,arg7);
  
  free(arg1); 
  free(arg5); 
}


void _wrap_PlotLines__SWIG_3_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, float *_swig_go_1, intgo _swig_go_2, intgo _swig_go_3, _gostring_ _swig_go_4, float _swig_go_5) {
  char *arg1 = (char *) 0 ;
  float *arg2 = (float *) 0 ;
  int arg3 ;
  int arg4 ;
  char *arg5 = (char *) 0 ;
  float arg6 ;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(float **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  arg5 = (char *)malloc(_swig_go_4.n + 1);
  memcpy(arg5, _swig_go_4.p, _swig_go_4.n);
  arg5[_swig_go_4.n] = '\0';
  
  arg6 = (float)_swig_go_5; 
  
  ImGui::PlotLines((char const *)arg1,(float const *)arg2,arg3,arg4,(char const *)arg5,arg6);
  
  free(arg1); 
  free(arg5); 
}


void _wrap_PlotLines__SWIG_4_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, float *_swig_go_1, intgo _swig_go_2, intgo _swig_go_3, _gostring_ _swig_go_4) {
  char *arg1 = (char *) 0 ;
  float *arg2 = (float *) 0 ;
  int arg3 ;
  int arg4 ;
  char *arg5 = (char *) 0 ;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(float **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  arg5 = (char *)malloc(_swig_go_4.n + 1);
  memcpy(arg5, _swig_go_4.p, _swig_go_4.n);
  arg5[_swig_go_4.n] = '\0';
  
  
  ImGui::PlotLines((char const *)arg1,(float const *)arg2,arg3,arg4,(char const *)arg5);
  
  free(arg1); 
  free(arg5); 
}


void _wrap_PlotLines__SWIG_5_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, float *_swig_go_1, intgo _swig_go_2, intgo _swig_go_3) {
  char *arg1 = (char *) 0 ;
  float *arg2 = (float *) 0 ;
  int arg3 ;
  int arg4 ;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(float **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  ImGui::PlotLines((char const *)arg1,(float const *)arg2,arg3,arg4);
  
  free(arg1); 
}


void _wrap_PlotLines__SWIG_6_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, float *_swig_go_1, intgo _swig_go_2) {
  char *arg1 = (char *) 0 ;
  float *arg2 = (float *) 0 ;
  int arg3 ;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(float **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  ImGui::PlotLines((char const *)arg1,(float const *)arg2,arg3);
  
  free(arg1); 
}


void _wrap_PlotLines__SWIG_7_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, void* _swig_go_1, void *_swig_go_2, intgo _swig_go_3, intgo _swig_go_4, _gostring_ _swig_go_5, float _swig_go_6, float _swig_go_7, ImVec2 *_swig_go_8) {
  char *arg1 = (char *) 0 ;
  float (*arg2)(void *,int) = (float (*)(void *,int)) 0 ;
  void *arg3 = (void *) 0 ;
  int arg4 ;
  int arg5 ;
  char *arg6 = (char *) 0 ;
  float arg7 ;
  float arg8 ;
  ImVec2 arg9 ;
  ImVec2 *argp9 ;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(float (**)(void *,int))&_swig_go_1; 
  arg3 = *(void **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  arg6 = (char *)malloc(_swig_go_5.n + 1);
  memcpy(arg6, _swig_go_5.p, _swig_go_5.n);
  arg6[_swig_go_5.n] = '\0';
  
  arg7 = (float)_swig_go_6; 
  arg8 = (float)_swig_go_7; 
  
  argp9 = (ImVec2 *)_swig_go_8;
  if (argp9 == NULL) {
    _swig_gopanic("Attempt to dereference null ImVec2");
  }
  arg9 = (ImVec2)*argp9;
  
  
  ImGui::PlotLines((char const *)arg1,arg2,arg3,arg4,arg5,(char const *)arg6,arg7,arg8,SWIG_STD_MOVE(arg9));
  
  free(arg1); 
  free(arg6); 
}


void _wrap_PlotLines__SWIG_8_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, void* _swig_go_1, void *_swig_go_2, intgo _swig_go_3, intgo _swig_go_4, _gostring_ _swig_go_5, float _swig_go_6, float _swig_go_7) {
  char *arg1 = (char *) 0 ;
  float (*arg2)(void *,int) = (float (*)(void *,int)) 0 ;
  void *arg3 = (void *) 0 ;
  int arg4 ;
  int arg5 ;
  char *arg6 = (char *) 0 ;
  float arg7 ;
  float arg8 ;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(float (**)(void *,int))&_swig_go_1; 
  arg3 = *(void **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  arg6 = (char *)malloc(_swig_go_5.n + 1);
  memcpy(arg6, _swig_go_5.p, _swig_go_5.n);
  arg6[_swig_go_5.n] = '\0';
  
  arg7 = (float)_swig_go_6; 
  arg8 = (float)_swig_go_7; 
  
  ImGui::PlotLines((char const *)arg1,arg2,arg3,arg4,arg5,(char const *)arg6,arg7,arg8);
  
  free(arg1); 
  free(arg6); 
}


void _wrap_PlotLines__SWIG_9_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, void* _swig_go_1, void *_swig_go_2, intgo _swig_go_3, intgo _swig_go_4, _gostring_ _swig_go_5, float _swig_go_6) {
  char *arg1 = (char *) 0 ;
  float (*arg2)(void *,int) = (float (*)(void *,int)) 0 ;
  void *arg3 = (void *) 0 ;
  int arg4 ;
  int arg5 ;
  char *arg6 = (char *) 0 ;
  float arg7 ;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(float (**)(void *,int))&_swig_go_1; 
  arg3 = *(void **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  arg6 = (char *)malloc(_swig_go_5.n + 1);
  memcpy(arg6, _swig_go_5.p, _swig_go_5.n);
  arg6[_swig_go_5.n] = '\0';
  
  arg7 = (float)_swig_go_6; 
  
  ImGui::PlotLines((char const *)arg1,arg2,arg3,arg4,arg5,(char const *)arg6,arg7);
  
  free(arg1); 
  free(arg6); 
}


void _wrap_PlotLines__SWIG_10_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, void* _swig_go_1, void *_swig_go_2, intgo _swig_go_3, intgo _swig_go_4, _gostring_ _swig_go_5) {
  char *arg1 = (char *) 0 ;
  float (*arg2)(void *,int) = (float (*)(void *,int)) 0 ;
  void *arg3 = (void *) 0 ;
  int arg4 ;
  int arg5 ;
  char *arg6 = (char *) 0 ;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(float (**)(void *,int))&_swig_go_1; 
  arg3 = *(void **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  arg6 = (char *)malloc(_swig_go_5.n + 1);
  memcpy(arg6, _swig_go_5.p, _swig_go_5.n);
  arg6[_swig_go_5.n] = '\0';
  
  
  ImGui::PlotLines((char const *)arg1,arg2,arg3,arg4,arg5,(char const *)arg6);
  
  free(arg1); 
  free(arg6); 
}


void _wrap_PlotLines__SWIG_11_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, void* _swig_go_1, void *_swig_go_2, intgo _swig_go_3, intgo _swig_go_4) {
  char *arg1 = (char *) 0 ;
  float (*arg2)(void *,int) = (float (*)(void *,int)) 0 ;
  void *arg3 = (void *) 0 ;
  int arg4 ;
  int arg5 ;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(float (**)(void *,int))&_swig_go_1; 
  arg3 = *(void **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  ImGui::PlotLines((char const *)arg1,arg2,arg3,arg4,arg5);
  
  free(arg1); 
}


void _wrap_PlotLines__SWIG_12_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, void* _swig_go_1, void *_swig_go_2, intgo _swig_go_3) {
  char *arg1 = (char *) 0 ;
  float (*arg2)(void *,int) = (float (*)(void *,int)) 0 ;
  void *arg3 = (void *) 0 ;
  int arg4 ;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(float (**)(void *,int))&_swig_go_1; 
  arg3 = *(void **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  ImGui::PlotLines((char const *)arg1,arg2,arg3,arg4);
  
  free(arg1); 
}


void _wrap_PlotHistogram__SWIG_0_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, float *_swig_go_1, intgo _swig_go_2, intgo _swig_go_3, _gostring_ _swig_go_4, float _swig_go_5, float _swig_go_6, ImVec2 *_swig_go_7, intgo _swig_go_8) {
  char *arg1 = (char *) 0 ;
  float *arg2 = (float *) 0 ;
  int arg3 ;
  int arg4 ;
  char *arg5 = (char *) 0 ;
  float arg6 ;
  float arg7 ;
  ImVec2 arg8 ;
  int arg9 ;
  ImVec2 *argp8 ;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(float **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  arg5 = (char *)malloc(_swig_go_4.n + 1);
  memcpy(arg5, _swig_go_4.p, _swig_go_4.n);
  arg5[_swig_go_4.n] = '\0';
  
  arg6 = (float)_swig_go_5; 
  arg7 = (float)_swig_go_6; 
  
  argp8 = (ImVec2 *)_swig_go_7;
  if (argp8 == NULL) {
    _swig_gopanic("Attempt to dereference null ImVec2");
  }
  arg8 = (ImVec2)*argp8;
  
  arg9 = (int)_swig_go_8; 
  
  ImGui::PlotHistogram((char const *)arg1,(float const *)arg2,arg3,arg4,(char const *)arg5,arg6,arg7,SWIG_STD_MOVE(arg8),arg9);
  
  free(arg1); 
  free(arg5); 
}


void _wrap_PlotHistogram__SWIG_1_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, float *_swig_go_1, intgo _swig_go_2, intgo _swig_go_3, _gostring_ _swig_go_4, float _swig_go_5, float _swig_go_6, ImVec2 *_swig_go_7) {
  char *arg1 = (char *) 0 ;
  float *arg2 = (float *) 0 ;
  int arg3 ;
  int arg4 ;
  char *arg5 = (char *) 0 ;
  float arg6 ;
  float arg7 ;
  ImVec2 arg8 ;
  ImVec2 *argp8 ;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(float **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  arg5 = (char *)malloc(_swig_go_4.n + 1);
  memcpy(arg5, _swig_go_4.p, _swig_go_4.n);
  arg5[_swig_go_4.n] = '\0';
  
  arg6 = (float)_swig_go_5; 
  arg7 = (float)_swig_go_6; 
  
  argp8 = (ImVec2 *)_swig_go_7;
  if (argp8 == NULL) {
    _swig_gopanic("Attempt to dereference null ImVec2");
  }
  arg8 = (ImVec2)*argp8;
  
  
  ImGui::PlotHistogram((char const *)arg1,(float const *)arg2,arg3,arg4,(char const *)arg5,arg6,arg7,SWIG_STD_MOVE(arg8));
  
  free(arg1); 
  free(arg5); 
}


void _wrap_PlotHistogram__SWIG_2_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, float *_swig_go_1, intgo _swig_go_2, intgo _swig_go_3, _gostring_ _swig_go_4, float _swig_go_5, float _swig_go_6) {
  char *arg1 = (char *) 0 ;
  float *arg2 = (float *) 0 ;
  int arg3 ;
  int arg4 ;
  char *arg5 = (char *) 0 ;
  float arg6 ;
  float arg7 ;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(float **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  arg5 = (char *)malloc(_swig_go_4.n + 1);
  memcpy(arg5, _swig_go_4.p, _swig_go_4.n);
  arg5[_swig_go_4.n] = '\0';
  
  arg6 = (float)_swig_go_5; 
  arg7 = (float)_swig_go_6; 
  
  ImGui::PlotHistogram((char const *)arg1,(float const *)arg2,arg3,arg4,(char const *)arg5,arg6,arg7);
  
  free(arg1); 
  free(arg5); 
}


void _wrap_PlotHistogram__SWIG_3_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, float *_swig_go_1, intgo _swig_go_2, intgo _swig_go_3, _gostring_ _swig_go_4, float _swig_go_5) {
  char *arg1 = (char *) 0 ;
  float *arg2 = (float *) 0 ;
  int arg3 ;
  int arg4 ;
  char *arg5 = (char *) 0 ;
  float arg6 ;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(float **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  arg5 = (char *)malloc(_swig_go_4.n + 1);
  memcpy(arg5, _swig_go_4.p, _swig_go_4.n);
  arg5[_swig_go_4.n] = '\0';
  
  arg6 = (float)_swig_go_5; 
  
  ImGui::PlotHistogram((char const *)arg1,(float const *)arg2,arg3,arg4,(char const *)arg5,arg6);
  
  free(arg1); 
  free(arg5); 
}


void _wrap_PlotHistogram__SWIG_4_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, float *_swig_go_1, intgo _swig_go_2, intgo _swig_go_3, _gostring_ _swig_go_4) {
  char *arg1 = (char *) 0 ;
  float *arg2 = (float *) 0 ;
  int arg3 ;
  int arg4 ;
  char *arg5 = (char *) 0 ;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(float **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  arg5 = (char *)malloc(_swig_go_4.n + 1);
  memcpy(arg5, _swig_go_4.p, _swig_go_4.n);
  arg5[_swig_go_4.n] = '\0';
  
  
  ImGui::PlotHistogram((char const *)arg1,(float const *)arg2,arg3,arg4,(char const *)arg5);
  
  free(arg1); 
  free(arg5); 
}


void _wrap_PlotHistogram__SWIG_5_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, float *_swig_go_1, intgo _swig_go_2, intgo _swig_go_3) {
  char *arg1 = (char *) 0 ;
  float *arg2 = (float *) 0 ;
  int arg3 ;
  int arg4 ;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(float **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  ImGui::PlotHistogram((char const *)arg1,(float const *)arg2,arg3,arg4);
  
  free(arg1); 
}


void _wrap_PlotHistogram__SWIG_6_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, float *_swig_go_1, intgo _swig_go_2) {
  char *arg1 = (char *) 0 ;
  float *arg2 = (float *) 0 ;
  int arg3 ;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(float **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  ImGui::PlotHistogram((char const *)arg1,(float const *)arg2,arg3);
  
  free(arg1); 
}


void _wrap_PlotHistogram__SWIG_7_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, void* _swig_go_1, void *_swig_go_2, intgo _swig_go_3, intgo _swig_go_4, _gostring_ _swig_go_5, float _swig_go_6, float _swig_go_7, ImVec2 *_swig_go_8) {
  char *arg1 = (char *) 0 ;
  float (*arg2)(void *,int) = (float (*)(void *,int)) 0 ;
  void *arg3 = (void *) 0 ;
  int arg4 ;
  int arg5 ;
  char *arg6 = (char *) 0 ;
  float arg7 ;
  float arg8 ;
  ImVec2 arg9 ;
  ImVec2 *argp9 ;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(float (**)(void *,int))&_swig_go_1; 
  arg3 = *(void **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  arg6 = (char *)malloc(_swig_go_5.n + 1);
  memcpy(arg6, _swig_go_5.p, _swig_go_5.n);
  arg6[_swig_go_5.n] = '\0';
  
  arg7 = (float)_swig_go_6; 
  arg8 = (float)_swig_go_7; 
  
  argp9 = (ImVec2 *)_swig_go_8;
  if (argp9 == NULL) {
    _swig_gopanic("Attempt to dereference null ImVec2");
  }
  arg9 = (ImVec2)*argp9;
  
  
  ImGui::PlotHistogram((char const *)arg1,arg2,arg3,arg4,arg5,(char const *)arg6,arg7,arg8,SWIG_STD_MOVE(arg9));
  
  free(arg1); 
  free(arg6); 
}


void _wrap_PlotHistogram__SWIG_8_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, void* _swig_go_1, void *_swig_go_2, intgo _swig_go_3, intgo _swig_go_4, _gostring_ _swig_go_5, float _swig_go_6, float _swig_go_7) {
  char *arg1 = (char *) 0 ;
  float (*arg2)(void *,int) = (float (*)(void *,int)) 0 ;
  void *arg3 = (void *) 0 ;
  int arg4 ;
  int arg5 ;
  char *arg6 = (char *) 0 ;
  float arg7 ;
  float arg8 ;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(float (**)(void *,int))&_swig_go_1; 
  arg3 = *(void **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  arg6 = (char *)malloc(_swig_go_5.n + 1);
  memcpy(arg6, _swig_go_5.p, _swig_go_5.n);
  arg6[_swig_go_5.n] = '\0';
  
  arg7 = (float)_swig_go_6; 
  arg8 = (float)_swig_go_7; 
  
  ImGui::PlotHistogram((char const *)arg1,arg2,arg3,arg4,arg5,(char const *)arg6,arg7,arg8);
  
  free(arg1); 
  free(arg6); 
}


void _wrap_PlotHistogram__SWIG_9_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, void* _swig_go_1, void *_swig_go_2, intgo _swig_go_3, intgo _swig_go_4, _gostring_ _swig_go_5, float _swig_go_6) {
  char *arg1 = (char *) 0 ;
  float (*arg2)(void *,int) = (float (*)(void *,int)) 0 ;
  void *arg3 = (void *) 0 ;
  int arg4 ;
  int arg5 ;
  char *arg6 = (char *) 0 ;
  float arg7 ;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(float (**)(void *,int))&_swig_go_1; 
  arg3 = *(void **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  arg6 = (char *)malloc(_swig_go_5.n + 1);
  memcpy(arg6, _swig_go_5.p, _swig_go_5.n);
  arg6[_swig_go_5.n] = '\0';
  
  arg7 = (float)_swig_go_6; 
  
  ImGui::PlotHistogram((char const *)arg1,arg2,arg3,arg4,arg5,(char const *)arg6,arg7);
  
  free(arg1); 
  free(arg6); 
}


void _wrap_PlotHistogram__SWIG_10_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, void* _swig_go_1, void *_swig_go_2, intgo _swig_go_3, intgo _swig_go_4, _gostring_ _swig_go_5) {
  char *arg1 = (char *) 0 ;
  float (*arg2)(void *,int) = (float (*)(void *,int)) 0 ;
  void *arg3 = (void *) 0 ;
  int arg4 ;
  int arg5 ;
  char *arg6 = (char *) 0 ;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(float (**)(void *,int))&_swig_go_1; 
  arg3 = *(void **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  arg6 = (char *)malloc(_swig_go_5.n + 1);
  memcpy(arg6, _swig_go_5.p, _swig_go_5.n);
  arg6[_swig_go_5.n] = '\0';
  
  
  ImGui::PlotHistogram((char const *)arg1,arg2,arg3,arg4,arg5,(char const *)arg6);
  
  free(arg1); 
  free(arg6); 
}


void _wrap_PlotHistogram__SWIG_11_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, void* _swig_go_1, void *_swig_go_2, intgo _swig_go_3, intgo _swig_go_4) {
  char *arg1 = (char *) 0 ;
  float (*arg2)(void *,int) = (float (*)(void *,int)) 0 ;
  void *arg3 = (void *) 0 ;
  int arg4 ;
  int arg5 ;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(float (**)(void *,int))&_swig_go_1; 
  arg3 = *(void **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  ImGui::PlotHistogram((char const *)arg1,arg2,arg3,arg4,arg5);
  
  free(arg1); 
}


void _wrap_PlotHistogram__SWIG_12_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, void* _swig_go_1, void *_swig_go_2, intgo _swig_go_3) {
  char *arg1 = (char *) 0 ;
  float (*arg2)(void *,int) = (float (*)(void *,int)) 0 ;
  void *arg3 = (void *) 0 ;
  int arg4 ;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(float (**)(void *,int))&_swig_go_1; 
  arg3 = *(void **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  ImGui::PlotHistogram((char const *)arg1,arg2,arg3,arg4);
  
  free(arg1); 
}


void _wrap_Value__SWIG_0_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, bool _swig_go_1) {
  char *arg1 = (char *) 0 ;
  bool arg2 ;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = (bool)_swig_go_1; 
  
  ImGui::Value((char const *)arg1,arg2);
  
  free(arg1); 
}


void _wrap_Value__SWIG_1_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo _swig_go_1) {
  char *arg1 = (char *) 0 ;
  int arg2 ;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = (int)_swig_go_1; 
  
  ImGui::Value((char const *)arg1,arg2);
  
  free(arg1); 
}


void _wrap_Value__SWIG_2_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo _swig_go_1) {
  char *arg1 = (char *) 0 ;
  unsigned int arg2 ;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = (unsigned int)_swig_go_1; 
  
  ImGui::Value((char const *)arg1,arg2);
  
  free(arg1); 
}


void _wrap_Value__SWIG_3_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, float _swig_go_1, _gostring_ _swig_go_2) {
  char *arg1 = (char *) 0 ;
  float arg2 ;
  char *arg3 = (char *) 0 ;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = (float)_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  ImGui::Value((char const *)arg1,arg2,(char const *)arg3);
  
  free(arg1); 
  free(arg3); 
}


void _wrap_Value__SWIG_4_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, float _swig_go_1) {
  char *arg1 = (char *) 0 ;
  float arg2 ;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = (float)_swig_go_1; 
  
  ImGui::Value((char const *)arg1,arg2);
  
  free(arg1); 
}


bool _wrap_BeginMenuBar_imgui_568d46c1e1b4102a() {
  bool result;
  bool _swig_go_result;
  
  
  result = (bool)ImGui::BeginMenuBar();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_EndMenuBar_imgui_568d46c1e1b4102a() {
  ImGui::EndMenuBar();
  
}


bool _wrap_BeginMainMenuBar_imgui_568d46c1e1b4102a() {
  bool result;
  bool _swig_go_result;
  
  
  result = (bool)ImGui::BeginMainMenuBar();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_EndMainMenuBar_imgui_568d46c1e1b4102a() {
  ImGui::EndMainMenuBar();
  
}


bool _wrap_BeginMenu__SWIG_0_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, bool _swig_go_1) {
  char *arg1 = (char *) 0 ;
  bool arg2 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = (bool)_swig_go_1; 
  
  result = (bool)ImGui::BeginMenu((char const *)arg1,arg2);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_BeginMenu__SWIG_1_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0) {
  char *arg1 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  result = (bool)ImGui::BeginMenu((char const *)arg1);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


void _wrap_EndMenu_imgui_568d46c1e1b4102a() {
  ImGui::EndMenu();
  
}


bool _wrap_MenuItem__SWIG_0_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, _gostring_ _swig_go_1, bool _swig_go_2, bool _swig_go_3) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  bool arg3 ;
  bool arg4 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (bool)_swig_go_2; 
  arg4 = (bool)_swig_go_3; 
  
  result = (bool)ImGui::MenuItem((char const *)arg1,(char const *)arg2,arg3,arg4);
  _swig_go_result = result; 
  free(arg1); 
  free(arg2); 
  return _swig_go_result;
}


bool _wrap_MenuItem__SWIG_1_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, _gostring_ _swig_go_1, bool _swig_go_2) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  bool arg3 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (bool)_swig_go_2; 
  
  result = (bool)ImGui::MenuItem((char const *)arg1,(char const *)arg2,arg3);
  _swig_go_result = result; 
  free(arg1); 
  free(arg2); 
  return _swig_go_result;
}


bool _wrap_MenuItem__SWIG_2_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, _gostring_ _swig_go_1) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  result = (bool)ImGui::MenuItem((char const *)arg1,(char const *)arg2);
  _swig_go_result = result; 
  free(arg1); 
  free(arg2); 
  return _swig_go_result;
}


bool _wrap_MenuItem__SWIG_3_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0) {
  char *arg1 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  result = (bool)ImGui::MenuItem((char const *)arg1);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_MenuItem__SWIG_4_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, _gostring_ _swig_go_1, bool *_swig_go_2, bool _swig_go_3) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  bool *arg3 = (bool *) 0 ;
  bool arg4 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = *(bool **)&_swig_go_2; 
  arg4 = (bool)_swig_go_3; 
  
  result = (bool)ImGui::MenuItem((char const *)arg1,(char const *)arg2,arg3,arg4);
  _swig_go_result = result; 
  free(arg1); 
  free(arg2); 
  return _swig_go_result;
}


bool _wrap_MenuItem__SWIG_5_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, _gostring_ _swig_go_1, bool *_swig_go_2) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  bool *arg3 = (bool *) 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = *(bool **)&_swig_go_2; 
  
  result = (bool)ImGui::MenuItem((char const *)arg1,(char const *)arg2,arg3);
  _swig_go_result = result; 
  free(arg1); 
  free(arg2); 
  return _swig_go_result;
}


bool _wrap_BeginTooltip_imgui_568d46c1e1b4102a() {
  bool result;
  bool _swig_go_result;
  
  
  result = (bool)ImGui::BeginTooltip();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_EndTooltip_imgui_568d46c1e1b4102a() {
  ImGui::EndTooltip();
  
}


void _wrap_SetTooltip_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0) {
  char *arg1 = (char *) 0 ;
  void *arg2 = 0 ;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  ImGui::SetTooltip((char const *)arg1,arg2);
  
  free(arg1); 
}


void _wrap_SetTooltipV_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, va_list *_swig_go_1) {
  char *arg1 = (char *) 0 ;
  va_list arg2 ;
  va_list *argp2 ;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  argp2 = (va_list *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null va_list");
  }
  arg2 = (va_list)*argp2;
  
  
  ImGui::SetTooltipV((char const *)arg1,SWIG_STD_MOVE(arg2));
  
  free(arg1); 
}


bool _wrap_BeginItemTooltip_imgui_568d46c1e1b4102a() {
  bool result;
  bool _swig_go_result;
  
  
  result = (bool)ImGui::BeginItemTooltip();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_SetItemTooltip_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0) {
  char *arg1 = (char *) 0 ;
  void *arg2 = 0 ;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  ImGui::SetItemTooltip((char const *)arg1,arg2);
  
  free(arg1); 
}


void _wrap_SetItemTooltipV_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, va_list *_swig_go_1) {
  char *arg1 = (char *) 0 ;
  va_list arg2 ;
  va_list *argp2 ;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  argp2 = (va_list *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null va_list");
  }
  arg2 = (va_list)*argp2;
  
  
  ImGui::SetItemTooltipV((char const *)arg1,SWIG_STD_MOVE(arg2));
  
  free(arg1); 
}


bool _wrap_BeginPopup__SWIG_0_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo _swig_go_1) {
  char *arg1 = (char *) 0 ;
  ImGuiWindowFlags arg2 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = (ImGuiWindowFlags)_swig_go_1; 
  
  result = (bool)ImGui::BeginPopup((char const *)arg1,arg2);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_BeginPopup__SWIG_1_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0) {
  char *arg1 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  result = (bool)ImGui::BeginPopup((char const *)arg1);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_BeginPopupModal__SWIG_0_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, bool *_swig_go_1, intgo _swig_go_2) {
  char *arg1 = (char *) 0 ;
  bool *arg2 = (bool *) 0 ;
  ImGuiWindowFlags arg3 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(bool **)&_swig_go_1; 
  arg3 = (ImGuiWindowFlags)_swig_go_2; 
  
  result = (bool)ImGui::BeginPopupModal((char const *)arg1,arg2,arg3);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_BeginPopupModal__SWIG_1_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, bool *_swig_go_1) {
  char *arg1 = (char *) 0 ;
  bool *arg2 = (bool *) 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(bool **)&_swig_go_1; 
  
  result = (bool)ImGui::BeginPopupModal((char const *)arg1,arg2);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_BeginPopupModal__SWIG_2_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0) {
  char *arg1 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  result = (bool)ImGui::BeginPopupModal((char const *)arg1);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


void _wrap_EndPopup_imgui_568d46c1e1b4102a() {
  ImGui::EndPopup();
  
}


void _wrap_OpenPopup__SWIG_0_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo _swig_go_1) {
  char *arg1 = (char *) 0 ;
  ImGuiPopupFlags arg2 ;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = (ImGuiPopupFlags)_swig_go_1; 
  
  ImGui::OpenPopup((char const *)arg1,arg2);
  
  free(arg1); 
}


void _wrap_OpenPopup__SWIG_1_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0) {
  char *arg1 = (char *) 0 ;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  ImGui::OpenPopup((char const *)arg1);
  
  free(arg1); 
}


void _wrap_OpenPopup__SWIG_2_imgui_568d46c1e1b4102a(intgo _swig_go_0, intgo _swig_go_1) {
  ImGuiID arg1 ;
  ImGuiPopupFlags arg2 ;
  
  arg1 = (ImGuiID)_swig_go_0; 
  arg2 = (ImGuiPopupFlags)_swig_go_1; 
  
  ImGui::OpenPopup(arg1,arg2);
  
}


void _wrap_OpenPopup__SWIG_3_imgui_568d46c1e1b4102a(intgo _swig_go_0) {
  ImGuiID arg1 ;
  
  arg1 = (ImGuiID)_swig_go_0; 
  
  ImGui::OpenPopup(arg1);
  
}


void _wrap_OpenPopupOnItemClick__SWIG_0_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo _swig_go_1) {
  char *arg1 = (char *) 0 ;
  ImGuiPopupFlags arg2 ;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = (ImGuiPopupFlags)_swig_go_1; 
  
  ImGui::OpenPopupOnItemClick((char const *)arg1,arg2);
  
  free(arg1); 
}


void _wrap_OpenPopupOnItemClick__SWIG_1_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0) {
  char *arg1 = (char *) 0 ;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  ImGui::OpenPopupOnItemClick((char const *)arg1);
  
  free(arg1); 
}


void _wrap_OpenPopupOnItemClick__SWIG_2_imgui_568d46c1e1b4102a() {
  ImGui::OpenPopupOnItemClick();
  
}


void _wrap_CloseCurrentPopup_imgui_568d46c1e1b4102a() {
  ImGui::CloseCurrentPopup();
  
}


bool _wrap_BeginPopupContextItem__SWIG_0_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo _swig_go_1) {
  char *arg1 = (char *) 0 ;
  ImGuiPopupFlags arg2 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = (ImGuiPopupFlags)_swig_go_1; 
  
  result = (bool)ImGui::BeginPopupContextItem((char const *)arg1,arg2);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_BeginPopupContextItem__SWIG_1_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0) {
  char *arg1 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  result = (bool)ImGui::BeginPopupContextItem((char const *)arg1);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_BeginPopupContextItem__SWIG_2_imgui_568d46c1e1b4102a() {
  bool result;
  bool _swig_go_result;
  
  
  result = (bool)ImGui::BeginPopupContextItem();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_BeginPopupContextWindow__SWIG_0_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo _swig_go_1) {
  char *arg1 = (char *) 0 ;
  ImGuiPopupFlags arg2 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = (ImGuiPopupFlags)_swig_go_1; 
  
  result = (bool)ImGui::BeginPopupContextWindow((char const *)arg1,arg2);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_BeginPopupContextWindow__SWIG_1_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0) {
  char *arg1 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  result = (bool)ImGui::BeginPopupContextWindow((char const *)arg1);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_BeginPopupContextWindow__SWIG_2_imgui_568d46c1e1b4102a() {
  bool result;
  bool _swig_go_result;
  
  
  result = (bool)ImGui::BeginPopupContextWindow();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_BeginPopupContextVoid__SWIG_0_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo _swig_go_1) {
  char *arg1 = (char *) 0 ;
  ImGuiPopupFlags arg2 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = (ImGuiPopupFlags)_swig_go_1; 
  
  result = (bool)ImGui::BeginPopupContextVoid((char const *)arg1,arg2);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_BeginPopupContextVoid__SWIG_1_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0) {
  char *arg1 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  result = (bool)ImGui::BeginPopupContextVoid((char const *)arg1);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_BeginPopupContextVoid__SWIG_2_imgui_568d46c1e1b4102a() {
  bool result;
  bool _swig_go_result;
  
  
  result = (bool)ImGui::BeginPopupContextVoid();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_IsPopupOpen__SWIG_0_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo _swig_go_1) {
  char *arg1 = (char *) 0 ;
  ImGuiPopupFlags arg2 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = (ImGuiPopupFlags)_swig_go_1; 
  
  result = (bool)ImGui::IsPopupOpen((char const *)arg1,arg2);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_IsPopupOpen__SWIG_1_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0) {
  char *arg1 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  result = (bool)ImGui::IsPopupOpen((char const *)arg1);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_BeginTable__SWIG_0_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo _swig_go_1, intgo _swig_go_2, ImVec2 *_swig_go_3, float _swig_go_4) {
  char *arg1 = (char *) 0 ;
  int arg2 ;
  ImGuiTableFlags arg3 ;
  ImVec2 *arg4 = 0 ;
  float arg5 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = (int)_swig_go_1; 
  arg3 = (ImGuiTableFlags)_swig_go_2; 
  arg4 = *(ImVec2 **)&_swig_go_3; 
  arg5 = (float)_swig_go_4; 
  
  result = (bool)ImGui::BeginTable((char const *)arg1,arg2,arg3,(ImVec2 const &)*arg4,arg5);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_BeginTable__SWIG_1_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo _swig_go_1, intgo _swig_go_2, ImVec2 *_swig_go_3) {
  char *arg1 = (char *) 0 ;
  int arg2 ;
  ImGuiTableFlags arg3 ;
  ImVec2 *arg4 = 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = (int)_swig_go_1; 
  arg3 = (ImGuiTableFlags)_swig_go_2; 
  arg4 = *(ImVec2 **)&_swig_go_3; 
  
  result = (bool)ImGui::BeginTable((char const *)arg1,arg2,arg3,(ImVec2 const &)*arg4);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_BeginTable__SWIG_2_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  char *arg1 = (char *) 0 ;
  int arg2 ;
  ImGuiTableFlags arg3 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = (int)_swig_go_1; 
  arg3 = (ImGuiTableFlags)_swig_go_2; 
  
  result = (bool)ImGui::BeginTable((char const *)arg1,arg2,arg3);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_BeginTable__SWIG_3_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo _swig_go_1) {
  char *arg1 = (char *) 0 ;
  int arg2 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = (int)_swig_go_1; 
  
  result = (bool)ImGui::BeginTable((char const *)arg1,arg2);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


void _wrap_EndTable_imgui_568d46c1e1b4102a() {
  ImGui::EndTable();
  
}


void _wrap_TableNextRow__SWIG_0_imgui_568d46c1e1b4102a(intgo _swig_go_0, float _swig_go_1) {
  ImGuiTableRowFlags arg1 ;
  float arg2 ;
  
  arg1 = (ImGuiTableRowFlags)_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  ImGui::TableNextRow(arg1,arg2);
  
}


void _wrap_TableNextRow__SWIG_1_imgui_568d46c1e1b4102a(intgo _swig_go_0) {
  ImGuiTableRowFlags arg1 ;
  
  arg1 = (ImGuiTableRowFlags)_swig_go_0; 
  
  ImGui::TableNextRow(arg1);
  
}


void _wrap_TableNextRow__SWIG_2_imgui_568d46c1e1b4102a() {
  ImGui::TableNextRow();
  
}


bool _wrap_TableNextColumn_imgui_568d46c1e1b4102a() {
  bool result;
  bool _swig_go_result;
  
  
  result = (bool)ImGui::TableNextColumn();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_TableSetColumnIndex_imgui_568d46c1e1b4102a(intgo _swig_go_0) {
  int arg1 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  
  result = (bool)ImGui::TableSetColumnIndex(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_TableSetupColumn__SWIG_0_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo _swig_go_1, float _swig_go_2, intgo _swig_go_3) {
  char *arg1 = (char *) 0 ;
  ImGuiTableColumnFlags arg2 ;
  float arg3 ;
  ImGuiID arg4 ;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = (ImGuiTableColumnFlags)_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  arg4 = (ImGuiID)_swig_go_3; 
  
  ImGui::TableSetupColumn((char const *)arg1,arg2,arg3,arg4);
  
  free(arg1); 
}


void _wrap_TableSetupColumn__SWIG_1_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo _swig_go_1, float _swig_go_2) {
  char *arg1 = (char *) 0 ;
  ImGuiTableColumnFlags arg2 ;
  float arg3 ;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = (ImGuiTableColumnFlags)_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  
  ImGui::TableSetupColumn((char const *)arg1,arg2,arg3);
  
  free(arg1); 
}


void _wrap_TableSetupColumn__SWIG_2_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo _swig_go_1) {
  char *arg1 = (char *) 0 ;
  ImGuiTableColumnFlags arg2 ;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = (ImGuiTableColumnFlags)_swig_go_1; 
  
  ImGui::TableSetupColumn((char const *)arg1,arg2);
  
  free(arg1); 
}


void _wrap_TableSetupColumn__SWIG_3_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0) {
  char *arg1 = (char *) 0 ;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  ImGui::TableSetupColumn((char const *)arg1);
  
  free(arg1); 
}


void _wrap_TableSetupScrollFreeze_imgui_568d46c1e1b4102a(intgo _swig_go_0, intgo _swig_go_1) {
  int arg1 ;
  int arg2 ;
  
  arg1 = (int)_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  ImGui::TableSetupScrollFreeze(arg1,arg2);
  
}


void _wrap_TableHeader_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0) {
  char *arg1 = (char *) 0 ;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  ImGui::TableHeader((char const *)arg1);
  
  free(arg1); 
}


void _wrap_TableHeadersRow_imgui_568d46c1e1b4102a() {
  ImGui::TableHeadersRow();
  
}


void _wrap_TableAngledHeadersRow_imgui_568d46c1e1b4102a() {
  ImGui::TableAngledHeadersRow();
  
}


ImGuiTableSortSpecs *_wrap_TableGetSortSpecs_imgui_568d46c1e1b4102a() {
  ImGuiTableSortSpecs *result = 0 ;
  ImGuiTableSortSpecs *_swig_go_result;
  
  
  result = (ImGuiTableSortSpecs *)ImGui::TableGetSortSpecs();
  *(ImGuiTableSortSpecs **)&_swig_go_result = (ImGuiTableSortSpecs *)result; 
  return _swig_go_result;
}


intgo _wrap_TableGetColumnCount_imgui_568d46c1e1b4102a() {
  int result;
  intgo _swig_go_result;
  
  
  result = (int)ImGui::TableGetColumnCount();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_TableGetColumnIndex_imgui_568d46c1e1b4102a() {
  int result;
  intgo _swig_go_result;
  
  
  result = (int)ImGui::TableGetColumnIndex();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_TableGetRowIndex_imgui_568d46c1e1b4102a() {
  int result;
  intgo _swig_go_result;
  
  
  result = (int)ImGui::TableGetRowIndex();
  _swig_go_result = result; 
  return _swig_go_result;
}


_gostring_ _wrap_TableGetColumnName__SWIG_0_imgui_568d46c1e1b4102a(intgo _swig_go_0) {
  int arg1 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  
  result = (char *)ImGui::TableGetColumnName(arg1);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


_gostring_ _wrap_TableGetColumnName__SWIG_1_imgui_568d46c1e1b4102a() {
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  
  result = (char *)ImGui::TableGetColumnName();
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


intgo _wrap_TableGetColumnFlags__SWIG_0_imgui_568d46c1e1b4102a(intgo _swig_go_0) {
  int arg1 ;
  ImGuiTableColumnFlags result;
  intgo _swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  
  result = (ImGuiTableColumnFlags)ImGui::TableGetColumnFlags(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_TableGetColumnFlags__SWIG_1_imgui_568d46c1e1b4102a() {
  ImGuiTableColumnFlags result;
  intgo _swig_go_result;
  
  
  result = (ImGuiTableColumnFlags)ImGui::TableGetColumnFlags();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_TableSetColumnEnabled_imgui_568d46c1e1b4102a(intgo _swig_go_0, bool _swig_go_1) {
  int arg1 ;
  bool arg2 ;
  
  arg1 = (int)_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  ImGui::TableSetColumnEnabled(arg1,arg2);
  
}


intgo _wrap_TableGetHoveredColumn_imgui_568d46c1e1b4102a() {
  int result;
  intgo _swig_go_result;
  
  
  result = (int)ImGui::TableGetHoveredColumn();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_TableSetBgColor__SWIG_0_imgui_568d46c1e1b4102a(intgo _swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  ImGuiTableBgTarget arg1 ;
  ImU32 arg2 ;
  int arg3 ;
  
  arg1 = (ImGuiTableBgTarget)_swig_go_0; 
  arg2 = (ImU32)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  ImGui::TableSetBgColor(arg1,arg2,arg3);
  
}


void _wrap_TableSetBgColor__SWIG_1_imgui_568d46c1e1b4102a(intgo _swig_go_0, intgo _swig_go_1) {
  ImGuiTableBgTarget arg1 ;
  ImU32 arg2 ;
  
  arg1 = (ImGuiTableBgTarget)_swig_go_0; 
  arg2 = (ImU32)_swig_go_1; 
  
  ImGui::TableSetBgColor(arg1,arg2);
  
}


void _wrap_Columns__SWIG_0_imgui_568d46c1e1b4102a(intgo _swig_go_0, _gostring_ _swig_go_1, bool _swig_go_2) {
  int arg1 ;
  char *arg2 = (char *) 0 ;
  bool arg3 ;
  
  arg1 = (int)_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (bool)_swig_go_2; 
  
  ImGui::Columns(arg1,(char const *)arg2,arg3);
  
  free(arg2); 
}


void _wrap_Columns__SWIG_1_imgui_568d46c1e1b4102a(intgo _swig_go_0, _gostring_ _swig_go_1) {
  int arg1 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (int)_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  ImGui::Columns(arg1,(char const *)arg2);
  
  free(arg2); 
}


void _wrap_Columns__SWIG_2_imgui_568d46c1e1b4102a(intgo _swig_go_0) {
  int arg1 ;
  
  arg1 = (int)_swig_go_0; 
  
  ImGui::Columns(arg1);
  
}


void _wrap_Columns__SWIG_3_imgui_568d46c1e1b4102a() {
  ImGui::Columns();
  
}


void _wrap_NextColumn_imgui_568d46c1e1b4102a() {
  ImGui::NextColumn();
  
}


intgo _wrap_GetColumnIndex_imgui_568d46c1e1b4102a() {
  int result;
  intgo _swig_go_result;
  
  
  result = (int)ImGui::GetColumnIndex();
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_GetColumnWidth__SWIG_0_imgui_568d46c1e1b4102a(intgo _swig_go_0) {
  int arg1 ;
  float result;
  float _swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  
  result = (float)ImGui::GetColumnWidth(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_GetColumnWidth__SWIG_1_imgui_568d46c1e1b4102a() {
  float result;
  float _swig_go_result;
  
  
  result = (float)ImGui::GetColumnWidth();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_SetColumnWidth_imgui_568d46c1e1b4102a(intgo _swig_go_0, float _swig_go_1) {
  int arg1 ;
  float arg2 ;
  
  arg1 = (int)_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  ImGui::SetColumnWidth(arg1,arg2);
  
}


float _wrap_GetColumnOffset__SWIG_0_imgui_568d46c1e1b4102a(intgo _swig_go_0) {
  int arg1 ;
  float result;
  float _swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  
  result = (float)ImGui::GetColumnOffset(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_GetColumnOffset__SWIG_1_imgui_568d46c1e1b4102a() {
  float result;
  float _swig_go_result;
  
  
  result = (float)ImGui::GetColumnOffset();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_SetColumnOffset_imgui_568d46c1e1b4102a(intgo _swig_go_0, float _swig_go_1) {
  int arg1 ;
  float arg2 ;
  
  arg1 = (int)_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  ImGui::SetColumnOffset(arg1,arg2);
  
}


intgo _wrap_GetColumnsCount_imgui_568d46c1e1b4102a() {
  int result;
  intgo _swig_go_result;
  
  
  result = (int)ImGui::GetColumnsCount();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_BeginTabBar__SWIG_0_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo _swig_go_1) {
  char *arg1 = (char *) 0 ;
  ImGuiTabBarFlags arg2 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = (ImGuiTabBarFlags)_swig_go_1; 
  
  result = (bool)ImGui::BeginTabBar((char const *)arg1,arg2);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_BeginTabBar__SWIG_1_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0) {
  char *arg1 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  result = (bool)ImGui::BeginTabBar((char const *)arg1);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


void _wrap_EndTabBar_imgui_568d46c1e1b4102a() {
  ImGui::EndTabBar();
  
}


bool _wrap_BeginTabItem__SWIG_0_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, bool *_swig_go_1, intgo _swig_go_2) {
  char *arg1 = (char *) 0 ;
  bool *arg2 = (bool *) 0 ;
  ImGuiTabItemFlags arg3 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(bool **)&_swig_go_1; 
  arg3 = (ImGuiTabItemFlags)_swig_go_2; 
  
  result = (bool)ImGui::BeginTabItem((char const *)arg1,arg2,arg3);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_BeginTabItem__SWIG_1_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, bool *_swig_go_1) {
  char *arg1 = (char *) 0 ;
  bool *arg2 = (bool *) 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(bool **)&_swig_go_1; 
  
  result = (bool)ImGui::BeginTabItem((char const *)arg1,arg2);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_BeginTabItem__SWIG_2_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0) {
  char *arg1 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  result = (bool)ImGui::BeginTabItem((char const *)arg1);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


void _wrap_EndTabItem_imgui_568d46c1e1b4102a() {
  ImGui::EndTabItem();
  
}


bool _wrap_TabItemButton__SWIG_0_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo _swig_go_1) {
  char *arg1 = (char *) 0 ;
  ImGuiTabItemFlags arg2 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = (ImGuiTabItemFlags)_swig_go_1; 
  
  result = (bool)ImGui::TabItemButton((char const *)arg1,arg2);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_TabItemButton__SWIG_1_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0) {
  char *arg1 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  result = (bool)ImGui::TabItemButton((char const *)arg1);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


void _wrap_SetTabItemClosed_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0) {
  char *arg1 = (char *) 0 ;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  ImGui::SetTabItemClosed((char const *)arg1);
  
  free(arg1); 
}


void _wrap_LogToTTY__SWIG_0_imgui_568d46c1e1b4102a(intgo _swig_go_0) {
  int arg1 ;
  
  arg1 = (int)_swig_go_0; 
  
  ImGui::LogToTTY(arg1);
  
}


void _wrap_LogToTTY__SWIG_1_imgui_568d46c1e1b4102a() {
  ImGui::LogToTTY();
  
}


void _wrap_LogToFile__SWIG_0_imgui_568d46c1e1b4102a(intgo _swig_go_0, _gostring_ _swig_go_1) {
  int arg1 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (int)_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  ImGui::LogToFile(arg1,(char const *)arg2);
  
  free(arg2); 
}


void _wrap_LogToFile__SWIG_1_imgui_568d46c1e1b4102a(intgo _swig_go_0) {
  int arg1 ;
  
  arg1 = (int)_swig_go_0; 
  
  ImGui::LogToFile(arg1);
  
}


void _wrap_LogToFile__SWIG_2_imgui_568d46c1e1b4102a() {
  ImGui::LogToFile();
  
}


void _wrap_LogToClipboard__SWIG_0_imgui_568d46c1e1b4102a(intgo _swig_go_0) {
  int arg1 ;
  
  arg1 = (int)_swig_go_0; 
  
  ImGui::LogToClipboard(arg1);
  
}


void _wrap_LogToClipboard__SWIG_1_imgui_568d46c1e1b4102a() {
  ImGui::LogToClipboard();
  
}


void _wrap_LogFinish_imgui_568d46c1e1b4102a() {
  ImGui::LogFinish();
  
}


void _wrap_LogButtons_imgui_568d46c1e1b4102a() {
  ImGui::LogButtons();
  
}


void _wrap_LogText_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0) {
  char *arg1 = (char *) 0 ;
  void *arg2 = 0 ;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  ImGui::LogText((char const *)arg1,arg2);
  
  free(arg1); 
}


void _wrap_LogTextV_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, va_list *_swig_go_1) {
  char *arg1 = (char *) 0 ;
  va_list arg2 ;
  va_list *argp2 ;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  argp2 = (va_list *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null va_list");
  }
  arg2 = (va_list)*argp2;
  
  
  ImGui::LogTextV((char const *)arg1,SWIG_STD_MOVE(arg2));
  
  free(arg1); 
}


bool _wrap_BeginDragDropSource__SWIG_0_imgui_568d46c1e1b4102a(intgo _swig_go_0) {
  ImGuiDragDropFlags arg1 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = (ImGuiDragDropFlags)_swig_go_0; 
  
  result = (bool)ImGui::BeginDragDropSource(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_BeginDragDropSource__SWIG_1_imgui_568d46c1e1b4102a() {
  bool result;
  bool _swig_go_result;
  
  
  result = (bool)ImGui::BeginDragDropSource();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_SetDragDropPayload__SWIG_0_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, void *_swig_go_1, long long _swig_go_2, intgo _swig_go_3) {
  char *arg1 = (char *) 0 ;
  void *arg2 = (void *) 0 ;
  size_t arg3 ;
  ImGuiCond arg4 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(void **)&_swig_go_1; 
  arg3 = (size_t)_swig_go_2; 
  arg4 = (ImGuiCond)_swig_go_3; 
  
  result = (bool)ImGui::SetDragDropPayload((char const *)arg1,(void const *)arg2,SWIG_STD_MOVE(arg3),arg4);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_SetDragDropPayload__SWIG_1_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, void *_swig_go_1, long long _swig_go_2) {
  char *arg1 = (char *) 0 ;
  void *arg2 = (void *) 0 ;
  size_t arg3 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(void **)&_swig_go_1; 
  arg3 = (size_t)_swig_go_2; 
  
  result = (bool)ImGui::SetDragDropPayload((char const *)arg1,(void const *)arg2,SWIG_STD_MOVE(arg3));
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


void _wrap_EndDragDropSource_imgui_568d46c1e1b4102a() {
  ImGui::EndDragDropSource();
  
}


bool _wrap_BeginDragDropTarget_imgui_568d46c1e1b4102a() {
  bool result;
  bool _swig_go_result;
  
  
  result = (bool)ImGui::BeginDragDropTarget();
  _swig_go_result = result; 
  return _swig_go_result;
}


ImGuiPayload *_wrap_AcceptDragDropPayload__SWIG_0_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo _swig_go_1) {
  char *arg1 = (char *) 0 ;
  ImGuiDragDropFlags arg2 ;
  ImGuiPayload *result = 0 ;
  ImGuiPayload *_swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = (ImGuiDragDropFlags)_swig_go_1; 
  
  result = (ImGuiPayload *)ImGui::AcceptDragDropPayload((char const *)arg1,arg2);
  *(ImGuiPayload **)&_swig_go_result = (ImGuiPayload *)result; 
  free(arg1); 
  return _swig_go_result;
}


ImGuiPayload *_wrap_AcceptDragDropPayload__SWIG_1_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0) {
  char *arg1 = (char *) 0 ;
  ImGuiPayload *result = 0 ;
  ImGuiPayload *_swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  result = (ImGuiPayload *)ImGui::AcceptDragDropPayload((char const *)arg1);
  *(ImGuiPayload **)&_swig_go_result = (ImGuiPayload *)result; 
  free(arg1); 
  return _swig_go_result;
}


void _wrap_EndDragDropTarget_imgui_568d46c1e1b4102a() {
  ImGui::EndDragDropTarget();
  
}


ImGuiPayload *_wrap_GetDragDropPayload_imgui_568d46c1e1b4102a() {
  ImGuiPayload *result = 0 ;
  ImGuiPayload *_swig_go_result;
  
  
  result = (ImGuiPayload *)ImGui::GetDragDropPayload();
  *(ImGuiPayload **)&_swig_go_result = (ImGuiPayload *)result; 
  return _swig_go_result;
}


void _wrap_BeginDisabled__SWIG_0_imgui_568d46c1e1b4102a(bool _swig_go_0) {
  bool arg1 ;
  
  arg1 = (bool)_swig_go_0; 
  
  ImGui::BeginDisabled(arg1);
  
}


void _wrap_BeginDisabled__SWIG_1_imgui_568d46c1e1b4102a() {
  ImGui::BeginDisabled();
  
}


void _wrap_EndDisabled_imgui_568d46c1e1b4102a() {
  ImGui::EndDisabled();
  
}


void _wrap_PushClipRect_imgui_568d46c1e1b4102a(ImVec2 *_swig_go_0, ImVec2 *_swig_go_1, bool _swig_go_2) {
  ImVec2 *arg1 = 0 ;
  ImVec2 *arg2 = 0 ;
  bool arg3 ;
  
  arg1 = *(ImVec2 **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  arg3 = (bool)_swig_go_2; 
  
  ImGui::PushClipRect((ImVec2 const &)*arg1,(ImVec2 const &)*arg2,arg3);
  
}


void _wrap_PopClipRect_imgui_568d46c1e1b4102a() {
  ImGui::PopClipRect();
  
}


void _wrap_SetItemDefaultFocus_imgui_568d46c1e1b4102a() {
  ImGui::SetItemDefaultFocus();
  
}


void _wrap_SetKeyboardFocusHere__SWIG_0_imgui_568d46c1e1b4102a(intgo _swig_go_0) {
  int arg1 ;
  
  arg1 = (int)_swig_go_0; 
  
  ImGui::SetKeyboardFocusHere(arg1);
  
}


void _wrap_SetKeyboardFocusHere__SWIG_1_imgui_568d46c1e1b4102a() {
  ImGui::SetKeyboardFocusHere();
  
}


void _wrap_SetNextItemAllowOverlap_imgui_568d46c1e1b4102a() {
  ImGui::SetNextItemAllowOverlap();
  
}


bool _wrap_IsItemHovered__SWIG_0_imgui_568d46c1e1b4102a(intgo _swig_go_0) {
  ImGuiHoveredFlags arg1 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = (ImGuiHoveredFlags)_swig_go_0; 
  
  result = (bool)ImGui::IsItemHovered(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_IsItemHovered__SWIG_1_imgui_568d46c1e1b4102a() {
  bool result;
  bool _swig_go_result;
  
  
  result = (bool)ImGui::IsItemHovered();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_IsItemActive_imgui_568d46c1e1b4102a() {
  bool result;
  bool _swig_go_result;
  
  
  result = (bool)ImGui::IsItemActive();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_IsItemFocused_imgui_568d46c1e1b4102a() {
  bool result;
  bool _swig_go_result;
  
  
  result = (bool)ImGui::IsItemFocused();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_IsItemClicked__SWIG_0_imgui_568d46c1e1b4102a(intgo _swig_go_0) {
  ImGuiMouseButton arg1 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = (ImGuiMouseButton)_swig_go_0; 
  
  result = (bool)ImGui::IsItemClicked(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_IsItemClicked__SWIG_1_imgui_568d46c1e1b4102a() {
  bool result;
  bool _swig_go_result;
  
  
  result = (bool)ImGui::IsItemClicked();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_IsItemVisible_imgui_568d46c1e1b4102a() {
  bool result;
  bool _swig_go_result;
  
  
  result = (bool)ImGui::IsItemVisible();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_IsItemEdited_imgui_568d46c1e1b4102a() {
  bool result;
  bool _swig_go_result;
  
  
  result = (bool)ImGui::IsItemEdited();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_IsItemActivated_imgui_568d46c1e1b4102a() {
  bool result;
  bool _swig_go_result;
  
  
  result = (bool)ImGui::IsItemActivated();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_IsItemDeactivated_imgui_568d46c1e1b4102a() {
  bool result;
  bool _swig_go_result;
  
  
  result = (bool)ImGui::IsItemDeactivated();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_IsItemDeactivatedAfterEdit_imgui_568d46c1e1b4102a() {
  bool result;
  bool _swig_go_result;
  
  
  result = (bool)ImGui::IsItemDeactivatedAfterEdit();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_IsItemToggledOpen_imgui_568d46c1e1b4102a() {
  bool result;
  bool _swig_go_result;
  
  
  result = (bool)ImGui::IsItemToggledOpen();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_IsAnyItemHovered_imgui_568d46c1e1b4102a() {
  bool result;
  bool _swig_go_result;
  
  
  result = (bool)ImGui::IsAnyItemHovered();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_IsAnyItemActive_imgui_568d46c1e1b4102a() {
  bool result;
  bool _swig_go_result;
  
  
  result = (bool)ImGui::IsAnyItemActive();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_IsAnyItemFocused_imgui_568d46c1e1b4102a() {
  bool result;
  bool _swig_go_result;
  
  
  result = (bool)ImGui::IsAnyItemFocused();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_GetItemID_imgui_568d46c1e1b4102a() {
  ImGuiID result;
  intgo _swig_go_result;
  
  
  result = (ImGuiID)ImGui::GetItemID();
  _swig_go_result = result; 
  return _swig_go_result;
}


ImVec2 *_wrap_GetItemRectMin_imgui_568d46c1e1b4102a() {
  ImVec2 result;
  ImVec2 *_swig_go_result;
  
  
  result = ImGui::GetItemRectMin();
  *(ImVec2 **)&_swig_go_result = new ImVec2(result); 
  return _swig_go_result;
}


ImVec2 *_wrap_GetItemRectMax_imgui_568d46c1e1b4102a() {
  ImVec2 result;
  ImVec2 *_swig_go_result;
  
  
  result = ImGui::GetItemRectMax();
  *(ImVec2 **)&_swig_go_result = new ImVec2(result); 
  return _swig_go_result;
}


ImVec2 *_wrap_GetItemRectSize_imgui_568d46c1e1b4102a() {
  ImVec2 result;
  ImVec2 *_swig_go_result;
  
  
  result = ImGui::GetItemRectSize();
  *(ImVec2 **)&_swig_go_result = new ImVec2(result); 
  return _swig_go_result;
}


ImGuiViewport *_wrap_GetMainViewport_imgui_568d46c1e1b4102a() {
  ImGuiViewport *result = 0 ;
  ImGuiViewport *_swig_go_result;
  
  
  result = (ImGuiViewport *)ImGui::GetMainViewport();
  *(ImGuiViewport **)&_swig_go_result = (ImGuiViewport *)result; 
  return _swig_go_result;
}


ImDrawList *_wrap_GetBackgroundDrawList_imgui_568d46c1e1b4102a() {
  ImDrawList *result = 0 ;
  ImDrawList *_swig_go_result;
  
  
  result = (ImDrawList *)ImGui::GetBackgroundDrawList();
  *(ImDrawList **)&_swig_go_result = (ImDrawList *)result; 
  return _swig_go_result;
}


ImDrawList *_wrap_GetForegroundDrawList_imgui_568d46c1e1b4102a() {
  ImDrawList *result = 0 ;
  ImDrawList *_swig_go_result;
  
  
  result = (ImDrawList *)ImGui::GetForegroundDrawList();
  *(ImDrawList **)&_swig_go_result = (ImDrawList *)result; 
  return _swig_go_result;
}


bool _wrap_IsRectVisible__SWIG_0_imgui_568d46c1e1b4102a(ImVec2 *_swig_go_0) {
  ImVec2 *arg1 = 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ImVec2 **)&_swig_go_0; 
  
  result = (bool)ImGui::IsRectVisible((ImVec2 const &)*arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_IsRectVisible__SWIG_1_imgui_568d46c1e1b4102a(ImVec2 *_swig_go_0, ImVec2 *_swig_go_1) {
  ImVec2 *arg1 = 0 ;
  ImVec2 *arg2 = 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ImVec2 **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  
  result = (bool)ImGui::IsRectVisible((ImVec2 const &)*arg1,(ImVec2 const &)*arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


double _wrap_GetTime_imgui_568d46c1e1b4102a() {
  double result;
  double _swig_go_result;
  
  
  result = (double)ImGui::GetTime();
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_GetFrameCount_imgui_568d46c1e1b4102a() {
  int result;
  intgo _swig_go_result;
  
  
  result = (int)ImGui::GetFrameCount();
  _swig_go_result = result; 
  return _swig_go_result;
}


ImDrawListSharedData *_wrap_GetDrawListSharedData_imgui_568d46c1e1b4102a() {
  ImDrawListSharedData *result = 0 ;
  ImDrawListSharedData *_swig_go_result;
  
  
  result = (ImDrawListSharedData *)ImGui::GetDrawListSharedData();
  *(ImDrawListSharedData **)&_swig_go_result = (ImDrawListSharedData *)result; 
  return _swig_go_result;
}


_gostring_ _wrap_GetStyleColorName_imgui_568d46c1e1b4102a(intgo _swig_go_0) {
  ImGuiCol arg1 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = (ImGuiCol)_swig_go_0; 
  
  result = (char *)ImGui::GetStyleColorName(arg1);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_SetStateStorage_imgui_568d46c1e1b4102a(ImGuiStorage *_swig_go_0) {
  ImGuiStorage *arg1 = (ImGuiStorage *) 0 ;
  
  arg1 = *(ImGuiStorage **)&_swig_go_0; 
  
  ImGui::SetStateStorage(arg1);
  
}


ImGuiStorage *_wrap_GetStateStorage_imgui_568d46c1e1b4102a() {
  ImGuiStorage *result = 0 ;
  ImGuiStorage *_swig_go_result;
  
  
  result = (ImGuiStorage *)ImGui::GetStateStorage();
  *(ImGuiStorage **)&_swig_go_result = (ImGuiStorage *)result; 
  return _swig_go_result;
}


ImVec2 *_wrap_CalcTextSize__SWIG_0_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, _gostring_ _swig_go_1, bool _swig_go_2, float _swig_go_3) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  bool arg3 ;
  float arg4 ;
  ImVec2 result;
  ImVec2 *_swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (bool)_swig_go_2; 
  arg4 = (float)_swig_go_3; 
  
  result = ImGui::CalcTextSize((char const *)arg1,(char const *)arg2,arg3,arg4);
  *(ImVec2 **)&_swig_go_result = new ImVec2(result); 
  free(arg1); 
  free(arg2); 
  return _swig_go_result;
}


ImVec2 *_wrap_CalcTextSize__SWIG_1_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, _gostring_ _swig_go_1, bool _swig_go_2) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  bool arg3 ;
  ImVec2 result;
  ImVec2 *_swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (bool)_swig_go_2; 
  
  result = ImGui::CalcTextSize((char const *)arg1,(char const *)arg2,arg3);
  *(ImVec2 **)&_swig_go_result = new ImVec2(result); 
  free(arg1); 
  free(arg2); 
  return _swig_go_result;
}


ImVec2 *_wrap_CalcTextSize__SWIG_2_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, _gostring_ _swig_go_1) {
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  ImVec2 result;
  ImVec2 *_swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  result = ImGui::CalcTextSize((char const *)arg1,(char const *)arg2);
  *(ImVec2 **)&_swig_go_result = new ImVec2(result); 
  free(arg1); 
  free(arg2); 
  return _swig_go_result;
}


ImVec2 *_wrap_CalcTextSize__SWIG_3_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0) {
  char *arg1 = (char *) 0 ;
  ImVec2 result;
  ImVec2 *_swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  result = ImGui::CalcTextSize((char const *)arg1);
  *(ImVec2 **)&_swig_go_result = new ImVec2(result); 
  free(arg1); 
  return _swig_go_result;
}


ImVec4 *_wrap_ColorConvertU32ToFloat4_imgui_568d46c1e1b4102a(intgo _swig_go_0) {
  ImU32 arg1 ;
  ImVec4 result;
  ImVec4 *_swig_go_result;
  
  arg1 = (ImU32)_swig_go_0; 
  
  result = ImGui::ColorConvertU32ToFloat4(arg1);
  *(ImVec4 **)&_swig_go_result = new ImVec4(result); 
  return _swig_go_result;
}


intgo _wrap_ColorConvertFloat4ToU32_imgui_568d46c1e1b4102a(ImVec4 *_swig_go_0) {
  ImVec4 *arg1 = 0 ;
  ImU32 result;
  intgo _swig_go_result;
  
  arg1 = *(ImVec4 **)&_swig_go_0; 
  
  result = (ImU32)ImGui::ColorConvertFloat4ToU32((ImVec4 const &)*arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ColorConvertRGBtoHSV_imgui_568d46c1e1b4102a(float _swig_go_0, float _swig_go_1, float _swig_go_2, float *_swig_go_3, float *_swig_go_4, float *_swig_go_5) {
  float arg1 ;
  float arg2 ;
  float arg3 ;
  float *arg4 = 0 ;
  float *arg5 = 0 ;
  float *arg6 = 0 ;
  
  arg1 = (float)_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  arg4 = *(float **)&_swig_go_3; 
  arg5 = *(float **)&_swig_go_4; 
  arg6 = *(float **)&_swig_go_5; 
  
  ImGui::ColorConvertRGBtoHSV(arg1,arg2,arg3,*arg4,*arg5,*arg6);
  
}


void _wrap_ColorConvertHSVtoRGB_imgui_568d46c1e1b4102a(float _swig_go_0, float _swig_go_1, float _swig_go_2, float *_swig_go_3, float *_swig_go_4, float *_swig_go_5) {
  float arg1 ;
  float arg2 ;
  float arg3 ;
  float *arg4 = 0 ;
  float *arg5 = 0 ;
  float *arg6 = 0 ;
  
  arg1 = (float)_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  arg4 = *(float **)&_swig_go_3; 
  arg5 = *(float **)&_swig_go_4; 
  arg6 = *(float **)&_swig_go_5; 
  
  ImGui::ColorConvertHSVtoRGB(arg1,arg2,arg3,*arg4,*arg5,*arg6);
  
}


bool _wrap_IsKeyDown_imgui_568d46c1e1b4102a(intgo _swig_go_0) {
  ImGuiKey arg1 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = (ImGuiKey)_swig_go_0; 
  
  result = (bool)ImGui::IsKeyDown(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_IsKeyPressed__SWIG_0_imgui_568d46c1e1b4102a(intgo _swig_go_0, bool _swig_go_1) {
  ImGuiKey arg1 ;
  bool arg2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = (ImGuiKey)_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  result = (bool)ImGui::IsKeyPressed(arg1,arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_IsKeyPressed__SWIG_1_imgui_568d46c1e1b4102a(intgo _swig_go_0) {
  ImGuiKey arg1 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = (ImGuiKey)_swig_go_0; 
  
  result = (bool)ImGui::IsKeyPressed(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_IsKeyReleased_imgui_568d46c1e1b4102a(intgo _swig_go_0) {
  ImGuiKey arg1 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = (ImGuiKey)_swig_go_0; 
  
  result = (bool)ImGui::IsKeyReleased(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_IsKeyChordPressed_imgui_568d46c1e1b4102a(intgo _swig_go_0) {
  ImGuiKeyChord arg1 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = (ImGuiKeyChord)_swig_go_0; 
  
  result = (bool)ImGui::IsKeyChordPressed(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_GetKeyPressedAmount_imgui_568d46c1e1b4102a(intgo _swig_go_0, float _swig_go_1, float _swig_go_2) {
  ImGuiKey arg1 ;
  float arg2 ;
  float arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = (ImGuiKey)_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  
  result = (int)ImGui::GetKeyPressedAmount(arg1,arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


_gostring_ _wrap_GetKeyName_imgui_568d46c1e1b4102a(intgo _swig_go_0) {
  ImGuiKey arg1 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = (ImGuiKey)_swig_go_0; 
  
  result = (char *)ImGui::GetKeyName(arg1);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_SetNextFrameWantCaptureKeyboard_imgui_568d46c1e1b4102a(bool _swig_go_0) {
  bool arg1 ;
  
  arg1 = (bool)_swig_go_0; 
  
  ImGui::SetNextFrameWantCaptureKeyboard(arg1);
  
}


bool _wrap_Shortcut__SWIG_0_imgui_568d46c1e1b4102a(intgo _swig_go_0, intgo _swig_go_1) {
  ImGuiKeyChord arg1 ;
  ImGuiInputFlags arg2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = (ImGuiKeyChord)_swig_go_0; 
  arg2 = (ImGuiInputFlags)_swig_go_1; 
  
  result = (bool)ImGui::Shortcut(arg1,arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_Shortcut__SWIG_1_imgui_568d46c1e1b4102a(intgo _swig_go_0) {
  ImGuiKeyChord arg1 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = (ImGuiKeyChord)_swig_go_0; 
  
  result = (bool)ImGui::Shortcut(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_SetNextItemShortcut__SWIG_0_imgui_568d46c1e1b4102a(intgo _swig_go_0, intgo _swig_go_1) {
  ImGuiKeyChord arg1 ;
  ImGuiInputFlags arg2 ;
  
  arg1 = (ImGuiKeyChord)_swig_go_0; 
  arg2 = (ImGuiInputFlags)_swig_go_1; 
  
  ImGui::SetNextItemShortcut(arg1,arg2);
  
}


void _wrap_SetNextItemShortcut__SWIG_1_imgui_568d46c1e1b4102a(intgo _swig_go_0) {
  ImGuiKeyChord arg1 ;
  
  arg1 = (ImGuiKeyChord)_swig_go_0; 
  
  ImGui::SetNextItemShortcut(arg1);
  
}


void _wrap_SetItemKeyOwner_imgui_568d46c1e1b4102a(intgo _swig_go_0) {
  ImGuiKey arg1 ;
  
  arg1 = (ImGuiKey)_swig_go_0; 
  
  ImGui::SetItemKeyOwner(arg1);
  
}


bool _wrap_IsMouseDown_imgui_568d46c1e1b4102a(intgo _swig_go_0) {
  ImGuiMouseButton arg1 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = (ImGuiMouseButton)_swig_go_0; 
  
  result = (bool)ImGui::IsMouseDown(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_IsMouseClicked__SWIG_0_imgui_568d46c1e1b4102a(intgo _swig_go_0, bool _swig_go_1) {
  ImGuiMouseButton arg1 ;
  bool arg2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = (ImGuiMouseButton)_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  result = (bool)ImGui::IsMouseClicked(arg1,arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_IsMouseClicked__SWIG_1_imgui_568d46c1e1b4102a(intgo _swig_go_0) {
  ImGuiMouseButton arg1 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = (ImGuiMouseButton)_swig_go_0; 
  
  result = (bool)ImGui::IsMouseClicked(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_IsMouseReleased_imgui_568d46c1e1b4102a(intgo _swig_go_0) {
  ImGuiMouseButton arg1 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = (ImGuiMouseButton)_swig_go_0; 
  
  result = (bool)ImGui::IsMouseReleased(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_IsMouseDoubleClicked_imgui_568d46c1e1b4102a(intgo _swig_go_0) {
  ImGuiMouseButton arg1 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = (ImGuiMouseButton)_swig_go_0; 
  
  result = (bool)ImGui::IsMouseDoubleClicked(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_GetMouseClickedCount_imgui_568d46c1e1b4102a(intgo _swig_go_0) {
  ImGuiMouseButton arg1 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = (ImGuiMouseButton)_swig_go_0; 
  
  result = (int)ImGui::GetMouseClickedCount(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_IsMouseHoveringRect__SWIG_0_imgui_568d46c1e1b4102a(ImVec2 *_swig_go_0, ImVec2 *_swig_go_1, bool _swig_go_2) {
  ImVec2 *arg1 = 0 ;
  ImVec2 *arg2 = 0 ;
  bool arg3 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ImVec2 **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  arg3 = (bool)_swig_go_2; 
  
  result = (bool)ImGui::IsMouseHoveringRect((ImVec2 const &)*arg1,(ImVec2 const &)*arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_IsMouseHoveringRect__SWIG_1_imgui_568d46c1e1b4102a(ImVec2 *_swig_go_0, ImVec2 *_swig_go_1) {
  ImVec2 *arg1 = 0 ;
  ImVec2 *arg2 = 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ImVec2 **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  
  result = (bool)ImGui::IsMouseHoveringRect((ImVec2 const &)*arg1,(ImVec2 const &)*arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_IsMousePosValid__SWIG_0_imgui_568d46c1e1b4102a(ImVec2 *_swig_go_0) {
  ImVec2 *arg1 = (ImVec2 *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ImVec2 **)&_swig_go_0; 
  
  result = (bool)ImGui::IsMousePosValid((ImVec2 const *)arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_IsMousePosValid__SWIG_1_imgui_568d46c1e1b4102a() {
  bool result;
  bool _swig_go_result;
  
  
  result = (bool)ImGui::IsMousePosValid();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_IsAnyMouseDown_imgui_568d46c1e1b4102a() {
  bool result;
  bool _swig_go_result;
  
  
  result = (bool)ImGui::IsAnyMouseDown();
  _swig_go_result = result; 
  return _swig_go_result;
}


ImVec2 *_wrap_GetMousePos_imgui_568d46c1e1b4102a() {
  ImVec2 result;
  ImVec2 *_swig_go_result;
  
  
  result = ImGui::GetMousePos();
  *(ImVec2 **)&_swig_go_result = new ImVec2(result); 
  return _swig_go_result;
}


ImVec2 *_wrap_GetMousePosOnOpeningCurrentPopup_imgui_568d46c1e1b4102a() {
  ImVec2 result;
  ImVec2 *_swig_go_result;
  
  
  result = ImGui::GetMousePosOnOpeningCurrentPopup();
  *(ImVec2 **)&_swig_go_result = new ImVec2(result); 
  return _swig_go_result;
}


bool _wrap_IsMouseDragging__SWIG_0_imgui_568d46c1e1b4102a(intgo _swig_go_0, float _swig_go_1) {
  ImGuiMouseButton arg1 ;
  float arg2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = (ImGuiMouseButton)_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  result = (bool)ImGui::IsMouseDragging(arg1,arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_IsMouseDragging__SWIG_1_imgui_568d46c1e1b4102a(intgo _swig_go_0) {
  ImGuiMouseButton arg1 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = (ImGuiMouseButton)_swig_go_0; 
  
  result = (bool)ImGui::IsMouseDragging(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


ImVec2 *_wrap_GetMouseDragDelta__SWIG_0_imgui_568d46c1e1b4102a(intgo _swig_go_0, float _swig_go_1) {
  ImGuiMouseButton arg1 ;
  float arg2 ;
  ImVec2 result;
  ImVec2 *_swig_go_result;
  
  arg1 = (ImGuiMouseButton)_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  result = ImGui::GetMouseDragDelta(arg1,arg2);
  *(ImVec2 **)&_swig_go_result = new ImVec2(result); 
  return _swig_go_result;
}


ImVec2 *_wrap_GetMouseDragDelta__SWIG_1_imgui_568d46c1e1b4102a(intgo _swig_go_0) {
  ImGuiMouseButton arg1 ;
  ImVec2 result;
  ImVec2 *_swig_go_result;
  
  arg1 = (ImGuiMouseButton)_swig_go_0; 
  
  result = ImGui::GetMouseDragDelta(arg1);
  *(ImVec2 **)&_swig_go_result = new ImVec2(result); 
  return _swig_go_result;
}


ImVec2 *_wrap_GetMouseDragDelta__SWIG_2_imgui_568d46c1e1b4102a() {
  ImVec2 result;
  ImVec2 *_swig_go_result;
  
  
  result = ImGui::GetMouseDragDelta();
  *(ImVec2 **)&_swig_go_result = new ImVec2(result); 
  return _swig_go_result;
}


void _wrap_ResetMouseDragDelta__SWIG_0_imgui_568d46c1e1b4102a(intgo _swig_go_0) {
  ImGuiMouseButton arg1 ;
  
  arg1 = (ImGuiMouseButton)_swig_go_0; 
  
  ImGui::ResetMouseDragDelta(arg1);
  
}


void _wrap_ResetMouseDragDelta__SWIG_1_imgui_568d46c1e1b4102a() {
  ImGui::ResetMouseDragDelta();
  
}


intgo _wrap_GetMouseCursor_imgui_568d46c1e1b4102a() {
  ImGuiMouseCursor result;
  intgo _swig_go_result;
  
  
  result = (ImGuiMouseCursor)ImGui::GetMouseCursor();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_SetMouseCursor_imgui_568d46c1e1b4102a(intgo _swig_go_0) {
  ImGuiMouseCursor arg1 ;
  
  arg1 = (ImGuiMouseCursor)_swig_go_0; 
  
  ImGui::SetMouseCursor(arg1);
  
}


void _wrap_SetNextFrameWantCaptureMouse_imgui_568d46c1e1b4102a(bool _swig_go_0) {
  bool arg1 ;
  
  arg1 = (bool)_swig_go_0; 
  
  ImGui::SetNextFrameWantCaptureMouse(arg1);
  
}


_gostring_ _wrap_GetClipboardText_imgui_568d46c1e1b4102a() {
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  
  result = (char *)ImGui::GetClipboardText();
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_SetClipboardText_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0) {
  char *arg1 = (char *) 0 ;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  ImGui::SetClipboardText((char const *)arg1);
  
  free(arg1); 
}


void _wrap_LoadIniSettingsFromDisk_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0) {
  char *arg1 = (char *) 0 ;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  ImGui::LoadIniSettingsFromDisk((char const *)arg1);
  
  free(arg1); 
}


void _wrap_LoadIniSettingsFromMemory__SWIG_0_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, long long _swig_go_1) {
  char *arg1 = (char *) 0 ;
  size_t arg2 ;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = (size_t)_swig_go_1; 
  
  ImGui::LoadIniSettingsFromMemory((char const *)arg1,SWIG_STD_MOVE(arg2));
  
  free(arg1); 
}


void _wrap_LoadIniSettingsFromMemory__SWIG_1_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0) {
  char *arg1 = (char *) 0 ;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  ImGui::LoadIniSettingsFromMemory((char const *)arg1);
  
  free(arg1); 
}


void _wrap_SaveIniSettingsToDisk_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0) {
  char *arg1 = (char *) 0 ;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  ImGui::SaveIniSettingsToDisk((char const *)arg1);
  
  free(arg1); 
}


_gostring_ _wrap_SaveIniSettingsToMemory__SWIG_0_imgui_568d46c1e1b4102a(long long *_swig_go_0) {
  size_t *arg1 = (size_t *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(size_t **)&_swig_go_0; 
  
  result = (char *)ImGui::SaveIniSettingsToMemory(arg1);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


_gostring_ _wrap_SaveIniSettingsToMemory__SWIG_1_imgui_568d46c1e1b4102a() {
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  
  result = (char *)ImGui::SaveIniSettingsToMemory();
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_DebugTextEncoding_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0) {
  char *arg1 = (char *) 0 ;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  ImGui::DebugTextEncoding((char const *)arg1);
  
  free(arg1); 
}


void _wrap_DebugFlashStyleColor_imgui_568d46c1e1b4102a(intgo _swig_go_0) {
  ImGuiCol arg1 ;
  
  arg1 = (ImGuiCol)_swig_go_0; 
  
  ImGui::DebugFlashStyleColor(arg1);
  
}


void _wrap_DebugStartItemPicker_imgui_568d46c1e1b4102a() {
  ImGui::DebugStartItemPicker();
  
}


bool _wrap_DebugCheckVersionAndDataLayout_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, long long _swig_go_1, long long _swig_go_2, long long _swig_go_3, long long _swig_go_4, long long _swig_go_5, long long _swig_go_6) {
  char *arg1 = (char *) 0 ;
  size_t arg2 ;
  size_t arg3 ;
  size_t arg4 ;
  size_t arg5 ;
  size_t arg6 ;
  size_t arg7 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = (size_t)_swig_go_1; 
  arg3 = (size_t)_swig_go_2; 
  arg4 = (size_t)_swig_go_3; 
  arg5 = (size_t)_swig_go_4; 
  arg6 = (size_t)_swig_go_5; 
  arg7 = (size_t)_swig_go_6; 
  
  result = (bool)ImGui::DebugCheckVersionAndDataLayout((char const *)arg1,SWIG_STD_MOVE(arg2),SWIG_STD_MOVE(arg3),SWIG_STD_MOVE(arg4),SWIG_STD_MOVE(arg5),SWIG_STD_MOVE(arg6),SWIG_STD_MOVE(arg7));
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


void _wrap_DebugLog_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0) {
  char *arg1 = (char *) 0 ;
  void *arg2 = 0 ;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  ImGui::DebugLog((char const *)arg1,arg2);
  
  free(arg1); 
}


void _wrap_DebugLogV_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, va_list *_swig_go_1) {
  char *arg1 = (char *) 0 ;
  va_list arg2 ;
  va_list *argp2 ;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  argp2 = (va_list *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null va_list");
  }
  arg2 = (va_list)*argp2;
  
  
  ImGui::DebugLogV((char const *)arg1,SWIG_STD_MOVE(arg2));
  
  free(arg1); 
}


void _wrap_SetAllocatorFunctions__SWIG_0_imgui_568d46c1e1b4102a(void* _swig_go_0, void* _swig_go_1, void *_swig_go_2) {
  ImGuiMemAllocFunc arg1 = (ImGuiMemAllocFunc) 0 ;
  ImGuiMemFreeFunc arg2 = (ImGuiMemFreeFunc) 0 ;
  void *arg3 = (void *) 0 ;
  
  arg1 = *(ImGuiMemAllocFunc *)&_swig_go_0; 
  arg2 = *(ImGuiMemFreeFunc *)&_swig_go_1; 
  arg3 = *(void **)&_swig_go_2; 
  
  ImGui::SetAllocatorFunctions(arg1,arg2,arg3);
  
}


void _wrap_SetAllocatorFunctions__SWIG_1_imgui_568d46c1e1b4102a(void* _swig_go_0, void* _swig_go_1) {
  ImGuiMemAllocFunc arg1 = (ImGuiMemAllocFunc) 0 ;
  ImGuiMemFreeFunc arg2 = (ImGuiMemFreeFunc) 0 ;
  
  arg1 = *(ImGuiMemAllocFunc *)&_swig_go_0; 
  arg2 = *(ImGuiMemFreeFunc *)&_swig_go_1; 
  
  ImGui::SetAllocatorFunctions(arg1,arg2);
  
}


void _wrap_GetAllocatorFunctions_imgui_568d46c1e1b4102a(void** _swig_go_0, void** _swig_go_1, void **_swig_go_2) {
  ImGuiMemAllocFunc *arg1 = (ImGuiMemAllocFunc *) 0 ;
  ImGuiMemFreeFunc *arg2 = (ImGuiMemFreeFunc *) 0 ;
  void **arg3 = (void **) 0 ;
  
  arg1 = *(ImGuiMemAllocFunc **)&_swig_go_0; 
  arg2 = *(ImGuiMemFreeFunc **)&_swig_go_1; 
  arg3 = *(void ***)&_swig_go_2; 
  
  ImGui::GetAllocatorFunctions(arg1,arg2,arg3);
  
}


void *_wrap_MemAlloc_imgui_568d46c1e1b4102a(long long _swig_go_0) {
  size_t arg1 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = (size_t)_swig_go_0; 
  
  result = (void *)ImGui::MemAlloc(SWIG_STD_MOVE(arg1));
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


void _wrap_MemFree_imgui_568d46c1e1b4102a(void *_swig_go_0) {
  void *arg1 = (void *) 0 ;
  
  arg1 = *(void **)&_swig_go_0; 
  
  ImGui::MemFree(arg1);
  
}


intgo _wrap_ImGuiWindowFlags_None_imgui_568d46c1e1b4102a() {
  ImGuiWindowFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiWindowFlags_None;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiWindowFlags_NoTitleBar_imgui_568d46c1e1b4102a() {
  ImGuiWindowFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiWindowFlags_NoTitleBar;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiWindowFlags_NoResize_imgui_568d46c1e1b4102a() {
  ImGuiWindowFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiWindowFlags_NoResize;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiWindowFlags_NoMove_imgui_568d46c1e1b4102a() {
  ImGuiWindowFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiWindowFlags_NoMove;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiWindowFlags_NoScrollbar_imgui_568d46c1e1b4102a() {
  ImGuiWindowFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiWindowFlags_NoScrollbar;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiWindowFlags_NoScrollWithMouse_imgui_568d46c1e1b4102a() {
  ImGuiWindowFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiWindowFlags_NoScrollWithMouse;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiWindowFlags_NoCollapse_imgui_568d46c1e1b4102a() {
  ImGuiWindowFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiWindowFlags_NoCollapse;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiWindowFlags_AlwaysAutoResize_imgui_568d46c1e1b4102a() {
  ImGuiWindowFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiWindowFlags_AlwaysAutoResize;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiWindowFlags_NoBackground_imgui_568d46c1e1b4102a() {
  ImGuiWindowFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiWindowFlags_NoBackground;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiWindowFlags_NoSavedSettings_imgui_568d46c1e1b4102a() {
  ImGuiWindowFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiWindowFlags_NoSavedSettings;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiWindowFlags_NoMouseInputs_imgui_568d46c1e1b4102a() {
  ImGuiWindowFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiWindowFlags_NoMouseInputs;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiWindowFlags_MenuBar_imgui_568d46c1e1b4102a() {
  ImGuiWindowFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiWindowFlags_MenuBar;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiWindowFlags_HorizontalScrollbar_imgui_568d46c1e1b4102a() {
  ImGuiWindowFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiWindowFlags_HorizontalScrollbar;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiWindowFlags_NoFocusOnAppearing_imgui_568d46c1e1b4102a() {
  ImGuiWindowFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiWindowFlags_NoFocusOnAppearing;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiWindowFlags_NoBringToFrontOnFocus_imgui_568d46c1e1b4102a() {
  ImGuiWindowFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiWindowFlags_NoBringToFrontOnFocus;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiWindowFlags_AlwaysVerticalScrollbar_imgui_568d46c1e1b4102a() {
  ImGuiWindowFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiWindowFlags_AlwaysVerticalScrollbar;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiWindowFlags_AlwaysHorizontalScrollbar_imgui_568d46c1e1b4102a() {
  ImGuiWindowFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiWindowFlags_AlwaysHorizontalScrollbar;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiWindowFlags_NoNavInputs_imgui_568d46c1e1b4102a() {
  ImGuiWindowFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiWindowFlags_NoNavInputs;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiWindowFlags_NoNavFocus_imgui_568d46c1e1b4102a() {
  ImGuiWindowFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiWindowFlags_NoNavFocus;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiWindowFlags_UnsavedDocument_imgui_568d46c1e1b4102a() {
  ImGuiWindowFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiWindowFlags_UnsavedDocument;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiWindowFlags_NoNav_imgui_568d46c1e1b4102a() {
  ImGuiWindowFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiWindowFlags_NoNav;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiWindowFlags_NoDecoration_imgui_568d46c1e1b4102a() {
  ImGuiWindowFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiWindowFlags_NoDecoration;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiWindowFlags_NoInputs_imgui_568d46c1e1b4102a() {
  ImGuiWindowFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiWindowFlags_NoInputs;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiWindowFlags_ChildWindow_imgui_568d46c1e1b4102a() {
  ImGuiWindowFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiWindowFlags_ChildWindow;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiWindowFlags_Tooltip_imgui_568d46c1e1b4102a() {
  ImGuiWindowFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiWindowFlags_Tooltip;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiWindowFlags_Popup_imgui_568d46c1e1b4102a() {
  ImGuiWindowFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiWindowFlags_Popup;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiWindowFlags_Modal_imgui_568d46c1e1b4102a() {
  ImGuiWindowFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiWindowFlags_Modal;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiWindowFlags_ChildMenu_imgui_568d46c1e1b4102a() {
  ImGuiWindowFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiWindowFlags_ChildMenu;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiWindowFlags_AlwaysUseWindowPadding_imgui_568d46c1e1b4102a() {
  ImGuiWindowFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiWindowFlags_AlwaysUseWindowPadding;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiWindowFlags_NavFlattened_imgui_568d46c1e1b4102a() {
  ImGuiWindowFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiWindowFlags_NavFlattened;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiChildFlags_None_imgui_568d46c1e1b4102a() {
  ImGuiChildFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiChildFlags_None;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiChildFlags_Borders_imgui_568d46c1e1b4102a() {
  ImGuiChildFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiChildFlags_Borders;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiChildFlags_AlwaysUseWindowPadding_imgui_568d46c1e1b4102a() {
  ImGuiChildFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiChildFlags_AlwaysUseWindowPadding;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiChildFlags_ResizeX_imgui_568d46c1e1b4102a() {
  ImGuiChildFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiChildFlags_ResizeX;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiChildFlags_ResizeY_imgui_568d46c1e1b4102a() {
  ImGuiChildFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiChildFlags_ResizeY;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiChildFlags_AutoResizeX_imgui_568d46c1e1b4102a() {
  ImGuiChildFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiChildFlags_AutoResizeX;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiChildFlags_AutoResizeY_imgui_568d46c1e1b4102a() {
  ImGuiChildFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiChildFlags_AutoResizeY;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiChildFlags_AlwaysAutoResize_imgui_568d46c1e1b4102a() {
  ImGuiChildFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiChildFlags_AlwaysAutoResize;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiChildFlags_FrameStyle_imgui_568d46c1e1b4102a() {
  ImGuiChildFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiChildFlags_FrameStyle;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiChildFlags_NavFlattened_imgui_568d46c1e1b4102a() {
  ImGuiChildFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiChildFlags_NavFlattened;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiChildFlags_Border_imgui_568d46c1e1b4102a() {
  ImGuiChildFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiChildFlags_Border;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiItemFlags_None_imgui_568d46c1e1b4102a() {
  ImGuiItemFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiItemFlags_None;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiItemFlags_NoTabStop_imgui_568d46c1e1b4102a() {
  ImGuiItemFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiItemFlags_NoTabStop;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiItemFlags_NoNav_imgui_568d46c1e1b4102a() {
  ImGuiItemFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiItemFlags_NoNav;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiItemFlags_NoNavDefaultFocus_imgui_568d46c1e1b4102a() {
  ImGuiItemFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiItemFlags_NoNavDefaultFocus;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiItemFlags_ButtonRepeat_imgui_568d46c1e1b4102a() {
  ImGuiItemFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiItemFlags_ButtonRepeat;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiItemFlags_AutoClosePopups_imgui_568d46c1e1b4102a() {
  ImGuiItemFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiItemFlags_AutoClosePopups;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiItemFlags_AllowDuplicateId_imgui_568d46c1e1b4102a() {
  ImGuiItemFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiItemFlags_AllowDuplicateId;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiInputTextFlags_None_imgui_568d46c1e1b4102a() {
  ImGuiInputTextFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiInputTextFlags_None;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiInputTextFlags_CharsDecimal_imgui_568d46c1e1b4102a() {
  ImGuiInputTextFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiInputTextFlags_CharsDecimal;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiInputTextFlags_CharsHexadecimal_imgui_568d46c1e1b4102a() {
  ImGuiInputTextFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiInputTextFlags_CharsHexadecimal;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiInputTextFlags_CharsScientific_imgui_568d46c1e1b4102a() {
  ImGuiInputTextFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiInputTextFlags_CharsScientific;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiInputTextFlags_CharsUppercase_imgui_568d46c1e1b4102a() {
  ImGuiInputTextFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiInputTextFlags_CharsUppercase;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiInputTextFlags_CharsNoBlank_imgui_568d46c1e1b4102a() {
  ImGuiInputTextFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiInputTextFlags_CharsNoBlank;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiInputTextFlags_AllowTabInput_imgui_568d46c1e1b4102a() {
  ImGuiInputTextFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiInputTextFlags_AllowTabInput;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiInputTextFlags_EnterReturnsTrue_imgui_568d46c1e1b4102a() {
  ImGuiInputTextFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiInputTextFlags_EnterReturnsTrue;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiInputTextFlags_EscapeClearsAll_imgui_568d46c1e1b4102a() {
  ImGuiInputTextFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiInputTextFlags_EscapeClearsAll;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiInputTextFlags_CtrlEnterForNewLine_imgui_568d46c1e1b4102a() {
  ImGuiInputTextFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiInputTextFlags_CtrlEnterForNewLine;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiInputTextFlags_ReadOnly_imgui_568d46c1e1b4102a() {
  ImGuiInputTextFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiInputTextFlags_ReadOnly;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiInputTextFlags_Password_imgui_568d46c1e1b4102a() {
  ImGuiInputTextFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiInputTextFlags_Password;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiInputTextFlags_AlwaysOverwrite_imgui_568d46c1e1b4102a() {
  ImGuiInputTextFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiInputTextFlags_AlwaysOverwrite;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiInputTextFlags_AutoSelectAll_imgui_568d46c1e1b4102a() {
  ImGuiInputTextFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiInputTextFlags_AutoSelectAll;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiInputTextFlags_ParseEmptyRefVal_imgui_568d46c1e1b4102a() {
  ImGuiInputTextFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiInputTextFlags_ParseEmptyRefVal;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiInputTextFlags_DisplayEmptyRefVal_imgui_568d46c1e1b4102a() {
  ImGuiInputTextFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiInputTextFlags_DisplayEmptyRefVal;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiInputTextFlags_NoHorizontalScroll_imgui_568d46c1e1b4102a() {
  ImGuiInputTextFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiInputTextFlags_NoHorizontalScroll;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiInputTextFlags_NoUndoRedo_imgui_568d46c1e1b4102a() {
  ImGuiInputTextFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiInputTextFlags_NoUndoRedo;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiInputTextFlags_CallbackCompletion_imgui_568d46c1e1b4102a() {
  ImGuiInputTextFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiInputTextFlags_CallbackCompletion;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiInputTextFlags_CallbackHistory_imgui_568d46c1e1b4102a() {
  ImGuiInputTextFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiInputTextFlags_CallbackHistory;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiInputTextFlags_CallbackAlways_imgui_568d46c1e1b4102a() {
  ImGuiInputTextFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiInputTextFlags_CallbackAlways;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiInputTextFlags_CallbackCharFilter_imgui_568d46c1e1b4102a() {
  ImGuiInputTextFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiInputTextFlags_CallbackCharFilter;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiInputTextFlags_CallbackResize_imgui_568d46c1e1b4102a() {
  ImGuiInputTextFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiInputTextFlags_CallbackResize;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiInputTextFlags_CallbackEdit_imgui_568d46c1e1b4102a() {
  ImGuiInputTextFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiInputTextFlags_CallbackEdit;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTreeNodeFlags_None_imgui_568d46c1e1b4102a() {
  ImGuiTreeNodeFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTreeNodeFlags_None;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTreeNodeFlags_Selected_imgui_568d46c1e1b4102a() {
  ImGuiTreeNodeFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTreeNodeFlags_Selected;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTreeNodeFlags_Framed_imgui_568d46c1e1b4102a() {
  ImGuiTreeNodeFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTreeNodeFlags_Framed;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTreeNodeFlags_AllowOverlap_imgui_568d46c1e1b4102a() {
  ImGuiTreeNodeFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTreeNodeFlags_AllowOverlap;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTreeNodeFlags_NoTreePushOnOpen_imgui_568d46c1e1b4102a() {
  ImGuiTreeNodeFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTreeNodeFlags_NoTreePushOnOpen;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTreeNodeFlags_NoAutoOpenOnLog_imgui_568d46c1e1b4102a() {
  ImGuiTreeNodeFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTreeNodeFlags_NoAutoOpenOnLog;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTreeNodeFlags_DefaultOpen_imgui_568d46c1e1b4102a() {
  ImGuiTreeNodeFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTreeNodeFlags_DefaultOpen;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTreeNodeFlags_OpenOnDoubleClick_imgui_568d46c1e1b4102a() {
  ImGuiTreeNodeFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTreeNodeFlags_OpenOnDoubleClick;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTreeNodeFlags_OpenOnArrow_imgui_568d46c1e1b4102a() {
  ImGuiTreeNodeFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTreeNodeFlags_OpenOnArrow;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTreeNodeFlags_Leaf_imgui_568d46c1e1b4102a() {
  ImGuiTreeNodeFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTreeNodeFlags_Leaf;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTreeNodeFlags_Bullet_imgui_568d46c1e1b4102a() {
  ImGuiTreeNodeFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTreeNodeFlags_Bullet;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTreeNodeFlags_FramePadding_imgui_568d46c1e1b4102a() {
  ImGuiTreeNodeFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTreeNodeFlags_FramePadding;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTreeNodeFlags_SpanAvailWidth_imgui_568d46c1e1b4102a() {
  ImGuiTreeNodeFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTreeNodeFlags_SpanAvailWidth;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTreeNodeFlags_SpanFullWidth_imgui_568d46c1e1b4102a() {
  ImGuiTreeNodeFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTreeNodeFlags_SpanFullWidth;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTreeNodeFlags_SpanTextWidth_imgui_568d46c1e1b4102a() {
  ImGuiTreeNodeFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTreeNodeFlags_SpanTextWidth;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTreeNodeFlags_SpanAllColumns_imgui_568d46c1e1b4102a() {
  ImGuiTreeNodeFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTreeNodeFlags_SpanAllColumns;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTreeNodeFlags_NavLeftJumpsBackHere_imgui_568d46c1e1b4102a() {
  ImGuiTreeNodeFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTreeNodeFlags_NavLeftJumpsBackHere;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTreeNodeFlags_CollapsingHeader_imgui_568d46c1e1b4102a() {
  ImGuiTreeNodeFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTreeNodeFlags_CollapsingHeader;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTreeNodeFlags_AllowItemOverlap_imgui_568d46c1e1b4102a() {
  ImGuiTreeNodeFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTreeNodeFlags_AllowItemOverlap;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiPopupFlags_None_imgui_568d46c1e1b4102a() {
  ImGuiPopupFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiPopupFlags_None;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiPopupFlags_MouseButtonLeft_imgui_568d46c1e1b4102a() {
  ImGuiPopupFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiPopupFlags_MouseButtonLeft;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiPopupFlags_MouseButtonRight_imgui_568d46c1e1b4102a() {
  ImGuiPopupFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiPopupFlags_MouseButtonRight;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiPopupFlags_MouseButtonMiddle_imgui_568d46c1e1b4102a() {
  ImGuiPopupFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiPopupFlags_MouseButtonMiddle;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiPopupFlags_MouseButtonMask__imgui_568d46c1e1b4102a() {
  ImGuiPopupFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiPopupFlags_MouseButtonMask_;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiPopupFlags_MouseButtonDefault__imgui_568d46c1e1b4102a() {
  ImGuiPopupFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiPopupFlags_MouseButtonDefault_;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiPopupFlags_NoReopen_imgui_568d46c1e1b4102a() {
  ImGuiPopupFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiPopupFlags_NoReopen;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiPopupFlags_NoOpenOverExistingPopup_imgui_568d46c1e1b4102a() {
  ImGuiPopupFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiPopupFlags_NoOpenOverExistingPopup;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiPopupFlags_NoOpenOverItems_imgui_568d46c1e1b4102a() {
  ImGuiPopupFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiPopupFlags_NoOpenOverItems;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiPopupFlags_AnyPopupId_imgui_568d46c1e1b4102a() {
  ImGuiPopupFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiPopupFlags_AnyPopupId;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiPopupFlags_AnyPopupLevel_imgui_568d46c1e1b4102a() {
  ImGuiPopupFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiPopupFlags_AnyPopupLevel;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiPopupFlags_AnyPopup_imgui_568d46c1e1b4102a() {
  ImGuiPopupFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiPopupFlags_AnyPopup;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiSelectableFlags_None_imgui_568d46c1e1b4102a() {
  ImGuiSelectableFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiSelectableFlags_None;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiSelectableFlags_NoAutoClosePopups_imgui_568d46c1e1b4102a() {
  ImGuiSelectableFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiSelectableFlags_NoAutoClosePopups;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiSelectableFlags_SpanAllColumns_imgui_568d46c1e1b4102a() {
  ImGuiSelectableFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiSelectableFlags_SpanAllColumns;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiSelectableFlags_AllowDoubleClick_imgui_568d46c1e1b4102a() {
  ImGuiSelectableFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiSelectableFlags_AllowDoubleClick;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiSelectableFlags_Disabled_imgui_568d46c1e1b4102a() {
  ImGuiSelectableFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiSelectableFlags_Disabled;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiSelectableFlags_AllowOverlap_imgui_568d46c1e1b4102a() {
  ImGuiSelectableFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiSelectableFlags_AllowOverlap;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiSelectableFlags_Highlight_imgui_568d46c1e1b4102a() {
  ImGuiSelectableFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiSelectableFlags_Highlight;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiSelectableFlags_DontClosePopups_imgui_568d46c1e1b4102a() {
  ImGuiSelectableFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiSelectableFlags_DontClosePopups;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiSelectableFlags_AllowItemOverlap_imgui_568d46c1e1b4102a() {
  ImGuiSelectableFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiSelectableFlags_AllowItemOverlap;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiComboFlags_None_imgui_568d46c1e1b4102a() {
  ImGuiComboFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiComboFlags_None;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiComboFlags_PopupAlignLeft_imgui_568d46c1e1b4102a() {
  ImGuiComboFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiComboFlags_PopupAlignLeft;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiComboFlags_HeightSmall_imgui_568d46c1e1b4102a() {
  ImGuiComboFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiComboFlags_HeightSmall;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiComboFlags_HeightRegular_imgui_568d46c1e1b4102a() {
  ImGuiComboFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiComboFlags_HeightRegular;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiComboFlags_HeightLarge_imgui_568d46c1e1b4102a() {
  ImGuiComboFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiComboFlags_HeightLarge;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiComboFlags_HeightLargest_imgui_568d46c1e1b4102a() {
  ImGuiComboFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiComboFlags_HeightLargest;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiComboFlags_NoArrowButton_imgui_568d46c1e1b4102a() {
  ImGuiComboFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiComboFlags_NoArrowButton;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiComboFlags_NoPreview_imgui_568d46c1e1b4102a() {
  ImGuiComboFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiComboFlags_NoPreview;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiComboFlags_WidthFitPreview_imgui_568d46c1e1b4102a() {
  ImGuiComboFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiComboFlags_WidthFitPreview;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiComboFlags_HeightMask__imgui_568d46c1e1b4102a() {
  ImGuiComboFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiComboFlags_HeightMask_;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTabBarFlags_None_imgui_568d46c1e1b4102a() {
  ImGuiTabBarFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTabBarFlags_None;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTabBarFlags_Reorderable_imgui_568d46c1e1b4102a() {
  ImGuiTabBarFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTabBarFlags_Reorderable;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTabBarFlags_AutoSelectNewTabs_imgui_568d46c1e1b4102a() {
  ImGuiTabBarFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTabBarFlags_AutoSelectNewTabs;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTabBarFlags_TabListPopupButton_imgui_568d46c1e1b4102a() {
  ImGuiTabBarFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTabBarFlags_TabListPopupButton;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTabBarFlags_NoCloseWithMiddleMouseButton_imgui_568d46c1e1b4102a() {
  ImGuiTabBarFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTabBarFlags_NoCloseWithMiddleMouseButton;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTabBarFlags_NoTabListScrollingButtons_imgui_568d46c1e1b4102a() {
  ImGuiTabBarFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTabBarFlags_NoTabListScrollingButtons;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTabBarFlags_NoTooltip_imgui_568d46c1e1b4102a() {
  ImGuiTabBarFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTabBarFlags_NoTooltip;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTabBarFlags_DrawSelectedOverline_imgui_568d46c1e1b4102a() {
  ImGuiTabBarFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTabBarFlags_DrawSelectedOverline;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTabBarFlags_FittingPolicyResizeDown_imgui_568d46c1e1b4102a() {
  ImGuiTabBarFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTabBarFlags_FittingPolicyResizeDown;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTabBarFlags_FittingPolicyScroll_imgui_568d46c1e1b4102a() {
  ImGuiTabBarFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTabBarFlags_FittingPolicyScroll;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTabBarFlags_FittingPolicyMask__imgui_568d46c1e1b4102a() {
  ImGuiTabBarFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTabBarFlags_FittingPolicyMask_;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTabBarFlags_FittingPolicyDefault__imgui_568d46c1e1b4102a() {
  ImGuiTabBarFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTabBarFlags_FittingPolicyDefault_;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTabItemFlags_None_imgui_568d46c1e1b4102a() {
  ImGuiTabItemFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTabItemFlags_None;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTabItemFlags_UnsavedDocument_imgui_568d46c1e1b4102a() {
  ImGuiTabItemFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTabItemFlags_UnsavedDocument;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTabItemFlags_SetSelected_imgui_568d46c1e1b4102a() {
  ImGuiTabItemFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTabItemFlags_SetSelected;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTabItemFlags_NoCloseWithMiddleMouseButton_imgui_568d46c1e1b4102a() {
  ImGuiTabItemFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTabItemFlags_NoCloseWithMiddleMouseButton;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTabItemFlags_NoPushId_imgui_568d46c1e1b4102a() {
  ImGuiTabItemFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTabItemFlags_NoPushId;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTabItemFlags_NoTooltip_imgui_568d46c1e1b4102a() {
  ImGuiTabItemFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTabItemFlags_NoTooltip;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTabItemFlags_NoReorder_imgui_568d46c1e1b4102a() {
  ImGuiTabItemFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTabItemFlags_NoReorder;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTabItemFlags_Leading_imgui_568d46c1e1b4102a() {
  ImGuiTabItemFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTabItemFlags_Leading;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTabItemFlags_Trailing_imgui_568d46c1e1b4102a() {
  ImGuiTabItemFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTabItemFlags_Trailing;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTabItemFlags_NoAssumedClosure_imgui_568d46c1e1b4102a() {
  ImGuiTabItemFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTabItemFlags_NoAssumedClosure;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiFocusedFlags_None_imgui_568d46c1e1b4102a() {
  ImGuiFocusedFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiFocusedFlags_None;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiFocusedFlags_ChildWindows_imgui_568d46c1e1b4102a() {
  ImGuiFocusedFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiFocusedFlags_ChildWindows;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiFocusedFlags_RootWindow_imgui_568d46c1e1b4102a() {
  ImGuiFocusedFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiFocusedFlags_RootWindow;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiFocusedFlags_AnyWindow_imgui_568d46c1e1b4102a() {
  ImGuiFocusedFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiFocusedFlags_AnyWindow;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiFocusedFlags_NoPopupHierarchy_imgui_568d46c1e1b4102a() {
  ImGuiFocusedFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiFocusedFlags_NoPopupHierarchy;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiFocusedFlags_RootAndChildWindows_imgui_568d46c1e1b4102a() {
  ImGuiFocusedFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiFocusedFlags_RootAndChildWindows;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiHoveredFlags_None_imgui_568d46c1e1b4102a() {
  ImGuiHoveredFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiHoveredFlags_None;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiHoveredFlags_ChildWindows_imgui_568d46c1e1b4102a() {
  ImGuiHoveredFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiHoveredFlags_ChildWindows;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiHoveredFlags_RootWindow_imgui_568d46c1e1b4102a() {
  ImGuiHoveredFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiHoveredFlags_RootWindow;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiHoveredFlags_AnyWindow_imgui_568d46c1e1b4102a() {
  ImGuiHoveredFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiHoveredFlags_AnyWindow;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiHoveredFlags_NoPopupHierarchy_imgui_568d46c1e1b4102a() {
  ImGuiHoveredFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiHoveredFlags_NoPopupHierarchy;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiHoveredFlags_AllowWhenBlockedByPopup_imgui_568d46c1e1b4102a() {
  ImGuiHoveredFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiHoveredFlags_AllowWhenBlockedByPopup;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiHoveredFlags_AllowWhenBlockedByActiveItem_imgui_568d46c1e1b4102a() {
  ImGuiHoveredFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiHoveredFlags_AllowWhenBlockedByActiveItem;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiHoveredFlags_AllowWhenOverlappedByItem_imgui_568d46c1e1b4102a() {
  ImGuiHoveredFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiHoveredFlags_AllowWhenOverlappedByItem;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiHoveredFlags_AllowWhenOverlappedByWindow_imgui_568d46c1e1b4102a() {
  ImGuiHoveredFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiHoveredFlags_AllowWhenOverlappedByWindow;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiHoveredFlags_AllowWhenDisabled_imgui_568d46c1e1b4102a() {
  ImGuiHoveredFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiHoveredFlags_AllowWhenDisabled;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiHoveredFlags_NoNavOverride_imgui_568d46c1e1b4102a() {
  ImGuiHoveredFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiHoveredFlags_NoNavOverride;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiHoveredFlags_AllowWhenOverlapped_imgui_568d46c1e1b4102a() {
  ImGuiHoveredFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiHoveredFlags_AllowWhenOverlapped;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiHoveredFlags_RectOnly_imgui_568d46c1e1b4102a() {
  ImGuiHoveredFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiHoveredFlags_RectOnly;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiHoveredFlags_RootAndChildWindows_imgui_568d46c1e1b4102a() {
  ImGuiHoveredFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiHoveredFlags_RootAndChildWindows;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiHoveredFlags_ForTooltip_imgui_568d46c1e1b4102a() {
  ImGuiHoveredFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiHoveredFlags_ForTooltip;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiHoveredFlags_Stationary_imgui_568d46c1e1b4102a() {
  ImGuiHoveredFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiHoveredFlags_Stationary;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiHoveredFlags_DelayNone_imgui_568d46c1e1b4102a() {
  ImGuiHoveredFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiHoveredFlags_DelayNone;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiHoveredFlags_DelayShort_imgui_568d46c1e1b4102a() {
  ImGuiHoveredFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiHoveredFlags_DelayShort;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiHoveredFlags_DelayNormal_imgui_568d46c1e1b4102a() {
  ImGuiHoveredFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiHoveredFlags_DelayNormal;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiHoveredFlags_NoSharedDelay_imgui_568d46c1e1b4102a() {
  ImGuiHoveredFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiHoveredFlags_NoSharedDelay;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiDragDropFlags_None_imgui_568d46c1e1b4102a() {
  ImGuiDragDropFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiDragDropFlags_None;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiDragDropFlags_SourceNoPreviewTooltip_imgui_568d46c1e1b4102a() {
  ImGuiDragDropFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiDragDropFlags_SourceNoPreviewTooltip;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiDragDropFlags_SourceNoDisableHover_imgui_568d46c1e1b4102a() {
  ImGuiDragDropFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiDragDropFlags_SourceNoDisableHover;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiDragDropFlags_SourceNoHoldToOpenOthers_imgui_568d46c1e1b4102a() {
  ImGuiDragDropFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiDragDropFlags_SourceNoHoldToOpenOthers;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiDragDropFlags_SourceAllowNullID_imgui_568d46c1e1b4102a() {
  ImGuiDragDropFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiDragDropFlags_SourceAllowNullID;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiDragDropFlags_SourceExtern_imgui_568d46c1e1b4102a() {
  ImGuiDragDropFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiDragDropFlags_SourceExtern;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiDragDropFlags_PayloadAutoExpire_imgui_568d46c1e1b4102a() {
  ImGuiDragDropFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiDragDropFlags_PayloadAutoExpire;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiDragDropFlags_PayloadNoCrossContext_imgui_568d46c1e1b4102a() {
  ImGuiDragDropFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiDragDropFlags_PayloadNoCrossContext;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiDragDropFlags_PayloadNoCrossProcess_imgui_568d46c1e1b4102a() {
  ImGuiDragDropFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiDragDropFlags_PayloadNoCrossProcess;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiDragDropFlags_AcceptBeforeDelivery_imgui_568d46c1e1b4102a() {
  ImGuiDragDropFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiDragDropFlags_AcceptBeforeDelivery;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiDragDropFlags_AcceptNoDrawDefaultRect_imgui_568d46c1e1b4102a() {
  ImGuiDragDropFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiDragDropFlags_AcceptNoDrawDefaultRect;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiDragDropFlags_AcceptNoPreviewTooltip_imgui_568d46c1e1b4102a() {
  ImGuiDragDropFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiDragDropFlags_AcceptNoPreviewTooltip;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiDragDropFlags_AcceptPeekOnly_imgui_568d46c1e1b4102a() {
  ImGuiDragDropFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiDragDropFlags_AcceptPeekOnly;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiDragDropFlags_SourceAutoExpirePayload_imgui_568d46c1e1b4102a() {
  ImGuiDragDropFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiDragDropFlags_SourceAutoExpirePayload;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiDataType_S8_imgui_568d46c1e1b4102a() {
  ImGuiDataType_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiDataType_S8;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiDataType_U8_imgui_568d46c1e1b4102a() {
  ImGuiDataType_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiDataType_U8;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiDataType_S16_imgui_568d46c1e1b4102a() {
  ImGuiDataType_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiDataType_S16;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiDataType_U16_imgui_568d46c1e1b4102a() {
  ImGuiDataType_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiDataType_U16;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiDataType_S32_imgui_568d46c1e1b4102a() {
  ImGuiDataType_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiDataType_S32;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiDataType_U32_imgui_568d46c1e1b4102a() {
  ImGuiDataType_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiDataType_U32;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiDataType_S64_imgui_568d46c1e1b4102a() {
  ImGuiDataType_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiDataType_S64;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiDataType_U64_imgui_568d46c1e1b4102a() {
  ImGuiDataType_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiDataType_U64;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiDataType_Float_imgui_568d46c1e1b4102a() {
  ImGuiDataType_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiDataType_Float;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiDataType_Double_imgui_568d46c1e1b4102a() {
  ImGuiDataType_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiDataType_Double;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiDataType_Bool_imgui_568d46c1e1b4102a() {
  ImGuiDataType_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiDataType_Bool;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiDataType_COUNT_imgui_568d46c1e1b4102a() {
  ImGuiDataType_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiDataType_COUNT;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiDir_None_imgui_568d46c1e1b4102a() {
  ImGuiDir result;
  intgo _swig_go_result;
  
  
  result = ImGuiDir_None;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiDir_Left_imgui_568d46c1e1b4102a() {
  ImGuiDir result;
  intgo _swig_go_result;
  
  
  result = ImGuiDir_Left;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiDir_Right_imgui_568d46c1e1b4102a() {
  ImGuiDir result;
  intgo _swig_go_result;
  
  
  result = ImGuiDir_Right;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiDir_Up_imgui_568d46c1e1b4102a() {
  ImGuiDir result;
  intgo _swig_go_result;
  
  
  result = ImGuiDir_Up;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiDir_Down_imgui_568d46c1e1b4102a() {
  ImGuiDir result;
  intgo _swig_go_result;
  
  
  result = ImGuiDir_Down;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiDir_COUNT_imgui_568d46c1e1b4102a() {
  ImGuiDir result;
  intgo _swig_go_result;
  
  
  result = ImGuiDir_COUNT;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiSortDirection_None_imgui_568d46c1e1b4102a() {
  ImGuiSortDirection result;
  intgo _swig_go_result;
  
  
  result = ImGuiSortDirection_None;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiSortDirection_Ascending_imgui_568d46c1e1b4102a() {
  ImGuiSortDirection result;
  intgo _swig_go_result;
  
  
  result = ImGuiSortDirection_Ascending;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiSortDirection_Descending_imgui_568d46c1e1b4102a() {
  ImGuiSortDirection result;
  intgo _swig_go_result;
  
  
  result = ImGuiSortDirection_Descending;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_None_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_None;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_Tab_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_Tab;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_LeftArrow_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_LeftArrow;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_RightArrow_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_RightArrow;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_UpArrow_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_UpArrow;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_DownArrow_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_DownArrow;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_PageUp_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_PageUp;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_PageDown_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_PageDown;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_Home_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_Home;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_End_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_End;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_Insert_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_Insert;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_Delete_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_Delete;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_Backspace_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_Backspace;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_Space_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_Space;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_Enter_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_Enter;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_Escape_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_Escape;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_LeftCtrl_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_LeftCtrl;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_LeftShift_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_LeftShift;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_LeftAlt_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_LeftAlt;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_LeftSuper_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_LeftSuper;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_RightCtrl_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_RightCtrl;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_RightShift_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_RightShift;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_RightAlt_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_RightAlt;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_RightSuper_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_RightSuper;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_Menu_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_Menu;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_0_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_0;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_1_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_1;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_2_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_2;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_3_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_3;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_4_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_4;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_5_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_5;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_6_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_6;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_7_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_7;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_8_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_8;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_9_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_9;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_A_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_A;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_B_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_B;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_C_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_C;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_D_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_D;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_E_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_E;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_F_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_F;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_G_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_G;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_H_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_H;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_I_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_I;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_J_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_J;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_K_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_K;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_L_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_L;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_M_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_M;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_N_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_N;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_O_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_O;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_P_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_P;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_Q_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_Q;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_R_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_R;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_S_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_S;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_T_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_T;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_U_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_U;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_V_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_V;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_W_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_W;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_X_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_X;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_Y_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_Y;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_Z_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_Z;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_F1_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_F1;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_F2_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_F2;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_F3_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_F3;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_F4_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_F4;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_F5_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_F5;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_F6_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_F6;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_F7_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_F7;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_F8_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_F8;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_F9_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_F9;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_F10_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_F10;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_F11_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_F11;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_F12_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_F12;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_F13_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_F13;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_F14_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_F14;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_F15_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_F15;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_F16_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_F16;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_F17_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_F17;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_F18_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_F18;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_F19_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_F19;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_F20_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_F20;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_F21_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_F21;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_F22_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_F22;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_F23_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_F23;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_F24_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_F24;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_Apostrophe_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_Apostrophe;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_Comma_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_Comma;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_Minus_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_Minus;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_Period_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_Period;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_Slash_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_Slash;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_Semicolon_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_Semicolon;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_Equal_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_Equal;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_LeftBracket_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_LeftBracket;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_Backslash_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_Backslash;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_RightBracket_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_RightBracket;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_GraveAccent_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_GraveAccent;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_CapsLock_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_CapsLock;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_ScrollLock_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_ScrollLock;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_NumLock_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_NumLock;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_PrintScreen_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_PrintScreen;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_Pause_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_Pause;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_Keypad0_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_Keypad0;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_Keypad1_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_Keypad1;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_Keypad2_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_Keypad2;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_Keypad3_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_Keypad3;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_Keypad4_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_Keypad4;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_Keypad5_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_Keypad5;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_Keypad6_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_Keypad6;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_Keypad7_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_Keypad7;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_Keypad8_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_Keypad8;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_Keypad9_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_Keypad9;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_KeypadDecimal_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_KeypadDecimal;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_KeypadDivide_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_KeypadDivide;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_KeypadMultiply_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_KeypadMultiply;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_KeypadSubtract_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_KeypadSubtract;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_KeypadAdd_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_KeypadAdd;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_KeypadEnter_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_KeypadEnter;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_KeypadEqual_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_KeypadEqual;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_AppBack_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_AppBack;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_AppForward_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_AppForward;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_GamepadStart_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_GamepadStart;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_GamepadBack_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_GamepadBack;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_GamepadFaceLeft_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_GamepadFaceLeft;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_GamepadFaceRight_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_GamepadFaceRight;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_GamepadFaceUp_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_GamepadFaceUp;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_GamepadFaceDown_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_GamepadFaceDown;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_GamepadDpadLeft_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_GamepadDpadLeft;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_GamepadDpadRight_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_GamepadDpadRight;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_GamepadDpadUp_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_GamepadDpadUp;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_GamepadDpadDown_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_GamepadDpadDown;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_GamepadL1_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_GamepadL1;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_GamepadR1_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_GamepadR1;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_GamepadL2_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_GamepadL2;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_GamepadR2_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_GamepadR2;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_GamepadL3_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_GamepadL3;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_GamepadR3_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_GamepadR3;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_GamepadLStickLeft_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_GamepadLStickLeft;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_GamepadLStickRight_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_GamepadLStickRight;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_GamepadLStickUp_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_GamepadLStickUp;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_GamepadLStickDown_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_GamepadLStickDown;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_GamepadRStickLeft_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_GamepadRStickLeft;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_GamepadRStickRight_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_GamepadRStickRight;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_GamepadRStickUp_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_GamepadRStickUp;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_GamepadRStickDown_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_GamepadRStickDown;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_MouseLeft_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_MouseLeft;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_MouseRight_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_MouseRight;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_MouseMiddle_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_MouseMiddle;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_MouseX1_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_MouseX1;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_MouseX2_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_MouseX2;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_MouseWheelX_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_MouseWheelX;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_MouseWheelY_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_MouseWheelY;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_ReservedForModCtrl_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_ReservedForModCtrl;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_ReservedForModShift_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_ReservedForModShift;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_ReservedForModAlt_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_ReservedForModAlt;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_ReservedForModSuper_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_ReservedForModSuper;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_COUNT_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_COUNT;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiMod_None_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiMod_None;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiMod_Ctrl_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiMod_Ctrl;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiMod_Shift_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiMod_Shift;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiMod_Alt_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiMod_Alt;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiMod_Super_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiMod_Super;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiMod_Mask__imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiMod_Mask_;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_NamedKey_BEGIN_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_NamedKey_BEGIN;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_NamedKey_END_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_NamedKey_END;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_NamedKey_COUNT_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_NamedKey_COUNT;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_KeysData_SIZE_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_KeysData_SIZE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_KeysData_OFFSET_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_KeysData_OFFSET;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiMod_Shortcut_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiMod_Shortcut;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_ModCtrl_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_ModCtrl;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_ModShift_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_ModShift;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_ModAlt_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_ModAlt;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiKey_ModSuper_imgui_568d46c1e1b4102a() {
  ImGuiKey result;
  intgo _swig_go_result;
  
  
  result = ImGuiKey_ModSuper;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiInputFlags_None_imgui_568d46c1e1b4102a() {
  ImGuiInputFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiInputFlags_None;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiInputFlags_Repeat_imgui_568d46c1e1b4102a() {
  ImGuiInputFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiInputFlags_Repeat;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiInputFlags_RouteActive_imgui_568d46c1e1b4102a() {
  ImGuiInputFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiInputFlags_RouteActive;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiInputFlags_RouteFocused_imgui_568d46c1e1b4102a() {
  ImGuiInputFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiInputFlags_RouteFocused;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiInputFlags_RouteGlobal_imgui_568d46c1e1b4102a() {
  ImGuiInputFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiInputFlags_RouteGlobal;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiInputFlags_RouteAlways_imgui_568d46c1e1b4102a() {
  ImGuiInputFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiInputFlags_RouteAlways;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiInputFlags_RouteOverFocused_imgui_568d46c1e1b4102a() {
  ImGuiInputFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiInputFlags_RouteOverFocused;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiInputFlags_RouteOverActive_imgui_568d46c1e1b4102a() {
  ImGuiInputFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiInputFlags_RouteOverActive;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiInputFlags_RouteUnlessBgFocused_imgui_568d46c1e1b4102a() {
  ImGuiInputFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiInputFlags_RouteUnlessBgFocused;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiInputFlags_RouteFromRootWindow_imgui_568d46c1e1b4102a() {
  ImGuiInputFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiInputFlags_RouteFromRootWindow;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiInputFlags_Tooltip_imgui_568d46c1e1b4102a() {
  ImGuiInputFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiInputFlags_Tooltip;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiNavInput_Activate_imgui_568d46c1e1b4102a() {
  ImGuiNavInput result;
  intgo _swig_go_result;
  
  
  result = ImGuiNavInput_Activate;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiNavInput_Cancel_imgui_568d46c1e1b4102a() {
  ImGuiNavInput result;
  intgo _swig_go_result;
  
  
  result = ImGuiNavInput_Cancel;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiNavInput_Input_imgui_568d46c1e1b4102a() {
  ImGuiNavInput result;
  intgo _swig_go_result;
  
  
  result = ImGuiNavInput_Input;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiNavInput_Menu_imgui_568d46c1e1b4102a() {
  ImGuiNavInput result;
  intgo _swig_go_result;
  
  
  result = ImGuiNavInput_Menu;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiNavInput_DpadLeft_imgui_568d46c1e1b4102a() {
  ImGuiNavInput result;
  intgo _swig_go_result;
  
  
  result = ImGuiNavInput_DpadLeft;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiNavInput_DpadRight_imgui_568d46c1e1b4102a() {
  ImGuiNavInput result;
  intgo _swig_go_result;
  
  
  result = ImGuiNavInput_DpadRight;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiNavInput_DpadUp_imgui_568d46c1e1b4102a() {
  ImGuiNavInput result;
  intgo _swig_go_result;
  
  
  result = ImGuiNavInput_DpadUp;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiNavInput_DpadDown_imgui_568d46c1e1b4102a() {
  ImGuiNavInput result;
  intgo _swig_go_result;
  
  
  result = ImGuiNavInput_DpadDown;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiNavInput_LStickLeft_imgui_568d46c1e1b4102a() {
  ImGuiNavInput result;
  intgo _swig_go_result;
  
  
  result = ImGuiNavInput_LStickLeft;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiNavInput_LStickRight_imgui_568d46c1e1b4102a() {
  ImGuiNavInput result;
  intgo _swig_go_result;
  
  
  result = ImGuiNavInput_LStickRight;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiNavInput_LStickUp_imgui_568d46c1e1b4102a() {
  ImGuiNavInput result;
  intgo _swig_go_result;
  
  
  result = ImGuiNavInput_LStickUp;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiNavInput_LStickDown_imgui_568d46c1e1b4102a() {
  ImGuiNavInput result;
  intgo _swig_go_result;
  
  
  result = ImGuiNavInput_LStickDown;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiNavInput_FocusPrev_imgui_568d46c1e1b4102a() {
  ImGuiNavInput result;
  intgo _swig_go_result;
  
  
  result = ImGuiNavInput_FocusPrev;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiNavInput_FocusNext_imgui_568d46c1e1b4102a() {
  ImGuiNavInput result;
  intgo _swig_go_result;
  
  
  result = ImGuiNavInput_FocusNext;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiNavInput_TweakSlow_imgui_568d46c1e1b4102a() {
  ImGuiNavInput result;
  intgo _swig_go_result;
  
  
  result = ImGuiNavInput_TweakSlow;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiNavInput_TweakFast_imgui_568d46c1e1b4102a() {
  ImGuiNavInput result;
  intgo _swig_go_result;
  
  
  result = ImGuiNavInput_TweakFast;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiNavInput_COUNT_imgui_568d46c1e1b4102a() {
  ImGuiNavInput result;
  intgo _swig_go_result;
  
  
  result = ImGuiNavInput_COUNT;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiConfigFlags_None_imgui_568d46c1e1b4102a() {
  ImGuiConfigFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiConfigFlags_None;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiConfigFlags_NavEnableKeyboard_imgui_568d46c1e1b4102a() {
  ImGuiConfigFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiConfigFlags_NavEnableKeyboard;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiConfigFlags_NavEnableGamepad_imgui_568d46c1e1b4102a() {
  ImGuiConfigFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiConfigFlags_NavEnableGamepad;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiConfigFlags_NavEnableSetMousePos_imgui_568d46c1e1b4102a() {
  ImGuiConfigFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiConfigFlags_NavEnableSetMousePos;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiConfigFlags_NavNoCaptureKeyboard_imgui_568d46c1e1b4102a() {
  ImGuiConfigFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiConfigFlags_NavNoCaptureKeyboard;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiConfigFlags_NoMouse_imgui_568d46c1e1b4102a() {
  ImGuiConfigFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiConfigFlags_NoMouse;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiConfigFlags_NoMouseCursorChange_imgui_568d46c1e1b4102a() {
  ImGuiConfigFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiConfigFlags_NoMouseCursorChange;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiConfigFlags_NoKeyboard_imgui_568d46c1e1b4102a() {
  ImGuiConfigFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiConfigFlags_NoKeyboard;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiConfigFlags_IsSRGB_imgui_568d46c1e1b4102a() {
  ImGuiConfigFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiConfigFlags_IsSRGB;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiConfigFlags_IsTouchScreen_imgui_568d46c1e1b4102a() {
  ImGuiConfigFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiConfigFlags_IsTouchScreen;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiBackendFlags_None_imgui_568d46c1e1b4102a() {
  ImGuiBackendFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiBackendFlags_None;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiBackendFlags_HasGamepad_imgui_568d46c1e1b4102a() {
  ImGuiBackendFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiBackendFlags_HasGamepad;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiBackendFlags_HasMouseCursors_imgui_568d46c1e1b4102a() {
  ImGuiBackendFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiBackendFlags_HasMouseCursors;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiBackendFlags_HasSetMousePos_imgui_568d46c1e1b4102a() {
  ImGuiBackendFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiBackendFlags_HasSetMousePos;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiBackendFlags_RendererHasVtxOffset_imgui_568d46c1e1b4102a() {
  ImGuiBackendFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiBackendFlags_RendererHasVtxOffset;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiCol_Text_imgui_568d46c1e1b4102a() {
  ImGuiCol_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiCol_Text;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiCol_TextDisabled_imgui_568d46c1e1b4102a() {
  ImGuiCol_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiCol_TextDisabled;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiCol_WindowBg_imgui_568d46c1e1b4102a() {
  ImGuiCol_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiCol_WindowBg;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiCol_ChildBg_imgui_568d46c1e1b4102a() {
  ImGuiCol_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiCol_ChildBg;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiCol_PopupBg_imgui_568d46c1e1b4102a() {
  ImGuiCol_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiCol_PopupBg;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiCol_Border_imgui_568d46c1e1b4102a() {
  ImGuiCol_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiCol_Border;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiCol_BorderShadow_imgui_568d46c1e1b4102a() {
  ImGuiCol_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiCol_BorderShadow;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiCol_FrameBg_imgui_568d46c1e1b4102a() {
  ImGuiCol_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiCol_FrameBg;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiCol_FrameBgHovered_imgui_568d46c1e1b4102a() {
  ImGuiCol_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiCol_FrameBgHovered;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiCol_FrameBgActive_imgui_568d46c1e1b4102a() {
  ImGuiCol_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiCol_FrameBgActive;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiCol_TitleBg_imgui_568d46c1e1b4102a() {
  ImGuiCol_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiCol_TitleBg;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiCol_TitleBgActive_imgui_568d46c1e1b4102a() {
  ImGuiCol_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiCol_TitleBgActive;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiCol_TitleBgCollapsed_imgui_568d46c1e1b4102a() {
  ImGuiCol_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiCol_TitleBgCollapsed;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiCol_MenuBarBg_imgui_568d46c1e1b4102a() {
  ImGuiCol_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiCol_MenuBarBg;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiCol_ScrollbarBg_imgui_568d46c1e1b4102a() {
  ImGuiCol_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiCol_ScrollbarBg;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiCol_ScrollbarGrab_imgui_568d46c1e1b4102a() {
  ImGuiCol_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiCol_ScrollbarGrab;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiCol_ScrollbarGrabHovered_imgui_568d46c1e1b4102a() {
  ImGuiCol_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiCol_ScrollbarGrabHovered;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiCol_ScrollbarGrabActive_imgui_568d46c1e1b4102a() {
  ImGuiCol_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiCol_ScrollbarGrabActive;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiCol_CheckMark_imgui_568d46c1e1b4102a() {
  ImGuiCol_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiCol_CheckMark;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiCol_SliderGrab_imgui_568d46c1e1b4102a() {
  ImGuiCol_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiCol_SliderGrab;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiCol_SliderGrabActive_imgui_568d46c1e1b4102a() {
  ImGuiCol_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiCol_SliderGrabActive;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiCol_Button_imgui_568d46c1e1b4102a() {
  ImGuiCol_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiCol_Button;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiCol_ButtonHovered_imgui_568d46c1e1b4102a() {
  ImGuiCol_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiCol_ButtonHovered;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiCol_ButtonActive_imgui_568d46c1e1b4102a() {
  ImGuiCol_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiCol_ButtonActive;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiCol_Header_imgui_568d46c1e1b4102a() {
  ImGuiCol_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiCol_Header;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiCol_HeaderHovered_imgui_568d46c1e1b4102a() {
  ImGuiCol_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiCol_HeaderHovered;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiCol_HeaderActive_imgui_568d46c1e1b4102a() {
  ImGuiCol_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiCol_HeaderActive;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiCol_Separator_imgui_568d46c1e1b4102a() {
  ImGuiCol_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiCol_Separator;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiCol_SeparatorHovered_imgui_568d46c1e1b4102a() {
  ImGuiCol_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiCol_SeparatorHovered;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiCol_SeparatorActive_imgui_568d46c1e1b4102a() {
  ImGuiCol_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiCol_SeparatorActive;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiCol_ResizeGrip_imgui_568d46c1e1b4102a() {
  ImGuiCol_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiCol_ResizeGrip;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiCol_ResizeGripHovered_imgui_568d46c1e1b4102a() {
  ImGuiCol_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiCol_ResizeGripHovered;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiCol_ResizeGripActive_imgui_568d46c1e1b4102a() {
  ImGuiCol_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiCol_ResizeGripActive;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiCol_TabHovered_imgui_568d46c1e1b4102a() {
  ImGuiCol_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiCol_TabHovered;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiCol_Tab_imgui_568d46c1e1b4102a() {
  ImGuiCol_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiCol_Tab;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiCol_TabSelected_imgui_568d46c1e1b4102a() {
  ImGuiCol_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiCol_TabSelected;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiCol_TabSelectedOverline_imgui_568d46c1e1b4102a() {
  ImGuiCol_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiCol_TabSelectedOverline;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiCol_TabDimmed_imgui_568d46c1e1b4102a() {
  ImGuiCol_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiCol_TabDimmed;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiCol_TabDimmedSelected_imgui_568d46c1e1b4102a() {
  ImGuiCol_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiCol_TabDimmedSelected;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiCol_TabDimmedSelectedOverline_imgui_568d46c1e1b4102a() {
  ImGuiCol_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiCol_TabDimmedSelectedOverline;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiCol_PlotLines_imgui_568d46c1e1b4102a() {
  ImGuiCol_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiCol_PlotLines;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiCol_PlotLinesHovered_imgui_568d46c1e1b4102a() {
  ImGuiCol_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiCol_PlotLinesHovered;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiCol_PlotHistogram_imgui_568d46c1e1b4102a() {
  ImGuiCol_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiCol_PlotHistogram;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiCol_PlotHistogramHovered_imgui_568d46c1e1b4102a() {
  ImGuiCol_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiCol_PlotHistogramHovered;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiCol_TableHeaderBg_imgui_568d46c1e1b4102a() {
  ImGuiCol_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiCol_TableHeaderBg;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiCol_TableBorderStrong_imgui_568d46c1e1b4102a() {
  ImGuiCol_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiCol_TableBorderStrong;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiCol_TableBorderLight_imgui_568d46c1e1b4102a() {
  ImGuiCol_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiCol_TableBorderLight;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiCol_TableRowBg_imgui_568d46c1e1b4102a() {
  ImGuiCol_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiCol_TableRowBg;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiCol_TableRowBgAlt_imgui_568d46c1e1b4102a() {
  ImGuiCol_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiCol_TableRowBgAlt;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiCol_TextLink_imgui_568d46c1e1b4102a() {
  ImGuiCol_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiCol_TextLink;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiCol_TextSelectedBg_imgui_568d46c1e1b4102a() {
  ImGuiCol_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiCol_TextSelectedBg;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiCol_DragDropTarget_imgui_568d46c1e1b4102a() {
  ImGuiCol_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiCol_DragDropTarget;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiCol_NavHighlight_imgui_568d46c1e1b4102a() {
  ImGuiCol_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiCol_NavHighlight;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiCol_NavWindowingHighlight_imgui_568d46c1e1b4102a() {
  ImGuiCol_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiCol_NavWindowingHighlight;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiCol_NavWindowingDimBg_imgui_568d46c1e1b4102a() {
  ImGuiCol_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiCol_NavWindowingDimBg;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiCol_ModalWindowDimBg_imgui_568d46c1e1b4102a() {
  ImGuiCol_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiCol_ModalWindowDimBg;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiCol_COUNT_imgui_568d46c1e1b4102a() {
  ImGuiCol_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiCol_COUNT;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiCol_TabActive_imgui_568d46c1e1b4102a() {
  ImGuiCol_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiCol_TabActive;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiCol_TabUnfocused_imgui_568d46c1e1b4102a() {
  ImGuiCol_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiCol_TabUnfocused;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiCol_TabUnfocusedActive_imgui_568d46c1e1b4102a() {
  ImGuiCol_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiCol_TabUnfocusedActive;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiStyleVar_Alpha_imgui_568d46c1e1b4102a() {
  ImGuiStyleVar_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiStyleVar_Alpha;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiStyleVar_DisabledAlpha_imgui_568d46c1e1b4102a() {
  ImGuiStyleVar_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiStyleVar_DisabledAlpha;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiStyleVar_WindowPadding_imgui_568d46c1e1b4102a() {
  ImGuiStyleVar_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiStyleVar_WindowPadding;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiStyleVar_WindowRounding_imgui_568d46c1e1b4102a() {
  ImGuiStyleVar_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiStyleVar_WindowRounding;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiStyleVar_WindowBorderSize_imgui_568d46c1e1b4102a() {
  ImGuiStyleVar_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiStyleVar_WindowBorderSize;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiStyleVar_WindowMinSize_imgui_568d46c1e1b4102a() {
  ImGuiStyleVar_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiStyleVar_WindowMinSize;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiStyleVar_WindowTitleAlign_imgui_568d46c1e1b4102a() {
  ImGuiStyleVar_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiStyleVar_WindowTitleAlign;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiStyleVar_ChildRounding_imgui_568d46c1e1b4102a() {
  ImGuiStyleVar_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiStyleVar_ChildRounding;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiStyleVar_ChildBorderSize_imgui_568d46c1e1b4102a() {
  ImGuiStyleVar_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiStyleVar_ChildBorderSize;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiStyleVar_PopupRounding_imgui_568d46c1e1b4102a() {
  ImGuiStyleVar_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiStyleVar_PopupRounding;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiStyleVar_PopupBorderSize_imgui_568d46c1e1b4102a() {
  ImGuiStyleVar_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiStyleVar_PopupBorderSize;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiStyleVar_FramePadding_imgui_568d46c1e1b4102a() {
  ImGuiStyleVar_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiStyleVar_FramePadding;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiStyleVar_FrameRounding_imgui_568d46c1e1b4102a() {
  ImGuiStyleVar_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiStyleVar_FrameRounding;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiStyleVar_FrameBorderSize_imgui_568d46c1e1b4102a() {
  ImGuiStyleVar_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiStyleVar_FrameBorderSize;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiStyleVar_ItemSpacing_imgui_568d46c1e1b4102a() {
  ImGuiStyleVar_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiStyleVar_ItemSpacing;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiStyleVar_ItemInnerSpacing_imgui_568d46c1e1b4102a() {
  ImGuiStyleVar_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiStyleVar_ItemInnerSpacing;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiStyleVar_IndentSpacing_imgui_568d46c1e1b4102a() {
  ImGuiStyleVar_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiStyleVar_IndentSpacing;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiStyleVar_CellPadding_imgui_568d46c1e1b4102a() {
  ImGuiStyleVar_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiStyleVar_CellPadding;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiStyleVar_ScrollbarSize_imgui_568d46c1e1b4102a() {
  ImGuiStyleVar_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiStyleVar_ScrollbarSize;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiStyleVar_ScrollbarRounding_imgui_568d46c1e1b4102a() {
  ImGuiStyleVar_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiStyleVar_ScrollbarRounding;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiStyleVar_GrabMinSize_imgui_568d46c1e1b4102a() {
  ImGuiStyleVar_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiStyleVar_GrabMinSize;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiStyleVar_GrabRounding_imgui_568d46c1e1b4102a() {
  ImGuiStyleVar_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiStyleVar_GrabRounding;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiStyleVar_TabRounding_imgui_568d46c1e1b4102a() {
  ImGuiStyleVar_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiStyleVar_TabRounding;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiStyleVar_TabBorderSize_imgui_568d46c1e1b4102a() {
  ImGuiStyleVar_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiStyleVar_TabBorderSize;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiStyleVar_TabBarBorderSize_imgui_568d46c1e1b4102a() {
  ImGuiStyleVar_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiStyleVar_TabBarBorderSize;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiStyleVar_TabBarOverlineSize_imgui_568d46c1e1b4102a() {
  ImGuiStyleVar_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiStyleVar_TabBarOverlineSize;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiStyleVar_TableAngledHeadersAngle_imgui_568d46c1e1b4102a() {
  ImGuiStyleVar_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiStyleVar_TableAngledHeadersAngle;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiStyleVar_TableAngledHeadersTextAlign_imgui_568d46c1e1b4102a() {
  ImGuiStyleVar_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiStyleVar_TableAngledHeadersTextAlign;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiStyleVar_ButtonTextAlign_imgui_568d46c1e1b4102a() {
  ImGuiStyleVar_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiStyleVar_ButtonTextAlign;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiStyleVar_SelectableTextAlign_imgui_568d46c1e1b4102a() {
  ImGuiStyleVar_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiStyleVar_SelectableTextAlign;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiStyleVar_SeparatorTextBorderSize_imgui_568d46c1e1b4102a() {
  ImGuiStyleVar_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiStyleVar_SeparatorTextBorderSize;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiStyleVar_SeparatorTextAlign_imgui_568d46c1e1b4102a() {
  ImGuiStyleVar_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiStyleVar_SeparatorTextAlign;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiStyleVar_SeparatorTextPadding_imgui_568d46c1e1b4102a() {
  ImGuiStyleVar_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiStyleVar_SeparatorTextPadding;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiStyleVar_COUNT_imgui_568d46c1e1b4102a() {
  ImGuiStyleVar_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiStyleVar_COUNT;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiButtonFlags_None_imgui_568d46c1e1b4102a() {
  ImGuiButtonFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiButtonFlags_None;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiButtonFlags_MouseButtonLeft_imgui_568d46c1e1b4102a() {
  ImGuiButtonFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiButtonFlags_MouseButtonLeft;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiButtonFlags_MouseButtonRight_imgui_568d46c1e1b4102a() {
  ImGuiButtonFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiButtonFlags_MouseButtonRight;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiButtonFlags_MouseButtonMiddle_imgui_568d46c1e1b4102a() {
  ImGuiButtonFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiButtonFlags_MouseButtonMiddle;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiButtonFlags_MouseButtonMask__imgui_568d46c1e1b4102a() {
  ImGuiButtonFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiButtonFlags_MouseButtonMask_;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiColorEditFlags_None_imgui_568d46c1e1b4102a() {
  ImGuiColorEditFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiColorEditFlags_None;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiColorEditFlags_NoAlpha_imgui_568d46c1e1b4102a() {
  ImGuiColorEditFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiColorEditFlags_NoAlpha;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiColorEditFlags_NoPicker_imgui_568d46c1e1b4102a() {
  ImGuiColorEditFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiColorEditFlags_NoPicker;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiColorEditFlags_NoOptions_imgui_568d46c1e1b4102a() {
  ImGuiColorEditFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiColorEditFlags_NoOptions;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiColorEditFlags_NoSmallPreview_imgui_568d46c1e1b4102a() {
  ImGuiColorEditFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiColorEditFlags_NoSmallPreview;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiColorEditFlags_NoInputs_imgui_568d46c1e1b4102a() {
  ImGuiColorEditFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiColorEditFlags_NoInputs;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiColorEditFlags_NoTooltip_imgui_568d46c1e1b4102a() {
  ImGuiColorEditFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiColorEditFlags_NoTooltip;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiColorEditFlags_NoLabel_imgui_568d46c1e1b4102a() {
  ImGuiColorEditFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiColorEditFlags_NoLabel;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiColorEditFlags_NoSidePreview_imgui_568d46c1e1b4102a() {
  ImGuiColorEditFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiColorEditFlags_NoSidePreview;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiColorEditFlags_NoDragDrop_imgui_568d46c1e1b4102a() {
  ImGuiColorEditFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiColorEditFlags_NoDragDrop;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiColorEditFlags_NoBorder_imgui_568d46c1e1b4102a() {
  ImGuiColorEditFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiColorEditFlags_NoBorder;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiColorEditFlags_AlphaBar_imgui_568d46c1e1b4102a() {
  ImGuiColorEditFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiColorEditFlags_AlphaBar;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiColorEditFlags_AlphaPreview_imgui_568d46c1e1b4102a() {
  ImGuiColorEditFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiColorEditFlags_AlphaPreview;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiColorEditFlags_AlphaPreviewHalf_imgui_568d46c1e1b4102a() {
  ImGuiColorEditFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiColorEditFlags_AlphaPreviewHalf;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiColorEditFlags_HDR_imgui_568d46c1e1b4102a() {
  ImGuiColorEditFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiColorEditFlags_HDR;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiColorEditFlags_DisplayRGB_imgui_568d46c1e1b4102a() {
  ImGuiColorEditFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiColorEditFlags_DisplayRGB;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiColorEditFlags_DisplayHSV_imgui_568d46c1e1b4102a() {
  ImGuiColorEditFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiColorEditFlags_DisplayHSV;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiColorEditFlags_DisplayHex_imgui_568d46c1e1b4102a() {
  ImGuiColorEditFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiColorEditFlags_DisplayHex;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiColorEditFlags_Uint8_imgui_568d46c1e1b4102a() {
  ImGuiColorEditFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiColorEditFlags_Uint8;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiColorEditFlags_Float_imgui_568d46c1e1b4102a() {
  ImGuiColorEditFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiColorEditFlags_Float;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiColorEditFlags_PickerHueBar_imgui_568d46c1e1b4102a() {
  ImGuiColorEditFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiColorEditFlags_PickerHueBar;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiColorEditFlags_PickerHueWheel_imgui_568d46c1e1b4102a() {
  ImGuiColorEditFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiColorEditFlags_PickerHueWheel;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiColorEditFlags_InputRGB_imgui_568d46c1e1b4102a() {
  ImGuiColorEditFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiColorEditFlags_InputRGB;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiColorEditFlags_InputHSV_imgui_568d46c1e1b4102a() {
  ImGuiColorEditFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiColorEditFlags_InputHSV;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiColorEditFlags_DefaultOptions__imgui_568d46c1e1b4102a() {
  ImGuiColorEditFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiColorEditFlags_DefaultOptions_;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiColorEditFlags_DisplayMask__imgui_568d46c1e1b4102a() {
  ImGuiColorEditFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiColorEditFlags_DisplayMask_;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiColorEditFlags_DataTypeMask__imgui_568d46c1e1b4102a() {
  ImGuiColorEditFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiColorEditFlags_DataTypeMask_;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiColorEditFlags_PickerMask__imgui_568d46c1e1b4102a() {
  ImGuiColorEditFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiColorEditFlags_PickerMask_;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiColorEditFlags_InputMask__imgui_568d46c1e1b4102a() {
  ImGuiColorEditFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiColorEditFlags_InputMask_;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiSliderFlags_None_imgui_568d46c1e1b4102a() {
  ImGuiSliderFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiSliderFlags_None;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiSliderFlags_AlwaysClamp_imgui_568d46c1e1b4102a() {
  ImGuiSliderFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiSliderFlags_AlwaysClamp;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiSliderFlags_Logarithmic_imgui_568d46c1e1b4102a() {
  ImGuiSliderFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiSliderFlags_Logarithmic;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiSliderFlags_NoRoundToFormat_imgui_568d46c1e1b4102a() {
  ImGuiSliderFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiSliderFlags_NoRoundToFormat;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiSliderFlags_NoInput_imgui_568d46c1e1b4102a() {
  ImGuiSliderFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiSliderFlags_NoInput;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiSliderFlags_WrapAround_imgui_568d46c1e1b4102a() {
  ImGuiSliderFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiSliderFlags_WrapAround;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiSliderFlags_InvalidMask__imgui_568d46c1e1b4102a() {
  ImGuiSliderFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiSliderFlags_InvalidMask_;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiMouseButton_Left_imgui_568d46c1e1b4102a() {
  ImGuiMouseButton_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiMouseButton_Left;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiMouseButton_Right_imgui_568d46c1e1b4102a() {
  ImGuiMouseButton_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiMouseButton_Right;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiMouseButton_Middle_imgui_568d46c1e1b4102a() {
  ImGuiMouseButton_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiMouseButton_Middle;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiMouseButton_COUNT_imgui_568d46c1e1b4102a() {
  ImGuiMouseButton_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiMouseButton_COUNT;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiMouseCursor_None_imgui_568d46c1e1b4102a() {
  ImGuiMouseCursor_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiMouseCursor_None;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiMouseCursor_Arrow_imgui_568d46c1e1b4102a() {
  ImGuiMouseCursor_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiMouseCursor_Arrow;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiMouseCursor_TextInput_imgui_568d46c1e1b4102a() {
  ImGuiMouseCursor_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiMouseCursor_TextInput;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiMouseCursor_ResizeAll_imgui_568d46c1e1b4102a() {
  ImGuiMouseCursor_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiMouseCursor_ResizeAll;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiMouseCursor_ResizeNS_imgui_568d46c1e1b4102a() {
  ImGuiMouseCursor_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiMouseCursor_ResizeNS;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiMouseCursor_ResizeEW_imgui_568d46c1e1b4102a() {
  ImGuiMouseCursor_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiMouseCursor_ResizeEW;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiMouseCursor_ResizeNESW_imgui_568d46c1e1b4102a() {
  ImGuiMouseCursor_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiMouseCursor_ResizeNESW;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiMouseCursor_ResizeNWSE_imgui_568d46c1e1b4102a() {
  ImGuiMouseCursor_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiMouseCursor_ResizeNWSE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiMouseCursor_Hand_imgui_568d46c1e1b4102a() {
  ImGuiMouseCursor_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiMouseCursor_Hand;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiMouseCursor_NotAllowed_imgui_568d46c1e1b4102a() {
  ImGuiMouseCursor_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiMouseCursor_NotAllowed;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiMouseCursor_COUNT_imgui_568d46c1e1b4102a() {
  ImGuiMouseCursor_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiMouseCursor_COUNT;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiMouseSource_Mouse_imgui_568d46c1e1b4102a() {
  ImGuiMouseSource result;
  intgo _swig_go_result;
  
  
  result = ImGuiMouseSource_Mouse;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiMouseSource_TouchScreen_imgui_568d46c1e1b4102a() {
  ImGuiMouseSource result;
  intgo _swig_go_result;
  
  
  result = ImGuiMouseSource_TouchScreen;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiMouseSource_Pen_imgui_568d46c1e1b4102a() {
  ImGuiMouseSource result;
  intgo _swig_go_result;
  
  
  result = ImGuiMouseSource_Pen;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiMouseSource_COUNT_imgui_568d46c1e1b4102a() {
  ImGuiMouseSource result;
  intgo _swig_go_result;
  
  
  result = ImGuiMouseSource_COUNT;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiCond_None_imgui_568d46c1e1b4102a() {
  ImGuiCond_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiCond_None;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiCond_Always_imgui_568d46c1e1b4102a() {
  ImGuiCond_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiCond_Always;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiCond_Once_imgui_568d46c1e1b4102a() {
  ImGuiCond_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiCond_Once;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiCond_FirstUseEver_imgui_568d46c1e1b4102a() {
  ImGuiCond_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiCond_FirstUseEver;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiCond_Appearing_imgui_568d46c1e1b4102a() {
  ImGuiCond_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiCond_Appearing;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTableFlags_None_imgui_568d46c1e1b4102a() {
  ImGuiTableFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTableFlags_None;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTableFlags_Resizable_imgui_568d46c1e1b4102a() {
  ImGuiTableFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTableFlags_Resizable;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTableFlags_Reorderable_imgui_568d46c1e1b4102a() {
  ImGuiTableFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTableFlags_Reorderable;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTableFlags_Hideable_imgui_568d46c1e1b4102a() {
  ImGuiTableFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTableFlags_Hideable;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTableFlags_Sortable_imgui_568d46c1e1b4102a() {
  ImGuiTableFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTableFlags_Sortable;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTableFlags_NoSavedSettings_imgui_568d46c1e1b4102a() {
  ImGuiTableFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTableFlags_NoSavedSettings;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTableFlags_ContextMenuInBody_imgui_568d46c1e1b4102a() {
  ImGuiTableFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTableFlags_ContextMenuInBody;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTableFlags_RowBg_imgui_568d46c1e1b4102a() {
  ImGuiTableFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTableFlags_RowBg;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTableFlags_BordersInnerH_imgui_568d46c1e1b4102a() {
  ImGuiTableFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTableFlags_BordersInnerH;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTableFlags_BordersOuterH_imgui_568d46c1e1b4102a() {
  ImGuiTableFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTableFlags_BordersOuterH;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTableFlags_BordersInnerV_imgui_568d46c1e1b4102a() {
  ImGuiTableFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTableFlags_BordersInnerV;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTableFlags_BordersOuterV_imgui_568d46c1e1b4102a() {
  ImGuiTableFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTableFlags_BordersOuterV;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTableFlags_BordersH_imgui_568d46c1e1b4102a() {
  ImGuiTableFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTableFlags_BordersH;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTableFlags_BordersV_imgui_568d46c1e1b4102a() {
  ImGuiTableFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTableFlags_BordersV;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTableFlags_BordersInner_imgui_568d46c1e1b4102a() {
  ImGuiTableFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTableFlags_BordersInner;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTableFlags_BordersOuter_imgui_568d46c1e1b4102a() {
  ImGuiTableFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTableFlags_BordersOuter;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTableFlags_Borders_imgui_568d46c1e1b4102a() {
  ImGuiTableFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTableFlags_Borders;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTableFlags_NoBordersInBody_imgui_568d46c1e1b4102a() {
  ImGuiTableFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTableFlags_NoBordersInBody;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTableFlags_NoBordersInBodyUntilResize_imgui_568d46c1e1b4102a() {
  ImGuiTableFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTableFlags_NoBordersInBodyUntilResize;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTableFlags_SizingFixedFit_imgui_568d46c1e1b4102a() {
  ImGuiTableFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTableFlags_SizingFixedFit;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTableFlags_SizingFixedSame_imgui_568d46c1e1b4102a() {
  ImGuiTableFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTableFlags_SizingFixedSame;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTableFlags_SizingStretchProp_imgui_568d46c1e1b4102a() {
  ImGuiTableFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTableFlags_SizingStretchProp;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTableFlags_SizingStretchSame_imgui_568d46c1e1b4102a() {
  ImGuiTableFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTableFlags_SizingStretchSame;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTableFlags_NoHostExtendX_imgui_568d46c1e1b4102a() {
  ImGuiTableFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTableFlags_NoHostExtendX;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTableFlags_NoHostExtendY_imgui_568d46c1e1b4102a() {
  ImGuiTableFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTableFlags_NoHostExtendY;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTableFlags_NoKeepColumnsVisible_imgui_568d46c1e1b4102a() {
  ImGuiTableFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTableFlags_NoKeepColumnsVisible;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTableFlags_PreciseWidths_imgui_568d46c1e1b4102a() {
  ImGuiTableFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTableFlags_PreciseWidths;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTableFlags_NoClip_imgui_568d46c1e1b4102a() {
  ImGuiTableFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTableFlags_NoClip;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTableFlags_PadOuterX_imgui_568d46c1e1b4102a() {
  ImGuiTableFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTableFlags_PadOuterX;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTableFlags_NoPadOuterX_imgui_568d46c1e1b4102a() {
  ImGuiTableFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTableFlags_NoPadOuterX;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTableFlags_NoPadInnerX_imgui_568d46c1e1b4102a() {
  ImGuiTableFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTableFlags_NoPadInnerX;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTableFlags_ScrollX_imgui_568d46c1e1b4102a() {
  ImGuiTableFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTableFlags_ScrollX;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTableFlags_ScrollY_imgui_568d46c1e1b4102a() {
  ImGuiTableFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTableFlags_ScrollY;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTableFlags_SortMulti_imgui_568d46c1e1b4102a() {
  ImGuiTableFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTableFlags_SortMulti;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTableFlags_SortTristate_imgui_568d46c1e1b4102a() {
  ImGuiTableFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTableFlags_SortTristate;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTableFlags_HighlightHoveredColumn_imgui_568d46c1e1b4102a() {
  ImGuiTableFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTableFlags_HighlightHoveredColumn;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTableFlags_SizingMask__imgui_568d46c1e1b4102a() {
  ImGuiTableFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTableFlags_SizingMask_;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTableColumnFlags_None_imgui_568d46c1e1b4102a() {
  ImGuiTableColumnFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTableColumnFlags_None;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTableColumnFlags_Disabled_imgui_568d46c1e1b4102a() {
  ImGuiTableColumnFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTableColumnFlags_Disabled;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTableColumnFlags_DefaultHide_imgui_568d46c1e1b4102a() {
  ImGuiTableColumnFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTableColumnFlags_DefaultHide;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTableColumnFlags_DefaultSort_imgui_568d46c1e1b4102a() {
  ImGuiTableColumnFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTableColumnFlags_DefaultSort;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTableColumnFlags_WidthStretch_imgui_568d46c1e1b4102a() {
  ImGuiTableColumnFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTableColumnFlags_WidthStretch;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTableColumnFlags_WidthFixed_imgui_568d46c1e1b4102a() {
  ImGuiTableColumnFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTableColumnFlags_WidthFixed;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTableColumnFlags_NoResize_imgui_568d46c1e1b4102a() {
  ImGuiTableColumnFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTableColumnFlags_NoResize;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTableColumnFlags_NoReorder_imgui_568d46c1e1b4102a() {
  ImGuiTableColumnFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTableColumnFlags_NoReorder;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTableColumnFlags_NoHide_imgui_568d46c1e1b4102a() {
  ImGuiTableColumnFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTableColumnFlags_NoHide;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTableColumnFlags_NoClip_imgui_568d46c1e1b4102a() {
  ImGuiTableColumnFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTableColumnFlags_NoClip;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTableColumnFlags_NoSort_imgui_568d46c1e1b4102a() {
  ImGuiTableColumnFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTableColumnFlags_NoSort;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTableColumnFlags_NoSortAscending_imgui_568d46c1e1b4102a() {
  ImGuiTableColumnFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTableColumnFlags_NoSortAscending;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTableColumnFlags_NoSortDescending_imgui_568d46c1e1b4102a() {
  ImGuiTableColumnFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTableColumnFlags_NoSortDescending;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTableColumnFlags_NoHeaderLabel_imgui_568d46c1e1b4102a() {
  ImGuiTableColumnFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTableColumnFlags_NoHeaderLabel;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTableColumnFlags_NoHeaderWidth_imgui_568d46c1e1b4102a() {
  ImGuiTableColumnFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTableColumnFlags_NoHeaderWidth;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTableColumnFlags_PreferSortAscending_imgui_568d46c1e1b4102a() {
  ImGuiTableColumnFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTableColumnFlags_PreferSortAscending;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTableColumnFlags_PreferSortDescending_imgui_568d46c1e1b4102a() {
  ImGuiTableColumnFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTableColumnFlags_PreferSortDescending;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTableColumnFlags_IndentEnable_imgui_568d46c1e1b4102a() {
  ImGuiTableColumnFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTableColumnFlags_IndentEnable;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTableColumnFlags_IndentDisable_imgui_568d46c1e1b4102a() {
  ImGuiTableColumnFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTableColumnFlags_IndentDisable;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTableColumnFlags_AngledHeader_imgui_568d46c1e1b4102a() {
  ImGuiTableColumnFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTableColumnFlags_AngledHeader;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTableColumnFlags_IsEnabled_imgui_568d46c1e1b4102a() {
  ImGuiTableColumnFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTableColumnFlags_IsEnabled;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTableColumnFlags_IsVisible_imgui_568d46c1e1b4102a() {
  ImGuiTableColumnFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTableColumnFlags_IsVisible;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTableColumnFlags_IsSorted_imgui_568d46c1e1b4102a() {
  ImGuiTableColumnFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTableColumnFlags_IsSorted;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTableColumnFlags_IsHovered_imgui_568d46c1e1b4102a() {
  ImGuiTableColumnFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTableColumnFlags_IsHovered;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTableColumnFlags_WidthMask__imgui_568d46c1e1b4102a() {
  ImGuiTableColumnFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTableColumnFlags_WidthMask_;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTableColumnFlags_IndentMask__imgui_568d46c1e1b4102a() {
  ImGuiTableColumnFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTableColumnFlags_IndentMask_;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTableColumnFlags_StatusMask__imgui_568d46c1e1b4102a() {
  ImGuiTableColumnFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTableColumnFlags_StatusMask_;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTableColumnFlags_NoDirectResize__imgui_568d46c1e1b4102a() {
  ImGuiTableColumnFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTableColumnFlags_NoDirectResize_;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTableRowFlags_None_imgui_568d46c1e1b4102a() {
  ImGuiTableRowFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTableRowFlags_None;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTableRowFlags_Headers_imgui_568d46c1e1b4102a() {
  ImGuiTableRowFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTableRowFlags_Headers;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTableBgTarget_None_imgui_568d46c1e1b4102a() {
  ImGuiTableBgTarget_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTableBgTarget_None;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTableBgTarget_RowBg0_imgui_568d46c1e1b4102a() {
  ImGuiTableBgTarget_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTableBgTarget_RowBg0;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTableBgTarget_RowBg1_imgui_568d46c1e1b4102a() {
  ImGuiTableBgTarget_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTableBgTarget_RowBg1;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiTableBgTarget_CellBg_imgui_568d46c1e1b4102a() {
  ImGuiTableBgTarget_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiTableBgTarget_CellBg;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_ImGuiTableSortSpecs_Specs_set_imgui_568d46c1e1b4102a(ImGuiTableSortSpecs *_swig_go_0, ImGuiTableColumnSortSpecs *_swig_go_1) {
  ImGuiTableSortSpecs *arg1 = (ImGuiTableSortSpecs *) 0 ;
  ImGuiTableColumnSortSpecs *arg2 = (ImGuiTableColumnSortSpecs *) 0 ;
  
  arg1 = *(ImGuiTableSortSpecs **)&_swig_go_0; 
  arg2 = *(ImGuiTableColumnSortSpecs **)&_swig_go_1; 
  
  if (arg1) (arg1)->Specs = (ImGuiTableColumnSortSpecs const *)arg2;
  
}


ImGuiTableColumnSortSpecs *_wrap_ImGuiTableSortSpecs_Specs_get_imgui_568d46c1e1b4102a(ImGuiTableSortSpecs *_swig_go_0) {
  ImGuiTableSortSpecs *arg1 = (ImGuiTableSortSpecs *) 0 ;
  ImGuiTableColumnSortSpecs *result = 0 ;
  ImGuiTableColumnSortSpecs *_swig_go_result;
  
  arg1 = *(ImGuiTableSortSpecs **)&_swig_go_0; 
  
  result = (ImGuiTableColumnSortSpecs *) ((arg1)->Specs);
  *(ImGuiTableColumnSortSpecs **)&_swig_go_result = (ImGuiTableColumnSortSpecs *)result; 
  return _swig_go_result;
}


void _wrap_ImGuiTableSortSpecs_SpecsCount_set_imgui_568d46c1e1b4102a(ImGuiTableSortSpecs *_swig_go_0, intgo _swig_go_1) {
  ImGuiTableSortSpecs *arg1 = (ImGuiTableSortSpecs *) 0 ;
  int arg2 ;
  
  arg1 = *(ImGuiTableSortSpecs **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->SpecsCount = arg2;
  
}


intgo _wrap_ImGuiTableSortSpecs_SpecsCount_get_imgui_568d46c1e1b4102a(ImGuiTableSortSpecs *_swig_go_0) {
  ImGuiTableSortSpecs *arg1 = (ImGuiTableSortSpecs *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(ImGuiTableSortSpecs **)&_swig_go_0; 
  
  result = (int) ((arg1)->SpecsCount);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiTableSortSpecs_SpecsDirty_set_imgui_568d46c1e1b4102a(ImGuiTableSortSpecs *_swig_go_0, bool _swig_go_1) {
  ImGuiTableSortSpecs *arg1 = (ImGuiTableSortSpecs *) 0 ;
  bool arg2 ;
  
  arg1 = *(ImGuiTableSortSpecs **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->SpecsDirty = arg2;
  
}


bool _wrap_ImGuiTableSortSpecs_SpecsDirty_get_imgui_568d46c1e1b4102a(ImGuiTableSortSpecs *_swig_go_0) {
  ImGuiTableSortSpecs *arg1 = (ImGuiTableSortSpecs *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ImGuiTableSortSpecs **)&_swig_go_0; 
  
  result = (bool) ((arg1)->SpecsDirty);
  _swig_go_result = result; 
  return _swig_go_result;
}


ImGuiTableSortSpecs *_wrap_new_ImGuiTableSortSpecs_imgui_568d46c1e1b4102a() {
  ImGuiTableSortSpecs *result = 0 ;
  ImGuiTableSortSpecs *_swig_go_result;
  
  
  result = (ImGuiTableSortSpecs *)new ImGuiTableSortSpecs();
  *(ImGuiTableSortSpecs **)&_swig_go_result = (ImGuiTableSortSpecs *)result; 
  return _swig_go_result;
}


void _wrap_delete_ImGuiTableSortSpecs_imgui_568d46c1e1b4102a(ImGuiTableSortSpecs *_swig_go_0) {
  ImGuiTableSortSpecs *arg1 = (ImGuiTableSortSpecs *) 0 ;
  
  arg1 = *(ImGuiTableSortSpecs **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_ImGuiTableColumnSortSpecs_ColumnUserID_set_imgui_568d46c1e1b4102a(ImGuiTableColumnSortSpecs *_swig_go_0, intgo _swig_go_1) {
  ImGuiTableColumnSortSpecs *arg1 = (ImGuiTableColumnSortSpecs *) 0 ;
  ImGuiID arg2 ;
  
  arg1 = *(ImGuiTableColumnSortSpecs **)&_swig_go_0; 
  arg2 = (ImGuiID)_swig_go_1; 
  
  if (arg1) (arg1)->ColumnUserID = arg2;
  
}


intgo _wrap_ImGuiTableColumnSortSpecs_ColumnUserID_get_imgui_568d46c1e1b4102a(ImGuiTableColumnSortSpecs *_swig_go_0) {
  ImGuiTableColumnSortSpecs *arg1 = (ImGuiTableColumnSortSpecs *) 0 ;
  ImGuiID result;
  intgo _swig_go_result;
  
  arg1 = *(ImGuiTableColumnSortSpecs **)&_swig_go_0; 
  
  result = (ImGuiID) ((arg1)->ColumnUserID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiTableColumnSortSpecs_ColumnIndex_set_imgui_568d46c1e1b4102a(ImGuiTableColumnSortSpecs *_swig_go_0, short _swig_go_1) {
  ImGuiTableColumnSortSpecs *arg1 = (ImGuiTableColumnSortSpecs *) 0 ;
  ImS16 arg2 ;
  
  arg1 = *(ImGuiTableColumnSortSpecs **)&_swig_go_0; 
  arg2 = (ImS16)_swig_go_1; 
  
  if (arg1) (arg1)->ColumnIndex = arg2;
  
}


short _wrap_ImGuiTableColumnSortSpecs_ColumnIndex_get_imgui_568d46c1e1b4102a(ImGuiTableColumnSortSpecs *_swig_go_0) {
  ImGuiTableColumnSortSpecs *arg1 = (ImGuiTableColumnSortSpecs *) 0 ;
  ImS16 result;
  short _swig_go_result;
  
  arg1 = *(ImGuiTableColumnSortSpecs **)&_swig_go_0; 
  
  result = (ImS16) ((arg1)->ColumnIndex);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiTableColumnSortSpecs_SortOrder_set_imgui_568d46c1e1b4102a(ImGuiTableColumnSortSpecs *_swig_go_0, short _swig_go_1) {
  ImGuiTableColumnSortSpecs *arg1 = (ImGuiTableColumnSortSpecs *) 0 ;
  ImS16 arg2 ;
  
  arg1 = *(ImGuiTableColumnSortSpecs **)&_swig_go_0; 
  arg2 = (ImS16)_swig_go_1; 
  
  if (arg1) (arg1)->SortOrder = arg2;
  
}


short _wrap_ImGuiTableColumnSortSpecs_SortOrder_get_imgui_568d46c1e1b4102a(ImGuiTableColumnSortSpecs *_swig_go_0) {
  ImGuiTableColumnSortSpecs *arg1 = (ImGuiTableColumnSortSpecs *) 0 ;
  ImS16 result;
  short _swig_go_result;
  
  arg1 = *(ImGuiTableColumnSortSpecs **)&_swig_go_0; 
  
  result = (ImS16) ((arg1)->SortOrder);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiTableColumnSortSpecs_SortDirection_set_imgui_568d46c1e1b4102a(ImGuiTableColumnSortSpecs *_swig_go_0, intgo _swig_go_1) {
  ImGuiTableColumnSortSpecs *arg1 = (ImGuiTableColumnSortSpecs *) 0 ;
  ImGuiSortDirection arg2 ;
  
  arg1 = *(ImGuiTableColumnSortSpecs **)&_swig_go_0; 
  arg2 = (ImGuiSortDirection)_swig_go_1; 
  
  if (arg1) (arg1)->SortDirection = arg2;
  
}


intgo _wrap_ImGuiTableColumnSortSpecs_SortDirection_get_imgui_568d46c1e1b4102a(ImGuiTableColumnSortSpecs *_swig_go_0) {
  ImGuiTableColumnSortSpecs *arg1 = (ImGuiTableColumnSortSpecs *) 0 ;
  ImGuiSortDirection result;
  intgo _swig_go_result;
  
  arg1 = *(ImGuiTableColumnSortSpecs **)&_swig_go_0; 
  
  result = (ImGuiSortDirection) ((arg1)->SortDirection);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


ImGuiTableColumnSortSpecs *_wrap_new_ImGuiTableColumnSortSpecs_imgui_568d46c1e1b4102a() {
  ImGuiTableColumnSortSpecs *result = 0 ;
  ImGuiTableColumnSortSpecs *_swig_go_result;
  
  
  result = (ImGuiTableColumnSortSpecs *)new ImGuiTableColumnSortSpecs();
  *(ImGuiTableColumnSortSpecs **)&_swig_go_result = (ImGuiTableColumnSortSpecs *)result; 
  return _swig_go_result;
}


void _wrap_delete_ImGuiTableColumnSortSpecs_imgui_568d46c1e1b4102a(ImGuiTableColumnSortSpecs *_swig_go_0) {
  ImGuiTableColumnSortSpecs *arg1 = (ImGuiTableColumnSortSpecs *) 0 ;
  
  arg1 = *(ImGuiTableColumnSortSpecs **)&_swig_go_0; 
  
  delete arg1;
  
}


ImNewWrapper *_wrap_new_ImNewWrapper_imgui_568d46c1e1b4102a() {
  ImNewWrapper *result = 0 ;
  ImNewWrapper *_swig_go_result;
  
  
  result = (ImNewWrapper *)new ImNewWrapper();
  *(ImNewWrapper **)&_swig_go_result = (ImNewWrapper *)result; 
  return _swig_go_result;
}


void _wrap_delete_ImNewWrapper_imgui_568d46c1e1b4102a(ImNewWrapper *_swig_go_0) {
  ImNewWrapper *arg1 = (ImNewWrapper *) 0 ;
  
  arg1 = *(ImNewWrapper **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_ImGuiStyle_Alpha_set_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0, float _swig_go_1) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  float arg2 ;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->Alpha = arg2;
  
}


float _wrap_ImGuiStyle_Alpha_get_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  
  result = (float) ((arg1)->Alpha);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiStyle_DisabledAlpha_set_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0, float _swig_go_1) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  float arg2 ;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->DisabledAlpha = arg2;
  
}


float _wrap_ImGuiStyle_DisabledAlpha_get_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  
  result = (float) ((arg1)->DisabledAlpha);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiStyle_WindowPadding_set_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0, ImVec2 *_swig_go_1) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  ImVec2 *arg2 = (ImVec2 *) 0 ;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  
  if (arg1) (arg1)->WindowPadding = *arg2;
  
}


ImVec2 *_wrap_ImGuiStyle_WindowPadding_get_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  ImVec2 *result = 0 ;
  ImVec2 *_swig_go_result;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  
  result = (ImVec2 *)& ((arg1)->WindowPadding);
  *(ImVec2 **)&_swig_go_result = (ImVec2 *)result; 
  return _swig_go_result;
}


void _wrap_ImGuiStyle_WindowRounding_set_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0, float _swig_go_1) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  float arg2 ;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->WindowRounding = arg2;
  
}


float _wrap_ImGuiStyle_WindowRounding_get_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  
  result = (float) ((arg1)->WindowRounding);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiStyle_WindowBorderSize_set_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0, float _swig_go_1) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  float arg2 ;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->WindowBorderSize = arg2;
  
}


float _wrap_ImGuiStyle_WindowBorderSize_get_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  
  result = (float) ((arg1)->WindowBorderSize);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiStyle_WindowMinSize_set_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0, ImVec2 *_swig_go_1) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  ImVec2 *arg2 = (ImVec2 *) 0 ;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  
  if (arg1) (arg1)->WindowMinSize = *arg2;
  
}


ImVec2 *_wrap_ImGuiStyle_WindowMinSize_get_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  ImVec2 *result = 0 ;
  ImVec2 *_swig_go_result;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  
  result = (ImVec2 *)& ((arg1)->WindowMinSize);
  *(ImVec2 **)&_swig_go_result = (ImVec2 *)result; 
  return _swig_go_result;
}


void _wrap_ImGuiStyle_WindowTitleAlign_set_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0, ImVec2 *_swig_go_1) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  ImVec2 *arg2 = (ImVec2 *) 0 ;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  
  if (arg1) (arg1)->WindowTitleAlign = *arg2;
  
}


ImVec2 *_wrap_ImGuiStyle_WindowTitleAlign_get_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  ImVec2 *result = 0 ;
  ImVec2 *_swig_go_result;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  
  result = (ImVec2 *)& ((arg1)->WindowTitleAlign);
  *(ImVec2 **)&_swig_go_result = (ImVec2 *)result; 
  return _swig_go_result;
}


void _wrap_ImGuiStyle_WindowMenuButtonPosition_set_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0, intgo _swig_go_1) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  ImGuiDir arg2 ;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  arg2 = (ImGuiDir)_swig_go_1; 
  
  if (arg1) (arg1)->WindowMenuButtonPosition = arg2;
  
}


intgo _wrap_ImGuiStyle_WindowMenuButtonPosition_get_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  ImGuiDir result;
  intgo _swig_go_result;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  
  result = (ImGuiDir) ((arg1)->WindowMenuButtonPosition);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_ImGuiStyle_ChildRounding_set_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0, float _swig_go_1) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  float arg2 ;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->ChildRounding = arg2;
  
}


float _wrap_ImGuiStyle_ChildRounding_get_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  
  result = (float) ((arg1)->ChildRounding);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiStyle_ChildBorderSize_set_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0, float _swig_go_1) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  float arg2 ;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->ChildBorderSize = arg2;
  
}


float _wrap_ImGuiStyle_ChildBorderSize_get_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  
  result = (float) ((arg1)->ChildBorderSize);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiStyle_PopupRounding_set_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0, float _swig_go_1) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  float arg2 ;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->PopupRounding = arg2;
  
}


float _wrap_ImGuiStyle_PopupRounding_get_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  
  result = (float) ((arg1)->PopupRounding);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiStyle_PopupBorderSize_set_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0, float _swig_go_1) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  float arg2 ;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->PopupBorderSize = arg2;
  
}


float _wrap_ImGuiStyle_PopupBorderSize_get_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  
  result = (float) ((arg1)->PopupBorderSize);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiStyle_FramePadding_set_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0, ImVec2 *_swig_go_1) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  ImVec2 *arg2 = (ImVec2 *) 0 ;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  
  if (arg1) (arg1)->FramePadding = *arg2;
  
}


ImVec2 *_wrap_ImGuiStyle_FramePadding_get_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  ImVec2 *result = 0 ;
  ImVec2 *_swig_go_result;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  
  result = (ImVec2 *)& ((arg1)->FramePadding);
  *(ImVec2 **)&_swig_go_result = (ImVec2 *)result; 
  return _swig_go_result;
}


void _wrap_ImGuiStyle_FrameRounding_set_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0, float _swig_go_1) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  float arg2 ;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->FrameRounding = arg2;
  
}


float _wrap_ImGuiStyle_FrameRounding_get_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  
  result = (float) ((arg1)->FrameRounding);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiStyle_FrameBorderSize_set_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0, float _swig_go_1) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  float arg2 ;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->FrameBorderSize = arg2;
  
}


float _wrap_ImGuiStyle_FrameBorderSize_get_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  
  result = (float) ((arg1)->FrameBorderSize);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiStyle_ItemSpacing_set_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0, ImVec2 *_swig_go_1) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  ImVec2 *arg2 = (ImVec2 *) 0 ;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  
  if (arg1) (arg1)->ItemSpacing = *arg2;
  
}


ImVec2 *_wrap_ImGuiStyle_ItemSpacing_get_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  ImVec2 *result = 0 ;
  ImVec2 *_swig_go_result;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  
  result = (ImVec2 *)& ((arg1)->ItemSpacing);
  *(ImVec2 **)&_swig_go_result = (ImVec2 *)result; 
  return _swig_go_result;
}


void _wrap_ImGuiStyle_ItemInnerSpacing_set_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0, ImVec2 *_swig_go_1) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  ImVec2 *arg2 = (ImVec2 *) 0 ;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  
  if (arg1) (arg1)->ItemInnerSpacing = *arg2;
  
}


ImVec2 *_wrap_ImGuiStyle_ItemInnerSpacing_get_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  ImVec2 *result = 0 ;
  ImVec2 *_swig_go_result;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  
  result = (ImVec2 *)& ((arg1)->ItemInnerSpacing);
  *(ImVec2 **)&_swig_go_result = (ImVec2 *)result; 
  return _swig_go_result;
}


void _wrap_ImGuiStyle_CellPadding_set_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0, ImVec2 *_swig_go_1) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  ImVec2 *arg2 = (ImVec2 *) 0 ;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  
  if (arg1) (arg1)->CellPadding = *arg2;
  
}


ImVec2 *_wrap_ImGuiStyle_CellPadding_get_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  ImVec2 *result = 0 ;
  ImVec2 *_swig_go_result;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  
  result = (ImVec2 *)& ((arg1)->CellPadding);
  *(ImVec2 **)&_swig_go_result = (ImVec2 *)result; 
  return _swig_go_result;
}


void _wrap_ImGuiStyle_TouchExtraPadding_set_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0, ImVec2 *_swig_go_1) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  ImVec2 *arg2 = (ImVec2 *) 0 ;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  
  if (arg1) (arg1)->TouchExtraPadding = *arg2;
  
}


ImVec2 *_wrap_ImGuiStyle_TouchExtraPadding_get_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  ImVec2 *result = 0 ;
  ImVec2 *_swig_go_result;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  
  result = (ImVec2 *)& ((arg1)->TouchExtraPadding);
  *(ImVec2 **)&_swig_go_result = (ImVec2 *)result; 
  return _swig_go_result;
}


void _wrap_ImGuiStyle_IndentSpacing_set_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0, float _swig_go_1) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  float arg2 ;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->IndentSpacing = arg2;
  
}


float _wrap_ImGuiStyle_IndentSpacing_get_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  
  result = (float) ((arg1)->IndentSpacing);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiStyle_ColumnsMinSpacing_set_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0, float _swig_go_1) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  float arg2 ;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->ColumnsMinSpacing = arg2;
  
}


float _wrap_ImGuiStyle_ColumnsMinSpacing_get_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  
  result = (float) ((arg1)->ColumnsMinSpacing);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiStyle_ScrollbarSize_set_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0, float _swig_go_1) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  float arg2 ;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->ScrollbarSize = arg2;
  
}


float _wrap_ImGuiStyle_ScrollbarSize_get_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  
  result = (float) ((arg1)->ScrollbarSize);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiStyle_ScrollbarRounding_set_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0, float _swig_go_1) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  float arg2 ;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->ScrollbarRounding = arg2;
  
}


float _wrap_ImGuiStyle_ScrollbarRounding_get_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  
  result = (float) ((arg1)->ScrollbarRounding);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiStyle_GrabMinSize_set_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0, float _swig_go_1) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  float arg2 ;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->GrabMinSize = arg2;
  
}


float _wrap_ImGuiStyle_GrabMinSize_get_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  
  result = (float) ((arg1)->GrabMinSize);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiStyle_GrabRounding_set_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0, float _swig_go_1) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  float arg2 ;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->GrabRounding = arg2;
  
}


float _wrap_ImGuiStyle_GrabRounding_get_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  
  result = (float) ((arg1)->GrabRounding);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiStyle_LogSliderDeadzone_set_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0, float _swig_go_1) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  float arg2 ;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->LogSliderDeadzone = arg2;
  
}


float _wrap_ImGuiStyle_LogSliderDeadzone_get_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  
  result = (float) ((arg1)->LogSliderDeadzone);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiStyle_TabRounding_set_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0, float _swig_go_1) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  float arg2 ;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->TabRounding = arg2;
  
}


float _wrap_ImGuiStyle_TabRounding_get_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  
  result = (float) ((arg1)->TabRounding);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiStyle_TabBorderSize_set_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0, float _swig_go_1) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  float arg2 ;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->TabBorderSize = arg2;
  
}


float _wrap_ImGuiStyle_TabBorderSize_get_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  
  result = (float) ((arg1)->TabBorderSize);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiStyle_TabMinWidthForCloseButton_set_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0, float _swig_go_1) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  float arg2 ;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->TabMinWidthForCloseButton = arg2;
  
}


float _wrap_ImGuiStyle_TabMinWidthForCloseButton_get_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  
  result = (float) ((arg1)->TabMinWidthForCloseButton);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiStyle_TabBarBorderSize_set_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0, float _swig_go_1) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  float arg2 ;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->TabBarBorderSize = arg2;
  
}


float _wrap_ImGuiStyle_TabBarBorderSize_get_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  
  result = (float) ((arg1)->TabBarBorderSize);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiStyle_TabBarOverlineSize_set_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0, float _swig_go_1) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  float arg2 ;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->TabBarOverlineSize = arg2;
  
}


float _wrap_ImGuiStyle_TabBarOverlineSize_get_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  
  result = (float) ((arg1)->TabBarOverlineSize);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiStyle_TableAngledHeadersAngle_set_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0, float _swig_go_1) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  float arg2 ;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->TableAngledHeadersAngle = arg2;
  
}


float _wrap_ImGuiStyle_TableAngledHeadersAngle_get_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  
  result = (float) ((arg1)->TableAngledHeadersAngle);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiStyle_TableAngledHeadersTextAlign_set_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0, ImVec2 *_swig_go_1) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  ImVec2 *arg2 = (ImVec2 *) 0 ;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  
  if (arg1) (arg1)->TableAngledHeadersTextAlign = *arg2;
  
}


ImVec2 *_wrap_ImGuiStyle_TableAngledHeadersTextAlign_get_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  ImVec2 *result = 0 ;
  ImVec2 *_swig_go_result;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  
  result = (ImVec2 *)& ((arg1)->TableAngledHeadersTextAlign);
  *(ImVec2 **)&_swig_go_result = (ImVec2 *)result; 
  return _swig_go_result;
}


void _wrap_ImGuiStyle_ColorButtonPosition_set_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0, intgo _swig_go_1) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  ImGuiDir arg2 ;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  arg2 = (ImGuiDir)_swig_go_1; 
  
  if (arg1) (arg1)->ColorButtonPosition = arg2;
  
}


intgo _wrap_ImGuiStyle_ColorButtonPosition_get_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  ImGuiDir result;
  intgo _swig_go_result;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  
  result = (ImGuiDir) ((arg1)->ColorButtonPosition);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_ImGuiStyle_ButtonTextAlign_set_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0, ImVec2 *_swig_go_1) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  ImVec2 *arg2 = (ImVec2 *) 0 ;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  
  if (arg1) (arg1)->ButtonTextAlign = *arg2;
  
}


ImVec2 *_wrap_ImGuiStyle_ButtonTextAlign_get_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  ImVec2 *result = 0 ;
  ImVec2 *_swig_go_result;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  
  result = (ImVec2 *)& ((arg1)->ButtonTextAlign);
  *(ImVec2 **)&_swig_go_result = (ImVec2 *)result; 
  return _swig_go_result;
}


void _wrap_ImGuiStyle_SelectableTextAlign_set_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0, ImVec2 *_swig_go_1) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  ImVec2 *arg2 = (ImVec2 *) 0 ;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  
  if (arg1) (arg1)->SelectableTextAlign = *arg2;
  
}


ImVec2 *_wrap_ImGuiStyle_SelectableTextAlign_get_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  ImVec2 *result = 0 ;
  ImVec2 *_swig_go_result;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  
  result = (ImVec2 *)& ((arg1)->SelectableTextAlign);
  *(ImVec2 **)&_swig_go_result = (ImVec2 *)result; 
  return _swig_go_result;
}


void _wrap_ImGuiStyle_SeparatorTextBorderSize_set_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0, float _swig_go_1) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  float arg2 ;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->SeparatorTextBorderSize = arg2;
  
}


float _wrap_ImGuiStyle_SeparatorTextBorderSize_get_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  
  result = (float) ((arg1)->SeparatorTextBorderSize);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiStyle_SeparatorTextAlign_set_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0, ImVec2 *_swig_go_1) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  ImVec2 *arg2 = (ImVec2 *) 0 ;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  
  if (arg1) (arg1)->SeparatorTextAlign = *arg2;
  
}


ImVec2 *_wrap_ImGuiStyle_SeparatorTextAlign_get_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  ImVec2 *result = 0 ;
  ImVec2 *_swig_go_result;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  
  result = (ImVec2 *)& ((arg1)->SeparatorTextAlign);
  *(ImVec2 **)&_swig_go_result = (ImVec2 *)result; 
  return _swig_go_result;
}


void _wrap_ImGuiStyle_SeparatorTextPadding_set_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0, ImVec2 *_swig_go_1) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  ImVec2 *arg2 = (ImVec2 *) 0 ;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  
  if (arg1) (arg1)->SeparatorTextPadding = *arg2;
  
}


ImVec2 *_wrap_ImGuiStyle_SeparatorTextPadding_get_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  ImVec2 *result = 0 ;
  ImVec2 *_swig_go_result;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  
  result = (ImVec2 *)& ((arg1)->SeparatorTextPadding);
  *(ImVec2 **)&_swig_go_result = (ImVec2 *)result; 
  return _swig_go_result;
}


void _wrap_ImGuiStyle_DisplayWindowPadding_set_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0, ImVec2 *_swig_go_1) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  ImVec2 *arg2 = (ImVec2 *) 0 ;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  
  if (arg1) (arg1)->DisplayWindowPadding = *arg2;
  
}


ImVec2 *_wrap_ImGuiStyle_DisplayWindowPadding_get_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  ImVec2 *result = 0 ;
  ImVec2 *_swig_go_result;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  
  result = (ImVec2 *)& ((arg1)->DisplayWindowPadding);
  *(ImVec2 **)&_swig_go_result = (ImVec2 *)result; 
  return _swig_go_result;
}


void _wrap_ImGuiStyle_DisplaySafeAreaPadding_set_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0, ImVec2 *_swig_go_1) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  ImVec2 *arg2 = (ImVec2 *) 0 ;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  
  if (arg1) (arg1)->DisplaySafeAreaPadding = *arg2;
  
}


ImVec2 *_wrap_ImGuiStyle_DisplaySafeAreaPadding_get_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  ImVec2 *result = 0 ;
  ImVec2 *_swig_go_result;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  
  result = (ImVec2 *)& ((arg1)->DisplaySafeAreaPadding);
  *(ImVec2 **)&_swig_go_result = (ImVec2 *)result; 
  return _swig_go_result;
}


void _wrap_ImGuiStyle_MouseCursorScale_set_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0, float _swig_go_1) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  float arg2 ;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->MouseCursorScale = arg2;
  
}


float _wrap_ImGuiStyle_MouseCursorScale_get_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  
  result = (float) ((arg1)->MouseCursorScale);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiStyle_AntiAliasedLines_set_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0, bool _swig_go_1) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  bool arg2 ;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->AntiAliasedLines = arg2;
  
}


bool _wrap_ImGuiStyle_AntiAliasedLines_get_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  
  result = (bool) ((arg1)->AntiAliasedLines);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiStyle_AntiAliasedLinesUseTex_set_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0, bool _swig_go_1) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  bool arg2 ;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->AntiAliasedLinesUseTex = arg2;
  
}


bool _wrap_ImGuiStyle_AntiAliasedLinesUseTex_get_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  
  result = (bool) ((arg1)->AntiAliasedLinesUseTex);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiStyle_AntiAliasedFill_set_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0, bool _swig_go_1) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  bool arg2 ;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->AntiAliasedFill = arg2;
  
}


bool _wrap_ImGuiStyle_AntiAliasedFill_get_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  
  result = (bool) ((arg1)->AntiAliasedFill);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiStyle_CurveTessellationTol_set_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0, float _swig_go_1) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  float arg2 ;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->CurveTessellationTol = arg2;
  
}


float _wrap_ImGuiStyle_CurveTessellationTol_get_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  
  result = (float) ((arg1)->CurveTessellationTol);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiStyle_CircleTessellationMaxError_set_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0, float _swig_go_1) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  float arg2 ;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->CircleTessellationMaxError = arg2;
  
}


float _wrap_ImGuiStyle_CircleTessellationMaxError_get_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  
  result = (float) ((arg1)->CircleTessellationMaxError);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiStyle_Colors_set_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0, ImVec4 (*_swig_go_1)[ImGuiCol_COUNT]) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  ImVec4 *arg2 = (ImVec4 *) (ImVec4 *)0 ;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  arg2 = *(ImVec4 **)&_swig_go_1; 
  
  {
    size_t ii;
    ImVec4 *b = (ImVec4 *) arg1->Colors;
    for (ii = 0; ii < (size_t)ImGuiCol_COUNT; ii++) b[ii] = *((ImVec4 *) arg2 + ii);
  }
  
}


ImVec4 (*_wrap_ImGuiStyle_Colors_get_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0))[ImGuiCol_COUNT] {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  ImVec4 *result = 0 ;
  ImVec4 (*_swig_go_result)[ImGuiCol_COUNT];
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  
  result = (ImVec4 *)(ImVec4 *) ((arg1)->Colors);
  *(ImVec4 **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiStyle_HoverStationaryDelay_set_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0, float _swig_go_1) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  float arg2 ;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->HoverStationaryDelay = arg2;
  
}


float _wrap_ImGuiStyle_HoverStationaryDelay_get_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  
  result = (float) ((arg1)->HoverStationaryDelay);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiStyle_HoverDelayShort_set_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0, float _swig_go_1) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  float arg2 ;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->HoverDelayShort = arg2;
  
}


float _wrap_ImGuiStyle_HoverDelayShort_get_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  
  result = (float) ((arg1)->HoverDelayShort);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiStyle_HoverDelayNormal_set_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0, float _swig_go_1) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  float arg2 ;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->HoverDelayNormal = arg2;
  
}


float _wrap_ImGuiStyle_HoverDelayNormal_get_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  
  result = (float) ((arg1)->HoverDelayNormal);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiStyle_HoverFlagsForTooltipMouse_set_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0, intgo _swig_go_1) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  ImGuiHoveredFlags arg2 ;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  arg2 = (ImGuiHoveredFlags)_swig_go_1; 
  
  if (arg1) (arg1)->HoverFlagsForTooltipMouse = arg2;
  
}


intgo _wrap_ImGuiStyle_HoverFlagsForTooltipMouse_get_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  ImGuiHoveredFlags result;
  intgo _swig_go_result;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  
  result = (ImGuiHoveredFlags) ((arg1)->HoverFlagsForTooltipMouse);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiStyle_HoverFlagsForTooltipNav_set_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0, intgo _swig_go_1) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  ImGuiHoveredFlags arg2 ;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  arg2 = (ImGuiHoveredFlags)_swig_go_1; 
  
  if (arg1) (arg1)->HoverFlagsForTooltipNav = arg2;
  
}


intgo _wrap_ImGuiStyle_HoverFlagsForTooltipNav_get_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  ImGuiHoveredFlags result;
  intgo _swig_go_result;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  
  result = (ImGuiHoveredFlags) ((arg1)->HoverFlagsForTooltipNav);
  _swig_go_result = result; 
  return _swig_go_result;
}


ImGuiStyle *_wrap_new_ImGuiStyle_imgui_568d46c1e1b4102a() {
  ImGuiStyle *result = 0 ;
  ImGuiStyle *_swig_go_result;
  
  
  result = (ImGuiStyle *)new ImGuiStyle();
  *(ImGuiStyle **)&_swig_go_result = (ImGuiStyle *)result; 
  return _swig_go_result;
}


void _wrap_ImGuiStyle_ScaleAllSizes_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0, float _swig_go_1) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  float arg2 ;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  (arg1)->ScaleAllSizes(arg2);
  
}


void _wrap_delete_ImGuiStyle_imgui_568d46c1e1b4102a(ImGuiStyle *_swig_go_0) {
  ImGuiStyle *arg1 = (ImGuiStyle *) 0 ;
  
  arg1 = *(ImGuiStyle **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_ImGuiKeyData_Down_set_imgui_568d46c1e1b4102a(ImGuiKeyData *_swig_go_0, bool _swig_go_1) {
  ImGuiKeyData *arg1 = (ImGuiKeyData *) 0 ;
  bool arg2 ;
  
  arg1 = *(ImGuiKeyData **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->Down = arg2;
  
}


bool _wrap_ImGuiKeyData_Down_get_imgui_568d46c1e1b4102a(ImGuiKeyData *_swig_go_0) {
  ImGuiKeyData *arg1 = (ImGuiKeyData *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ImGuiKeyData **)&_swig_go_0; 
  
  result = (bool) ((arg1)->Down);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiKeyData_DownDuration_set_imgui_568d46c1e1b4102a(ImGuiKeyData *_swig_go_0, float _swig_go_1) {
  ImGuiKeyData *arg1 = (ImGuiKeyData *) 0 ;
  float arg2 ;
  
  arg1 = *(ImGuiKeyData **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->DownDuration = arg2;
  
}


float _wrap_ImGuiKeyData_DownDuration_get_imgui_568d46c1e1b4102a(ImGuiKeyData *_swig_go_0) {
  ImGuiKeyData *arg1 = (ImGuiKeyData *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(ImGuiKeyData **)&_swig_go_0; 
  
  result = (float) ((arg1)->DownDuration);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiKeyData_DownDurationPrev_set_imgui_568d46c1e1b4102a(ImGuiKeyData *_swig_go_0, float _swig_go_1) {
  ImGuiKeyData *arg1 = (ImGuiKeyData *) 0 ;
  float arg2 ;
  
  arg1 = *(ImGuiKeyData **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->DownDurationPrev = arg2;
  
}


float _wrap_ImGuiKeyData_DownDurationPrev_get_imgui_568d46c1e1b4102a(ImGuiKeyData *_swig_go_0) {
  ImGuiKeyData *arg1 = (ImGuiKeyData *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(ImGuiKeyData **)&_swig_go_0; 
  
  result = (float) ((arg1)->DownDurationPrev);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiKeyData_AnalogValue_set_imgui_568d46c1e1b4102a(ImGuiKeyData *_swig_go_0, float _swig_go_1) {
  ImGuiKeyData *arg1 = (ImGuiKeyData *) 0 ;
  float arg2 ;
  
  arg1 = *(ImGuiKeyData **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->AnalogValue = arg2;
  
}


float _wrap_ImGuiKeyData_AnalogValue_get_imgui_568d46c1e1b4102a(ImGuiKeyData *_swig_go_0) {
  ImGuiKeyData *arg1 = (ImGuiKeyData *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(ImGuiKeyData **)&_swig_go_0; 
  
  result = (float) ((arg1)->AnalogValue);
  _swig_go_result = result; 
  return _swig_go_result;
}


ImGuiKeyData *_wrap_new_ImGuiKeyData_imgui_568d46c1e1b4102a() {
  ImGuiKeyData *result = 0 ;
  ImGuiKeyData *_swig_go_result;
  
  
  result = (ImGuiKeyData *)new ImGuiKeyData();
  *(ImGuiKeyData **)&_swig_go_result = (ImGuiKeyData *)result; 
  return _swig_go_result;
}


void _wrap_delete_ImGuiKeyData_imgui_568d46c1e1b4102a(ImGuiKeyData *_swig_go_0) {
  ImGuiKeyData *arg1 = (ImGuiKeyData *) 0 ;
  
  arg1 = *(ImGuiKeyData **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_ImGuiIO_ConfigFlags_set_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, intgo _swig_go_1) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  ImGuiConfigFlags arg2 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  arg2 = (ImGuiConfigFlags)_swig_go_1; 
  
  if (arg1) (arg1)->ConfigFlags = arg2;
  
}


intgo _wrap_ImGuiIO_ConfigFlags_get_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  ImGuiConfigFlags result;
  intgo _swig_go_result;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  result = (ImGuiConfigFlags) ((arg1)->ConfigFlags);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiIO_BackendFlags_set_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, intgo _swig_go_1) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  ImGuiBackendFlags arg2 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  arg2 = (ImGuiBackendFlags)_swig_go_1; 
  
  if (arg1) (arg1)->BackendFlags = arg2;
  
}


intgo _wrap_ImGuiIO_BackendFlags_get_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  ImGuiBackendFlags result;
  intgo _swig_go_result;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  result = (ImGuiBackendFlags) ((arg1)->BackendFlags);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiIO_DisplaySize_set_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, ImVec2 *_swig_go_1) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  ImVec2 *arg2 = (ImVec2 *) 0 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  
  if (arg1) (arg1)->DisplaySize = *arg2;
  
}


ImVec2 *_wrap_ImGuiIO_DisplaySize_get_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  ImVec2 *result = 0 ;
  ImVec2 *_swig_go_result;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  result = (ImVec2 *)& ((arg1)->DisplaySize);
  *(ImVec2 **)&_swig_go_result = (ImVec2 *)result; 
  return _swig_go_result;
}


void _wrap_ImGuiIO_DeltaTime_set_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, float _swig_go_1) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  float arg2 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->DeltaTime = arg2;
  
}


float _wrap_ImGuiIO_DeltaTime_get_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  result = (float) ((arg1)->DeltaTime);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiIO_IniSavingRate_set_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, float _swig_go_1) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  float arg2 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->IniSavingRate = arg2;
  
}


float _wrap_ImGuiIO_IniSavingRate_get_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  result = (float) ((arg1)->IniSavingRate);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiIO_IniFilename_set_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, _gostring_ _swig_go_1) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if (arg2) {
      arg1->IniFilename = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->IniFilename, (const char *)arg2);
    } else {
      arg1->IniFilename = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_ImGuiIO_IniFilename_get_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  result = (char *) ((arg1)->IniFilename);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_ImGuiIO_LogFilename_set_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, _gostring_ _swig_go_1) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if (arg2) {
      arg1->LogFilename = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->LogFilename, (const char *)arg2);
    } else {
      arg1->LogFilename = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_ImGuiIO_LogFilename_get_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  result = (char *) ((arg1)->LogFilename);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_ImGuiIO_UserData_set_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, void *_swig_go_1) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  void *arg2 = (void *) 0 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  if (arg1) (arg1)->UserData = arg2;
  
}


void *_wrap_ImGuiIO_UserData_get_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  result = (void *) ((arg1)->UserData);
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


void _wrap_ImGuiIO_Fonts_set_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, ImFontAtlas *_swig_go_1) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  ImFontAtlas *arg2 = (ImFontAtlas *) 0 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  arg2 = *(ImFontAtlas **)&_swig_go_1; 
  
  if (arg1) (arg1)->Fonts = arg2;
  
}


ImFontAtlas *_wrap_ImGuiIO_Fonts_get_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  ImFontAtlas *result = 0 ;
  ImFontAtlas *_swig_go_result;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  result = (ImFontAtlas *) ((arg1)->Fonts);
  *(ImFontAtlas **)&_swig_go_result = (ImFontAtlas *)result; 
  return _swig_go_result;
}


void _wrap_ImGuiIO_FontGlobalScale_set_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, float _swig_go_1) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  float arg2 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->FontGlobalScale = arg2;
  
}


float _wrap_ImGuiIO_FontGlobalScale_get_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  result = (float) ((arg1)->FontGlobalScale);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiIO_FontAllowUserScaling_set_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, bool _swig_go_1) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  bool arg2 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->FontAllowUserScaling = arg2;
  
}


bool _wrap_ImGuiIO_FontAllowUserScaling_get_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  result = (bool) ((arg1)->FontAllowUserScaling);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiIO_FontDefault_set_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, ImFont *_swig_go_1) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  ImFont *arg2 = (ImFont *) 0 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  arg2 = *(ImFont **)&_swig_go_1; 
  
  if (arg1) (arg1)->FontDefault = arg2;
  
}


ImFont *_wrap_ImGuiIO_FontDefault_get_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  ImFont *result = 0 ;
  ImFont *_swig_go_result;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  result = (ImFont *) ((arg1)->FontDefault);
  *(ImFont **)&_swig_go_result = (ImFont *)result; 
  return _swig_go_result;
}


void _wrap_ImGuiIO_DisplayFramebufferScale_set_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, ImVec2 *_swig_go_1) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  ImVec2 *arg2 = (ImVec2 *) 0 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  
  if (arg1) (arg1)->DisplayFramebufferScale = *arg2;
  
}


ImVec2 *_wrap_ImGuiIO_DisplayFramebufferScale_get_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  ImVec2 *result = 0 ;
  ImVec2 *_swig_go_result;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  result = (ImVec2 *)& ((arg1)->DisplayFramebufferScale);
  *(ImVec2 **)&_swig_go_result = (ImVec2 *)result; 
  return _swig_go_result;
}


void _wrap_ImGuiIO_MouseDrawCursor_set_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, bool _swig_go_1) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  bool arg2 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->MouseDrawCursor = arg2;
  
}


bool _wrap_ImGuiIO_MouseDrawCursor_get_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  result = (bool) ((arg1)->MouseDrawCursor);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiIO_ConfigMacOSXBehaviors_set_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, bool _swig_go_1) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  bool arg2 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->ConfigMacOSXBehaviors = arg2;
  
}


bool _wrap_ImGuiIO_ConfigMacOSXBehaviors_get_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  result = (bool) ((arg1)->ConfigMacOSXBehaviors);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiIO_ConfigNavSwapGamepadButtons_set_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, bool _swig_go_1) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  bool arg2 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->ConfigNavSwapGamepadButtons = arg2;
  
}


bool _wrap_ImGuiIO_ConfigNavSwapGamepadButtons_get_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  result = (bool) ((arg1)->ConfigNavSwapGamepadButtons);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiIO_ConfigInputTrickleEventQueue_set_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, bool _swig_go_1) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  bool arg2 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->ConfigInputTrickleEventQueue = arg2;
  
}


bool _wrap_ImGuiIO_ConfigInputTrickleEventQueue_get_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  result = (bool) ((arg1)->ConfigInputTrickleEventQueue);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiIO_ConfigInputTextCursorBlink_set_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, bool _swig_go_1) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  bool arg2 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->ConfigInputTextCursorBlink = arg2;
  
}


bool _wrap_ImGuiIO_ConfigInputTextCursorBlink_get_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  result = (bool) ((arg1)->ConfigInputTextCursorBlink);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiIO_ConfigInputTextEnterKeepActive_set_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, bool _swig_go_1) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  bool arg2 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->ConfigInputTextEnterKeepActive = arg2;
  
}


bool _wrap_ImGuiIO_ConfigInputTextEnterKeepActive_get_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  result = (bool) ((arg1)->ConfigInputTextEnterKeepActive);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiIO_ConfigDragClickToInputText_set_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, bool _swig_go_1) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  bool arg2 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->ConfigDragClickToInputText = arg2;
  
}


bool _wrap_ImGuiIO_ConfigDragClickToInputText_get_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  result = (bool) ((arg1)->ConfigDragClickToInputText);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiIO_ConfigWindowsResizeFromEdges_set_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, bool _swig_go_1) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  bool arg2 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->ConfigWindowsResizeFromEdges = arg2;
  
}


bool _wrap_ImGuiIO_ConfigWindowsResizeFromEdges_get_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  result = (bool) ((arg1)->ConfigWindowsResizeFromEdges);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiIO_ConfigWindowsMoveFromTitleBarOnly_set_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, bool _swig_go_1) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  bool arg2 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->ConfigWindowsMoveFromTitleBarOnly = arg2;
  
}


bool _wrap_ImGuiIO_ConfigWindowsMoveFromTitleBarOnly_get_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  result = (bool) ((arg1)->ConfigWindowsMoveFromTitleBarOnly);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiIO_ConfigScrollbarScrollByPage_set_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, bool _swig_go_1) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  bool arg2 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->ConfigScrollbarScrollByPage = arg2;
  
}


bool _wrap_ImGuiIO_ConfigScrollbarScrollByPage_get_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  result = (bool) ((arg1)->ConfigScrollbarScrollByPage);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiIO_ConfigMemoryCompactTimer_set_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, float _swig_go_1) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  float arg2 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->ConfigMemoryCompactTimer = arg2;
  
}


float _wrap_ImGuiIO_ConfigMemoryCompactTimer_get_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  result = (float) ((arg1)->ConfigMemoryCompactTimer);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiIO_MouseDoubleClickTime_set_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, float _swig_go_1) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  float arg2 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->MouseDoubleClickTime = arg2;
  
}


float _wrap_ImGuiIO_MouseDoubleClickTime_get_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  result = (float) ((arg1)->MouseDoubleClickTime);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiIO_MouseDoubleClickMaxDist_set_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, float _swig_go_1) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  float arg2 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->MouseDoubleClickMaxDist = arg2;
  
}


float _wrap_ImGuiIO_MouseDoubleClickMaxDist_get_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  result = (float) ((arg1)->MouseDoubleClickMaxDist);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiIO_MouseDragThreshold_set_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, float _swig_go_1) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  float arg2 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->MouseDragThreshold = arg2;
  
}


float _wrap_ImGuiIO_MouseDragThreshold_get_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  result = (float) ((arg1)->MouseDragThreshold);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiIO_KeyRepeatDelay_set_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, float _swig_go_1) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  float arg2 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->KeyRepeatDelay = arg2;
  
}


float _wrap_ImGuiIO_KeyRepeatDelay_get_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  result = (float) ((arg1)->KeyRepeatDelay);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiIO_KeyRepeatRate_set_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, float _swig_go_1) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  float arg2 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->KeyRepeatRate = arg2;
  
}


float _wrap_ImGuiIO_KeyRepeatRate_get_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  result = (float) ((arg1)->KeyRepeatRate);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiIO_ConfigDebugIsDebuggerPresent_set_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, bool _swig_go_1) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  bool arg2 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->ConfigDebugIsDebuggerPresent = arg2;
  
}


bool _wrap_ImGuiIO_ConfigDebugIsDebuggerPresent_get_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  result = (bool) ((arg1)->ConfigDebugIsDebuggerPresent);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiIO_ConfigDebugHighlightIdConflicts_set_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, bool _swig_go_1) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  bool arg2 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->ConfigDebugHighlightIdConflicts = arg2;
  
}


bool _wrap_ImGuiIO_ConfigDebugHighlightIdConflicts_get_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  result = (bool) ((arg1)->ConfigDebugHighlightIdConflicts);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiIO_ConfigDebugBeginReturnValueOnce_set_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, bool _swig_go_1) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  bool arg2 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->ConfigDebugBeginReturnValueOnce = arg2;
  
}


bool _wrap_ImGuiIO_ConfigDebugBeginReturnValueOnce_get_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  result = (bool) ((arg1)->ConfigDebugBeginReturnValueOnce);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiIO_ConfigDebugBeginReturnValueLoop_set_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, bool _swig_go_1) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  bool arg2 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->ConfigDebugBeginReturnValueLoop = arg2;
  
}


bool _wrap_ImGuiIO_ConfigDebugBeginReturnValueLoop_get_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  result = (bool) ((arg1)->ConfigDebugBeginReturnValueLoop);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiIO_ConfigDebugIgnoreFocusLoss_set_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, bool _swig_go_1) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  bool arg2 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->ConfigDebugIgnoreFocusLoss = arg2;
  
}


bool _wrap_ImGuiIO_ConfigDebugIgnoreFocusLoss_get_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  result = (bool) ((arg1)->ConfigDebugIgnoreFocusLoss);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiIO_ConfigDebugIniSettings_set_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, bool _swig_go_1) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  bool arg2 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->ConfigDebugIniSettings = arg2;
  
}


bool _wrap_ImGuiIO_ConfigDebugIniSettings_get_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  result = (bool) ((arg1)->ConfigDebugIniSettings);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiIO_BackendPlatformName_set_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, _gostring_ _swig_go_1) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if (arg2) {
      arg1->BackendPlatformName = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->BackendPlatformName, (const char *)arg2);
    } else {
      arg1->BackendPlatformName = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_ImGuiIO_BackendPlatformName_get_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BackendPlatformName);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_ImGuiIO_BackendRendererName_set_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, _gostring_ _swig_go_1) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if (arg2) {
      arg1->BackendRendererName = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->BackendRendererName, (const char *)arg2);
    } else {
      arg1->BackendRendererName = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_ImGuiIO_BackendRendererName_get_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  result = (char *) ((arg1)->BackendRendererName);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_ImGuiIO_BackendPlatformUserData_set_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, void *_swig_go_1) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  void *arg2 = (void *) 0 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  if (arg1) (arg1)->BackendPlatformUserData = arg2;
  
}


void *_wrap_ImGuiIO_BackendPlatformUserData_get_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  result = (void *) ((arg1)->BackendPlatformUserData);
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


void _wrap_ImGuiIO_BackendRendererUserData_set_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, void *_swig_go_1) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  void *arg2 = (void *) 0 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  if (arg1) (arg1)->BackendRendererUserData = arg2;
  
}


void *_wrap_ImGuiIO_BackendRendererUserData_get_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  result = (void *) ((arg1)->BackendRendererUserData);
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


void _wrap_ImGuiIO_BackendLanguageUserData_set_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, void *_swig_go_1) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  void *arg2 = (void *) 0 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  if (arg1) (arg1)->BackendLanguageUserData = arg2;
  
}


void *_wrap_ImGuiIO_BackendLanguageUserData_get_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  result = (void *) ((arg1)->BackendLanguageUserData);
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


void _wrap_ImGuiIO_AddKeyEvent_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, intgo _swig_go_1, bool _swig_go_2) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  ImGuiKey arg2 ;
  bool arg3 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  arg2 = (ImGuiKey)_swig_go_1; 
  arg3 = (bool)_swig_go_2; 
  
  (arg1)->AddKeyEvent(arg2,arg3);
  
}


void _wrap_ImGuiIO_AddKeyAnalogEvent_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, intgo _swig_go_1, bool _swig_go_2, float _swig_go_3) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  ImGuiKey arg2 ;
  bool arg3 ;
  float arg4 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  arg2 = (ImGuiKey)_swig_go_1; 
  arg3 = (bool)_swig_go_2; 
  arg4 = (float)_swig_go_3; 
  
  (arg1)->AddKeyAnalogEvent(arg2,arg3,arg4);
  
}


void _wrap_ImGuiIO_AddMousePosEvent_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, float _swig_go_1, float _swig_go_2) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  float arg2 ;
  float arg3 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  
  (arg1)->AddMousePosEvent(arg2,arg3);
  
}


void _wrap_ImGuiIO_AddMouseButtonEvent_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, intgo _swig_go_1, bool _swig_go_2) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  int arg2 ;
  bool arg3 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (bool)_swig_go_2; 
  
  (arg1)->AddMouseButtonEvent(arg2,arg3);
  
}


void _wrap_ImGuiIO_AddMouseWheelEvent_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, float _swig_go_1, float _swig_go_2) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  float arg2 ;
  float arg3 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  
  (arg1)->AddMouseWheelEvent(arg2,arg3);
  
}


void _wrap_ImGuiIO_AddMouseSourceEvent_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, intgo _swig_go_1) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  ImGuiMouseSource arg2 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  arg2 = (ImGuiMouseSource)_swig_go_1; 
  
  (arg1)->AddMouseSourceEvent(arg2);
  
}


void _wrap_ImGuiIO_AddFocusEvent_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, bool _swig_go_1) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  bool arg2 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  (arg1)->AddFocusEvent(arg2);
  
}


void _wrap_ImGuiIO_AddInputCharacter_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, intgo _swig_go_1) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  unsigned int arg2 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  (arg1)->AddInputCharacter(arg2);
  
}


void _wrap_ImGuiIO_AddInputCharacterUTF16_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, short _swig_go_1) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  ImWchar16 arg2 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  arg2 = (ImWchar16)_swig_go_1; 
  
  (arg1)->AddInputCharacterUTF16(arg2);
  
}


void _wrap_ImGuiIO_AddInputCharactersUTF8_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, _gostring_ _swig_go_1) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  (arg1)->AddInputCharactersUTF8((char const *)arg2);
  
  free(arg2); 
}


void _wrap_ImGuiIO_SetKeyEventNativeData__SWIG_0_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2, intgo _swig_go_3, intgo _swig_go_4) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  ImGuiKey arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  arg2 = (ImGuiKey)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  (arg1)->SetKeyEventNativeData(arg2,arg3,arg4,arg5);
  
}


void _wrap_ImGuiIO_SetKeyEventNativeData__SWIG_1_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2, intgo _swig_go_3) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  ImGuiKey arg2 ;
  int arg3 ;
  int arg4 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  arg2 = (ImGuiKey)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  (arg1)->SetKeyEventNativeData(arg2,arg3,arg4);
  
}


void _wrap_ImGuiIO_SetAppAcceptingEvents_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, bool _swig_go_1) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  bool arg2 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  (arg1)->SetAppAcceptingEvents(arg2);
  
}


void _wrap_ImGuiIO_ClearEventsQueue_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  (arg1)->ClearEventsQueue();
  
}


void _wrap_ImGuiIO_ClearInputKeys_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  (arg1)->ClearInputKeys();
  
}


void _wrap_ImGuiIO_ClearInputMouse_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  (arg1)->ClearInputMouse();
  
}


void _wrap_ImGuiIO_ClearInputCharacters_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  (arg1)->ClearInputCharacters();
  
}


void _wrap_ImGuiIO_WantCaptureMouse_set_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, bool _swig_go_1) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  bool arg2 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->WantCaptureMouse = arg2;
  
}


bool _wrap_ImGuiIO_WantCaptureMouse_get_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  result = (bool) ((arg1)->WantCaptureMouse);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiIO_WantCaptureKeyboard_set_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, bool _swig_go_1) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  bool arg2 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->WantCaptureKeyboard = arg2;
  
}


bool _wrap_ImGuiIO_WantCaptureKeyboard_get_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  result = (bool) ((arg1)->WantCaptureKeyboard);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiIO_WantTextInput_set_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, bool _swig_go_1) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  bool arg2 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->WantTextInput = arg2;
  
}


bool _wrap_ImGuiIO_WantTextInput_get_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  result = (bool) ((arg1)->WantTextInput);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiIO_WantSetMousePos_set_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, bool _swig_go_1) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  bool arg2 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->WantSetMousePos = arg2;
  
}


bool _wrap_ImGuiIO_WantSetMousePos_get_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  result = (bool) ((arg1)->WantSetMousePos);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiIO_WantSaveIniSettings_set_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, bool _swig_go_1) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  bool arg2 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->WantSaveIniSettings = arg2;
  
}


bool _wrap_ImGuiIO_WantSaveIniSettings_get_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  result = (bool) ((arg1)->WantSaveIniSettings);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiIO_NavActive_set_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, bool _swig_go_1) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  bool arg2 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->NavActive = arg2;
  
}


bool _wrap_ImGuiIO_NavActive_get_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  result = (bool) ((arg1)->NavActive);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiIO_NavVisible_set_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, bool _swig_go_1) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  bool arg2 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->NavVisible = arg2;
  
}


bool _wrap_ImGuiIO_NavVisible_get_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  result = (bool) ((arg1)->NavVisible);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiIO_Framerate_set_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, float _swig_go_1) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  float arg2 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->Framerate = arg2;
  
}


float _wrap_ImGuiIO_Framerate_get_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  result = (float) ((arg1)->Framerate);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiIO_MetricsRenderVertices_set_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, intgo _swig_go_1) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  int arg2 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->MetricsRenderVertices = arg2;
  
}


intgo _wrap_ImGuiIO_MetricsRenderVertices_get_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  result = (int) ((arg1)->MetricsRenderVertices);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiIO_MetricsRenderIndices_set_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, intgo _swig_go_1) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  int arg2 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->MetricsRenderIndices = arg2;
  
}


intgo _wrap_ImGuiIO_MetricsRenderIndices_get_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  result = (int) ((arg1)->MetricsRenderIndices);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiIO_MetricsRenderWindows_set_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, intgo _swig_go_1) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  int arg2 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->MetricsRenderWindows = arg2;
  
}


intgo _wrap_ImGuiIO_MetricsRenderWindows_get_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  result = (int) ((arg1)->MetricsRenderWindows);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiIO_MetricsActiveWindows_set_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, intgo _swig_go_1) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  int arg2 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->MetricsActiveWindows = arg2;
  
}


intgo _wrap_ImGuiIO_MetricsActiveWindows_get_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  result = (int) ((arg1)->MetricsActiveWindows);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiIO_MouseDelta_set_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, ImVec2 *_swig_go_1) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  ImVec2 *arg2 = (ImVec2 *) 0 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  
  if (arg1) (arg1)->MouseDelta = *arg2;
  
}


ImVec2 *_wrap_ImGuiIO_MouseDelta_get_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  ImVec2 *result = 0 ;
  ImVec2 *_swig_go_result;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  result = (ImVec2 *)& ((arg1)->MouseDelta);
  *(ImVec2 **)&_swig_go_result = (ImVec2 *)result; 
  return _swig_go_result;
}


void _wrap_ImGuiIO_Ctx_set_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, ImGuiContext *_swig_go_1) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  ImGuiContext *arg2 = (ImGuiContext *) 0 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  arg2 = *(ImGuiContext **)&_swig_go_1; 
  
  if (arg1) (arg1)->Ctx = arg2;
  
}


ImGuiContext *_wrap_ImGuiIO_Ctx_get_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  ImGuiContext *result = 0 ;
  ImGuiContext *_swig_go_result;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  result = (ImGuiContext *) ((arg1)->Ctx);
  *(ImGuiContext **)&_swig_go_result = (ImGuiContext *)result; 
  return _swig_go_result;
}


void _wrap_ImGuiIO_MousePos_set_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, ImVec2 *_swig_go_1) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  ImVec2 *arg2 = (ImVec2 *) 0 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  
  if (arg1) (arg1)->MousePos = *arg2;
  
}


ImVec2 *_wrap_ImGuiIO_MousePos_get_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  ImVec2 *result = 0 ;
  ImVec2 *_swig_go_result;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  result = (ImVec2 *)& ((arg1)->MousePos);
  *(ImVec2 **)&_swig_go_result = (ImVec2 *)result; 
  return _swig_go_result;
}


void _wrap_ImGuiIO_MouseDown_set_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, bool *_swig_go_1) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  bool *arg2 = (bool *) (bool *)0 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  arg2 = *(bool **)&_swig_go_1; 
  
  {
    size_t ii;
    bool *b = (bool *) arg1->MouseDown;
    for (ii = 0; ii < (size_t)5; ii++) b[ii] = *((bool *) arg2 + ii);
  }
  
}


bool *_wrap_ImGuiIO_MouseDown_get_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  bool *result = 0 ;
  bool *_swig_go_result;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  result = (bool *)(bool *) ((arg1)->MouseDown);
  *(bool **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiIO_MouseWheel_set_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, float _swig_go_1) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  float arg2 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->MouseWheel = arg2;
  
}


float _wrap_ImGuiIO_MouseWheel_get_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  result = (float) ((arg1)->MouseWheel);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiIO_MouseWheelH_set_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, float _swig_go_1) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  float arg2 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->MouseWheelH = arg2;
  
}


float _wrap_ImGuiIO_MouseWheelH_get_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  result = (float) ((arg1)->MouseWheelH);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiIO_MouseSource_set_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, intgo _swig_go_1) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  ImGuiMouseSource arg2 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  arg2 = (ImGuiMouseSource)_swig_go_1; 
  
  if (arg1) (arg1)->MouseSource = arg2;
  
}


intgo _wrap_ImGuiIO_MouseSource_get_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  ImGuiMouseSource result;
  intgo _swig_go_result;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  result = (ImGuiMouseSource) ((arg1)->MouseSource);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_ImGuiIO_KeyCtrl_set_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, bool _swig_go_1) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  bool arg2 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->KeyCtrl = arg2;
  
}


bool _wrap_ImGuiIO_KeyCtrl_get_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  result = (bool) ((arg1)->KeyCtrl);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiIO_KeyShift_set_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, bool _swig_go_1) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  bool arg2 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->KeyShift = arg2;
  
}


bool _wrap_ImGuiIO_KeyShift_get_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  result = (bool) ((arg1)->KeyShift);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiIO_KeyAlt_set_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, bool _swig_go_1) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  bool arg2 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->KeyAlt = arg2;
  
}


bool _wrap_ImGuiIO_KeyAlt_get_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  result = (bool) ((arg1)->KeyAlt);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiIO_KeySuper_set_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, bool _swig_go_1) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  bool arg2 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->KeySuper = arg2;
  
}


bool _wrap_ImGuiIO_KeySuper_get_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  result = (bool) ((arg1)->KeySuper);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiIO_KeyMods_set_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, intgo _swig_go_1) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  ImGuiKeyChord arg2 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  arg2 = (ImGuiKeyChord)_swig_go_1; 
  
  if (arg1) (arg1)->KeyMods = arg2;
  
}


intgo _wrap_ImGuiIO_KeyMods_get_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  ImGuiKeyChord result;
  intgo _swig_go_result;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  result = (ImGuiKeyChord) ((arg1)->KeyMods);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiIO_KeysData_set_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, ImGuiKeyData (*_swig_go_1)[ImGuiKey_KeysData_SIZE]) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  ImGuiKeyData *arg2 = (ImGuiKeyData *) (ImGuiKeyData *)0 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  arg2 = *(ImGuiKeyData **)&_swig_go_1; 
  
  {
    size_t ii;
    ImGuiKeyData *b = (ImGuiKeyData *) arg1->KeysData;
    for (ii = 0; ii < (size_t)ImGuiKey_KeysData_SIZE; ii++) b[ii] = *((ImGuiKeyData *) arg2 + ii);
  }
  
}


ImGuiKeyData (*_wrap_ImGuiIO_KeysData_get_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0))[ImGuiKey_KeysData_SIZE] {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  ImGuiKeyData *result = 0 ;
  ImGuiKeyData (*_swig_go_result)[ImGuiKey_KeysData_SIZE];
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  result = (ImGuiKeyData *)(ImGuiKeyData *) ((arg1)->KeysData);
  *(ImGuiKeyData **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiIO_WantCaptureMouseUnlessPopupClose_set_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, bool _swig_go_1) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  bool arg2 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->WantCaptureMouseUnlessPopupClose = arg2;
  
}


bool _wrap_ImGuiIO_WantCaptureMouseUnlessPopupClose_get_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  result = (bool) ((arg1)->WantCaptureMouseUnlessPopupClose);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiIO_MousePosPrev_set_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, ImVec2 *_swig_go_1) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  ImVec2 *arg2 = (ImVec2 *) 0 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  
  if (arg1) (arg1)->MousePosPrev = *arg2;
  
}


ImVec2 *_wrap_ImGuiIO_MousePosPrev_get_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  ImVec2 *result = 0 ;
  ImVec2 *_swig_go_result;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  result = (ImVec2 *)& ((arg1)->MousePosPrev);
  *(ImVec2 **)&_swig_go_result = (ImVec2 *)result; 
  return _swig_go_result;
}


void _wrap_ImGuiIO_MouseClickedPos_set_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, ImVec2 (*_swig_go_1)[5]) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  ImVec2 *arg2 = (ImVec2 *) (ImVec2 *)0 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  
  {
    size_t ii;
    ImVec2 *b = (ImVec2 *) arg1->MouseClickedPos;
    for (ii = 0; ii < (size_t)5; ii++) b[ii] = *((ImVec2 *) arg2 + ii);
  }
  
}


ImVec2 (*_wrap_ImGuiIO_MouseClickedPos_get_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0))[5] {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  ImVec2 *result = 0 ;
  ImVec2 (*_swig_go_result)[5];
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  result = (ImVec2 *)(ImVec2 *) ((arg1)->MouseClickedPos);
  *(ImVec2 **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiIO_MouseClickedTime_set_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, double *_swig_go_1) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  double *arg2 = (double *) (double *)0 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  arg2 = *(double **)&_swig_go_1; 
  
  {
    size_t ii;
    double *b = (double *) arg1->MouseClickedTime;
    for (ii = 0; ii < (size_t)5; ii++) b[ii] = *((double *) arg2 + ii);
  }
  
}


double *_wrap_ImGuiIO_MouseClickedTime_get_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  double *result = 0 ;
  double *_swig_go_result;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  result = (double *)(double *) ((arg1)->MouseClickedTime);
  *(double **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiIO_MouseClicked_set_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, bool *_swig_go_1) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  bool *arg2 = (bool *) (bool *)0 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  arg2 = *(bool **)&_swig_go_1; 
  
  {
    size_t ii;
    bool *b = (bool *) arg1->MouseClicked;
    for (ii = 0; ii < (size_t)5; ii++) b[ii] = *((bool *) arg2 + ii);
  }
  
}


bool *_wrap_ImGuiIO_MouseClicked_get_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  bool *result = 0 ;
  bool *_swig_go_result;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  result = (bool *)(bool *) ((arg1)->MouseClicked);
  *(bool **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiIO_MouseDoubleClicked_set_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, bool *_swig_go_1) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  bool *arg2 = (bool *) (bool *)0 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  arg2 = *(bool **)&_swig_go_1; 
  
  {
    size_t ii;
    bool *b = (bool *) arg1->MouseDoubleClicked;
    for (ii = 0; ii < (size_t)5; ii++) b[ii] = *((bool *) arg2 + ii);
  }
  
}


bool *_wrap_ImGuiIO_MouseDoubleClicked_get_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  bool *result = 0 ;
  bool *_swig_go_result;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  result = (bool *)(bool *) ((arg1)->MouseDoubleClicked);
  *(bool **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiIO_MouseClickedCount_set_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, short *_swig_go_1) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  ImU16 *arg2 = (ImU16 *) (ImU16 *)0 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  arg2 = *(ImU16 **)&_swig_go_1; 
  
  {
    size_t ii;
    ImU16 *b = (ImU16 *) arg1->MouseClickedCount;
    for (ii = 0; ii < (size_t)5; ii++) b[ii] = *((ImU16 *) arg2 + ii);
  }
  
}


short *_wrap_ImGuiIO_MouseClickedCount_get_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  ImU16 *result = 0 ;
  short *_swig_go_result;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  result = (ImU16 *)(ImU16 *) ((arg1)->MouseClickedCount);
  *(ImU16 **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiIO_MouseClickedLastCount_set_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, short *_swig_go_1) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  ImU16 *arg2 = (ImU16 *) (ImU16 *)0 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  arg2 = *(ImU16 **)&_swig_go_1; 
  
  {
    size_t ii;
    ImU16 *b = (ImU16 *) arg1->MouseClickedLastCount;
    for (ii = 0; ii < (size_t)5; ii++) b[ii] = *((ImU16 *) arg2 + ii);
  }
  
}


short *_wrap_ImGuiIO_MouseClickedLastCount_get_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  ImU16 *result = 0 ;
  short *_swig_go_result;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  result = (ImU16 *)(ImU16 *) ((arg1)->MouseClickedLastCount);
  *(ImU16 **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiIO_MouseReleased_set_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, bool *_swig_go_1) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  bool *arg2 = (bool *) (bool *)0 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  arg2 = *(bool **)&_swig_go_1; 
  
  {
    size_t ii;
    bool *b = (bool *) arg1->MouseReleased;
    for (ii = 0; ii < (size_t)5; ii++) b[ii] = *((bool *) arg2 + ii);
  }
  
}


bool *_wrap_ImGuiIO_MouseReleased_get_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  bool *result = 0 ;
  bool *_swig_go_result;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  result = (bool *)(bool *) ((arg1)->MouseReleased);
  *(bool **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiIO_MouseDownOwned_set_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, bool *_swig_go_1) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  bool *arg2 = (bool *) (bool *)0 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  arg2 = *(bool **)&_swig_go_1; 
  
  {
    size_t ii;
    bool *b = (bool *) arg1->MouseDownOwned;
    for (ii = 0; ii < (size_t)5; ii++) b[ii] = *((bool *) arg2 + ii);
  }
  
}


bool *_wrap_ImGuiIO_MouseDownOwned_get_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  bool *result = 0 ;
  bool *_swig_go_result;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  result = (bool *)(bool *) ((arg1)->MouseDownOwned);
  *(bool **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiIO_MouseDownOwnedUnlessPopupClose_set_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, bool *_swig_go_1) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  bool *arg2 = (bool *) (bool *)0 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  arg2 = *(bool **)&_swig_go_1; 
  
  {
    size_t ii;
    bool *b = (bool *) arg1->MouseDownOwnedUnlessPopupClose;
    for (ii = 0; ii < (size_t)5; ii++) b[ii] = *((bool *) arg2 + ii);
  }
  
}


bool *_wrap_ImGuiIO_MouseDownOwnedUnlessPopupClose_get_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  bool *result = 0 ;
  bool *_swig_go_result;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  result = (bool *)(bool *) ((arg1)->MouseDownOwnedUnlessPopupClose);
  *(bool **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiIO_MouseWheelRequestAxisSwap_set_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, bool _swig_go_1) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  bool arg2 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->MouseWheelRequestAxisSwap = arg2;
  
}


bool _wrap_ImGuiIO_MouseWheelRequestAxisSwap_get_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  result = (bool) ((arg1)->MouseWheelRequestAxisSwap);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiIO_MouseCtrlLeftAsRightClick_set_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, bool _swig_go_1) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  bool arg2 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->MouseCtrlLeftAsRightClick = arg2;
  
}


bool _wrap_ImGuiIO_MouseCtrlLeftAsRightClick_get_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  result = (bool) ((arg1)->MouseCtrlLeftAsRightClick);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiIO_MouseDownDuration_set_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, float *_swig_go_1) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  float *arg2 = (float *) (float *)0 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  arg2 = *(float **)&_swig_go_1; 
  
  {
    size_t ii;
    float *b = (float *) arg1->MouseDownDuration;
    for (ii = 0; ii < (size_t)5; ii++) b[ii] = *((float *) arg2 + ii);
  }
  
}


float *_wrap_ImGuiIO_MouseDownDuration_get_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  float *result = 0 ;
  float *_swig_go_result;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  result = (float *)(float *) ((arg1)->MouseDownDuration);
  *(float **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiIO_MouseDownDurationPrev_set_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, float *_swig_go_1) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  float *arg2 = (float *) (float *)0 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  arg2 = *(float **)&_swig_go_1; 
  
  {
    size_t ii;
    float *b = (float *) arg1->MouseDownDurationPrev;
    for (ii = 0; ii < (size_t)5; ii++) b[ii] = *((float *) arg2 + ii);
  }
  
}


float *_wrap_ImGuiIO_MouseDownDurationPrev_get_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  float *result = 0 ;
  float *_swig_go_result;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  result = (float *)(float *) ((arg1)->MouseDownDurationPrev);
  *(float **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiIO_MouseDragMaxDistanceSqr_set_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, float *_swig_go_1) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  float *arg2 = (float *) (float *)0 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  arg2 = *(float **)&_swig_go_1; 
  
  {
    size_t ii;
    float *b = (float *) arg1->MouseDragMaxDistanceSqr;
    for (ii = 0; ii < (size_t)5; ii++) b[ii] = *((float *) arg2 + ii);
  }
  
}


float *_wrap_ImGuiIO_MouseDragMaxDistanceSqr_get_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  float *result = 0 ;
  float *_swig_go_result;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  result = (float *)(float *) ((arg1)->MouseDragMaxDistanceSqr);
  *(float **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiIO_PenPressure_set_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, float _swig_go_1) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  float arg2 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->PenPressure = arg2;
  
}


float _wrap_ImGuiIO_PenPressure_get_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  result = (float) ((arg1)->PenPressure);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiIO_AppFocusLost_set_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, bool _swig_go_1) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  bool arg2 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->AppFocusLost = arg2;
  
}


bool _wrap_ImGuiIO_AppFocusLost_get_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  result = (bool) ((arg1)->AppFocusLost);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ImGuiIO_AppAcceptingEvents_get_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  result = (bool) ((arg1)->AppAcceptingEvents);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiIO_BackendUsingLegacyKeyArrays_set_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, char _swig_go_1) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  ImS8 arg2 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  arg2 = (ImS8)_swig_go_1; 
  
  if (arg1) (arg1)->BackendUsingLegacyKeyArrays = arg2;
  
}


char _wrap_ImGuiIO_BackendUsingLegacyKeyArrays_get_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  ImS8 result;
  char _swig_go_result;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  result = (ImS8) ((arg1)->BackendUsingLegacyKeyArrays);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiIO_BackendUsingLegacyNavInputArray_set_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, bool _swig_go_1) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  bool arg2 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->BackendUsingLegacyNavInputArray = arg2;
  
}


bool _wrap_ImGuiIO_BackendUsingLegacyNavInputArray_get_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  result = (bool) ((arg1)->BackendUsingLegacyNavInputArray);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiIO_InputQueueSurrogate_set_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, short _swig_go_1) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  ImWchar16 arg2 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  arg2 = (ImWchar16)_swig_go_1; 
  
  if (arg1) (arg1)->InputQueueSurrogate = arg2;
  
}


short _wrap_ImGuiIO_InputQueueSurrogate_get_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  ImWchar16 result;
  short _swig_go_result;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  result = (ImWchar16) ((arg1)->InputQueueSurrogate);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiIO_InputQueueCharacters_set_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, ImVector< unsigned short > *_swig_go_1) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  ImVector< ImWchar > *arg2 = (ImVector< ImWchar > *) 0 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  arg2 = *(ImVector< ImWchar > **)&_swig_go_1; 
  
  if (arg1) (arg1)->InputQueueCharacters = *arg2;
  
}


ImVector< unsigned short > *_wrap_ImGuiIO_InputQueueCharacters_get_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  ImVector< ImWchar > *result = 0 ;
  ImVector< unsigned short > *_swig_go_result;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  result = (ImVector< ImWchar > *)& ((arg1)->InputQueueCharacters);
  *(ImVector< ImWchar > **)&_swig_go_result = (ImVector< ImWchar > *)result; 
  return _swig_go_result;
}


void _wrap_ImGuiIO_KeyMap_set_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, intgo *_swig_go_1) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  int *arg2 = (int *) (int *)0 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  arg2 = *(int **)&_swig_go_1; 
  
  {
    size_t ii;
    int *b = (int *) arg1->KeyMap;
    for (ii = 0; ii < (size_t)ImGuiKey_COUNT; ii++) b[ii] = *((int *) arg2 + ii);
  }
  
}


intgo *_wrap_ImGuiIO_KeyMap_get_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  int *result = 0 ;
  intgo *_swig_go_result;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  result = (int *)(int *) ((arg1)->KeyMap);
  *(int **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiIO_KeysDown_set_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, bool *_swig_go_1) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  bool *arg2 = (bool *) (bool *)0 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  arg2 = *(bool **)&_swig_go_1; 
  
  {
    size_t ii;
    bool *b = (bool *) arg1->KeysDown;
    for (ii = 0; ii < (size_t)ImGuiKey_COUNT; ii++) b[ii] = *((bool *) arg2 + ii);
  }
  
}


bool *_wrap_ImGuiIO_KeysDown_get_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  bool *result = 0 ;
  bool *_swig_go_result;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  result = (bool *)(bool *) ((arg1)->KeysDown);
  *(bool **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiIO_NavInputs_set_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, float *_swig_go_1) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  float *arg2 = (float *) (float *)0 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  arg2 = *(float **)&_swig_go_1; 
  
  {
    size_t ii;
    float *b = (float *) arg1->NavInputs;
    for (ii = 0; ii < (size_t)ImGuiNavInput_COUNT; ii++) b[ii] = *((float *) arg2 + ii);
  }
  
}


float *_wrap_ImGuiIO_NavInputs_get_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  float *result = 0 ;
  float *_swig_go_result;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  result = (float *)(float *) ((arg1)->NavInputs);
  *(float **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiIO_GetClipboardTextFn_set_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, void* _swig_go_1) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  char *(*arg2)(void *) = (char *(*)(void *)) 0 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  arg2 = *(char *(**)(void *))&_swig_go_1; 
  
  if (arg1) (arg1)->GetClipboardTextFn = (char const *(*)(void *))arg2;
  
}


void* _wrap_ImGuiIO_GetClipboardTextFn_get_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  char *(*result)(void *) = 0 ;
  void* _swig_go_result;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  result = (char *(*)(void *)) ((arg1)->GetClipboardTextFn);
  *(char *(**)(void *))&_swig_go_result = (char *(*)(void *))result; 
  return _swig_go_result;
}


void _wrap_ImGuiIO_SetClipboardTextFn_set_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, void* _swig_go_1) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  void (*arg2)(void *,char const *) = (void (*)(void *,char const *)) 0 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  arg2 = *(void (**)(void *,char const *))&_swig_go_1; 
  
  if (arg1) (arg1)->SetClipboardTextFn = arg2;
  
}


void* _wrap_ImGuiIO_SetClipboardTextFn_get_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  void (*result)(void *,char const *) = 0 ;
  void* _swig_go_result;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  result = (void (*)(void *,char const *)) ((arg1)->SetClipboardTextFn);
  *(void (**)(void *,char const *))&_swig_go_result = (void (*)(void *,char const *))result; 
  return _swig_go_result;
}


void _wrap_ImGuiIO_ClipboardUserData_set_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0, void *_swig_go_1) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  void *arg2 = (void *) 0 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  if (arg1) (arg1)->ClipboardUserData = arg2;
  
}


void *_wrap_ImGuiIO_ClipboardUserData_get_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  result = (void *) ((arg1)->ClipboardUserData);
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


ImGuiIO *_wrap_new_ImGuiIO_imgui_568d46c1e1b4102a() {
  ImGuiIO *result = 0 ;
  ImGuiIO *_swig_go_result;
  
  
  result = (ImGuiIO *)new ImGuiIO();
  *(ImGuiIO **)&_swig_go_result = (ImGuiIO *)result; 
  return _swig_go_result;
}


void _wrap_delete_ImGuiIO_imgui_568d46c1e1b4102a(ImGuiIO *_swig_go_0) {
  ImGuiIO *arg1 = (ImGuiIO *) 0 ;
  
  arg1 = *(ImGuiIO **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_ImGuiInputTextCallbackData_Ctx_set_imgui_568d46c1e1b4102a(ImGuiInputTextCallbackData *_swig_go_0, ImGuiContext *_swig_go_1) {
  ImGuiInputTextCallbackData *arg1 = (ImGuiInputTextCallbackData *) 0 ;
  ImGuiContext *arg2 = (ImGuiContext *) 0 ;
  
  arg1 = *(ImGuiInputTextCallbackData **)&_swig_go_0; 
  arg2 = *(ImGuiContext **)&_swig_go_1; 
  
  if (arg1) (arg1)->Ctx = arg2;
  
}


ImGuiContext *_wrap_ImGuiInputTextCallbackData_Ctx_get_imgui_568d46c1e1b4102a(ImGuiInputTextCallbackData *_swig_go_0) {
  ImGuiInputTextCallbackData *arg1 = (ImGuiInputTextCallbackData *) 0 ;
  ImGuiContext *result = 0 ;
  ImGuiContext *_swig_go_result;
  
  arg1 = *(ImGuiInputTextCallbackData **)&_swig_go_0; 
  
  result = (ImGuiContext *) ((arg1)->Ctx);
  *(ImGuiContext **)&_swig_go_result = (ImGuiContext *)result; 
  return _swig_go_result;
}


void _wrap_ImGuiInputTextCallbackData_EventFlag_set_imgui_568d46c1e1b4102a(ImGuiInputTextCallbackData *_swig_go_0, intgo _swig_go_1) {
  ImGuiInputTextCallbackData *arg1 = (ImGuiInputTextCallbackData *) 0 ;
  ImGuiInputTextFlags arg2 ;
  
  arg1 = *(ImGuiInputTextCallbackData **)&_swig_go_0; 
  arg2 = (ImGuiInputTextFlags)_swig_go_1; 
  
  if (arg1) (arg1)->EventFlag = arg2;
  
}


intgo _wrap_ImGuiInputTextCallbackData_EventFlag_get_imgui_568d46c1e1b4102a(ImGuiInputTextCallbackData *_swig_go_0) {
  ImGuiInputTextCallbackData *arg1 = (ImGuiInputTextCallbackData *) 0 ;
  ImGuiInputTextFlags result;
  intgo _swig_go_result;
  
  arg1 = *(ImGuiInputTextCallbackData **)&_swig_go_0; 
  
  result = (ImGuiInputTextFlags) ((arg1)->EventFlag);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiInputTextCallbackData_Flags_set_imgui_568d46c1e1b4102a(ImGuiInputTextCallbackData *_swig_go_0, intgo _swig_go_1) {
  ImGuiInputTextCallbackData *arg1 = (ImGuiInputTextCallbackData *) 0 ;
  ImGuiInputTextFlags arg2 ;
  
  arg1 = *(ImGuiInputTextCallbackData **)&_swig_go_0; 
  arg2 = (ImGuiInputTextFlags)_swig_go_1; 
  
  if (arg1) (arg1)->Flags = arg2;
  
}


intgo _wrap_ImGuiInputTextCallbackData_Flags_get_imgui_568d46c1e1b4102a(ImGuiInputTextCallbackData *_swig_go_0) {
  ImGuiInputTextCallbackData *arg1 = (ImGuiInputTextCallbackData *) 0 ;
  ImGuiInputTextFlags result;
  intgo _swig_go_result;
  
  arg1 = *(ImGuiInputTextCallbackData **)&_swig_go_0; 
  
  result = (ImGuiInputTextFlags) ((arg1)->Flags);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiInputTextCallbackData_UserData_set_imgui_568d46c1e1b4102a(ImGuiInputTextCallbackData *_swig_go_0, void *_swig_go_1) {
  ImGuiInputTextCallbackData *arg1 = (ImGuiInputTextCallbackData *) 0 ;
  void *arg2 = (void *) 0 ;
  
  arg1 = *(ImGuiInputTextCallbackData **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  if (arg1) (arg1)->UserData = arg2;
  
}


void *_wrap_ImGuiInputTextCallbackData_UserData_get_imgui_568d46c1e1b4102a(ImGuiInputTextCallbackData *_swig_go_0) {
  ImGuiInputTextCallbackData *arg1 = (ImGuiInputTextCallbackData *) 0 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = *(ImGuiInputTextCallbackData **)&_swig_go_0; 
  
  result = (void *) ((arg1)->UserData);
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


void _wrap_ImGuiInputTextCallbackData_EventChar_set_imgui_568d46c1e1b4102a(ImGuiInputTextCallbackData *_swig_go_0, short _swig_go_1) {
  ImGuiInputTextCallbackData *arg1 = (ImGuiInputTextCallbackData *) 0 ;
  ImWchar arg2 ;
  
  arg1 = *(ImGuiInputTextCallbackData **)&_swig_go_0; 
  arg2 = (ImWchar)_swig_go_1; 
  
  if (arg1) (arg1)->EventChar = arg2;
  
}


short _wrap_ImGuiInputTextCallbackData_EventChar_get_imgui_568d46c1e1b4102a(ImGuiInputTextCallbackData *_swig_go_0) {
  ImGuiInputTextCallbackData *arg1 = (ImGuiInputTextCallbackData *) 0 ;
  ImWchar result;
  short _swig_go_result;
  
  arg1 = *(ImGuiInputTextCallbackData **)&_swig_go_0; 
  
  result = (ImWchar) ((arg1)->EventChar);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiInputTextCallbackData_EventKey_set_imgui_568d46c1e1b4102a(ImGuiInputTextCallbackData *_swig_go_0, intgo _swig_go_1) {
  ImGuiInputTextCallbackData *arg1 = (ImGuiInputTextCallbackData *) 0 ;
  ImGuiKey arg2 ;
  
  arg1 = *(ImGuiInputTextCallbackData **)&_swig_go_0; 
  arg2 = (ImGuiKey)_swig_go_1; 
  
  if (arg1) (arg1)->EventKey = arg2;
  
}


intgo _wrap_ImGuiInputTextCallbackData_EventKey_get_imgui_568d46c1e1b4102a(ImGuiInputTextCallbackData *_swig_go_0) {
  ImGuiInputTextCallbackData *arg1 = (ImGuiInputTextCallbackData *) 0 ;
  ImGuiKey result;
  intgo _swig_go_result;
  
  arg1 = *(ImGuiInputTextCallbackData **)&_swig_go_0; 
  
  result = (ImGuiKey) ((arg1)->EventKey);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_ImGuiInputTextCallbackData_Buf_set_imgui_568d46c1e1b4102a(ImGuiInputTextCallbackData *_swig_go_0, _gostring_ _swig_go_1) {
  ImGuiInputTextCallbackData *arg1 = (ImGuiInputTextCallbackData *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = *(ImGuiInputTextCallbackData **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    delete [] arg1->Buf;
    if (arg2) {
      arg1->Buf = (char *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->Buf, (const char *)arg2);
    } else {
      arg1->Buf = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_ImGuiInputTextCallbackData_Buf_get_imgui_568d46c1e1b4102a(ImGuiInputTextCallbackData *_swig_go_0) {
  ImGuiInputTextCallbackData *arg1 = (ImGuiInputTextCallbackData *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(ImGuiInputTextCallbackData **)&_swig_go_0; 
  
  result = (char *) ((arg1)->Buf);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_ImGuiInputTextCallbackData_BufTextLen_set_imgui_568d46c1e1b4102a(ImGuiInputTextCallbackData *_swig_go_0, intgo _swig_go_1) {
  ImGuiInputTextCallbackData *arg1 = (ImGuiInputTextCallbackData *) 0 ;
  int arg2 ;
  
  arg1 = *(ImGuiInputTextCallbackData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->BufTextLen = arg2;
  
}


intgo _wrap_ImGuiInputTextCallbackData_BufTextLen_get_imgui_568d46c1e1b4102a(ImGuiInputTextCallbackData *_swig_go_0) {
  ImGuiInputTextCallbackData *arg1 = (ImGuiInputTextCallbackData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(ImGuiInputTextCallbackData **)&_swig_go_0; 
  
  result = (int) ((arg1)->BufTextLen);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiInputTextCallbackData_BufSize_set_imgui_568d46c1e1b4102a(ImGuiInputTextCallbackData *_swig_go_0, intgo _swig_go_1) {
  ImGuiInputTextCallbackData *arg1 = (ImGuiInputTextCallbackData *) 0 ;
  int arg2 ;
  
  arg1 = *(ImGuiInputTextCallbackData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->BufSize = arg2;
  
}


intgo _wrap_ImGuiInputTextCallbackData_BufSize_get_imgui_568d46c1e1b4102a(ImGuiInputTextCallbackData *_swig_go_0) {
  ImGuiInputTextCallbackData *arg1 = (ImGuiInputTextCallbackData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(ImGuiInputTextCallbackData **)&_swig_go_0; 
  
  result = (int) ((arg1)->BufSize);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiInputTextCallbackData_BufDirty_set_imgui_568d46c1e1b4102a(ImGuiInputTextCallbackData *_swig_go_0, bool _swig_go_1) {
  ImGuiInputTextCallbackData *arg1 = (ImGuiInputTextCallbackData *) 0 ;
  bool arg2 ;
  
  arg1 = *(ImGuiInputTextCallbackData **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->BufDirty = arg2;
  
}


bool _wrap_ImGuiInputTextCallbackData_BufDirty_get_imgui_568d46c1e1b4102a(ImGuiInputTextCallbackData *_swig_go_0) {
  ImGuiInputTextCallbackData *arg1 = (ImGuiInputTextCallbackData *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ImGuiInputTextCallbackData **)&_swig_go_0; 
  
  result = (bool) ((arg1)->BufDirty);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiInputTextCallbackData_CursorPos_set_imgui_568d46c1e1b4102a(ImGuiInputTextCallbackData *_swig_go_0, intgo _swig_go_1) {
  ImGuiInputTextCallbackData *arg1 = (ImGuiInputTextCallbackData *) 0 ;
  int arg2 ;
  
  arg1 = *(ImGuiInputTextCallbackData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->CursorPos = arg2;
  
}


intgo _wrap_ImGuiInputTextCallbackData_CursorPos_get_imgui_568d46c1e1b4102a(ImGuiInputTextCallbackData *_swig_go_0) {
  ImGuiInputTextCallbackData *arg1 = (ImGuiInputTextCallbackData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(ImGuiInputTextCallbackData **)&_swig_go_0; 
  
  result = (int) ((arg1)->CursorPos);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiInputTextCallbackData_SelectionStart_set_imgui_568d46c1e1b4102a(ImGuiInputTextCallbackData *_swig_go_0, intgo _swig_go_1) {
  ImGuiInputTextCallbackData *arg1 = (ImGuiInputTextCallbackData *) 0 ;
  int arg2 ;
  
  arg1 = *(ImGuiInputTextCallbackData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->SelectionStart = arg2;
  
}


intgo _wrap_ImGuiInputTextCallbackData_SelectionStart_get_imgui_568d46c1e1b4102a(ImGuiInputTextCallbackData *_swig_go_0) {
  ImGuiInputTextCallbackData *arg1 = (ImGuiInputTextCallbackData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(ImGuiInputTextCallbackData **)&_swig_go_0; 
  
  result = (int) ((arg1)->SelectionStart);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiInputTextCallbackData_SelectionEnd_set_imgui_568d46c1e1b4102a(ImGuiInputTextCallbackData *_swig_go_0, intgo _swig_go_1) {
  ImGuiInputTextCallbackData *arg1 = (ImGuiInputTextCallbackData *) 0 ;
  int arg2 ;
  
  arg1 = *(ImGuiInputTextCallbackData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->SelectionEnd = arg2;
  
}


intgo _wrap_ImGuiInputTextCallbackData_SelectionEnd_get_imgui_568d46c1e1b4102a(ImGuiInputTextCallbackData *_swig_go_0) {
  ImGuiInputTextCallbackData *arg1 = (ImGuiInputTextCallbackData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(ImGuiInputTextCallbackData **)&_swig_go_0; 
  
  result = (int) ((arg1)->SelectionEnd);
  _swig_go_result = result; 
  return _swig_go_result;
}


ImGuiInputTextCallbackData *_wrap_new_ImGuiInputTextCallbackData_imgui_568d46c1e1b4102a() {
  ImGuiInputTextCallbackData *result = 0 ;
  ImGuiInputTextCallbackData *_swig_go_result;
  
  
  result = (ImGuiInputTextCallbackData *)new ImGuiInputTextCallbackData();
  *(ImGuiInputTextCallbackData **)&_swig_go_result = (ImGuiInputTextCallbackData *)result; 
  return _swig_go_result;
}


void _wrap_ImGuiInputTextCallbackData_DeleteChars_imgui_568d46c1e1b4102a(ImGuiInputTextCallbackData *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  ImGuiInputTextCallbackData *arg1 = (ImGuiInputTextCallbackData *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = *(ImGuiInputTextCallbackData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  (arg1)->DeleteChars(arg2,arg3);
  
}


void _wrap_ImGuiInputTextCallbackData_InsertChars__SWIG_0_imgui_568d46c1e1b4102a(ImGuiInputTextCallbackData *_swig_go_0, intgo _swig_go_1, _gostring_ _swig_go_2, _gostring_ _swig_go_3) {
  ImGuiInputTextCallbackData *arg1 = (ImGuiInputTextCallbackData *) 0 ;
  int arg2 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  
  arg1 = *(ImGuiInputTextCallbackData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  
  (arg1)->InsertChars(arg2,(char const *)arg3,(char const *)arg4);
  
  free(arg3); 
  free(arg4); 
}


void _wrap_ImGuiInputTextCallbackData_InsertChars__SWIG_1_imgui_568d46c1e1b4102a(ImGuiInputTextCallbackData *_swig_go_0, intgo _swig_go_1, _gostring_ _swig_go_2) {
  ImGuiInputTextCallbackData *arg1 = (ImGuiInputTextCallbackData *) 0 ;
  int arg2 ;
  char *arg3 = (char *) 0 ;
  
  arg1 = *(ImGuiInputTextCallbackData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  (arg1)->InsertChars(arg2,(char const *)arg3);
  
  free(arg3); 
}


void _wrap_ImGuiInputTextCallbackData_SelectAll_imgui_568d46c1e1b4102a(ImGuiInputTextCallbackData *_swig_go_0) {
  ImGuiInputTextCallbackData *arg1 = (ImGuiInputTextCallbackData *) 0 ;
  
  arg1 = *(ImGuiInputTextCallbackData **)&_swig_go_0; 
  
  (arg1)->SelectAll();
  
}


void _wrap_ImGuiInputTextCallbackData_ClearSelection_imgui_568d46c1e1b4102a(ImGuiInputTextCallbackData *_swig_go_0) {
  ImGuiInputTextCallbackData *arg1 = (ImGuiInputTextCallbackData *) 0 ;
  
  arg1 = *(ImGuiInputTextCallbackData **)&_swig_go_0; 
  
  (arg1)->ClearSelection();
  
}


bool _wrap_ImGuiInputTextCallbackData_HasSelection_imgui_568d46c1e1b4102a(ImGuiInputTextCallbackData *_swig_go_0) {
  ImGuiInputTextCallbackData *arg1 = (ImGuiInputTextCallbackData *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ImGuiInputTextCallbackData **)&_swig_go_0; 
  
  result = (bool)((ImGuiInputTextCallbackData const *)arg1)->HasSelection();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_ImGuiInputTextCallbackData_imgui_568d46c1e1b4102a(ImGuiInputTextCallbackData *_swig_go_0) {
  ImGuiInputTextCallbackData *arg1 = (ImGuiInputTextCallbackData *) 0 ;
  
  arg1 = *(ImGuiInputTextCallbackData **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_ImGuiSizeCallbackData_UserData_set_imgui_568d46c1e1b4102a(ImGuiSizeCallbackData *_swig_go_0, void *_swig_go_1) {
  ImGuiSizeCallbackData *arg1 = (ImGuiSizeCallbackData *) 0 ;
  void *arg2 = (void *) 0 ;
  
  arg1 = *(ImGuiSizeCallbackData **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  if (arg1) (arg1)->UserData = arg2;
  
}


void *_wrap_ImGuiSizeCallbackData_UserData_get_imgui_568d46c1e1b4102a(ImGuiSizeCallbackData *_swig_go_0) {
  ImGuiSizeCallbackData *arg1 = (ImGuiSizeCallbackData *) 0 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = *(ImGuiSizeCallbackData **)&_swig_go_0; 
  
  result = (void *) ((arg1)->UserData);
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


void _wrap_ImGuiSizeCallbackData_Pos_set_imgui_568d46c1e1b4102a(ImGuiSizeCallbackData *_swig_go_0, ImVec2 *_swig_go_1) {
  ImGuiSizeCallbackData *arg1 = (ImGuiSizeCallbackData *) 0 ;
  ImVec2 *arg2 = (ImVec2 *) 0 ;
  
  arg1 = *(ImGuiSizeCallbackData **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  
  if (arg1) (arg1)->Pos = *arg2;
  
}


ImVec2 *_wrap_ImGuiSizeCallbackData_Pos_get_imgui_568d46c1e1b4102a(ImGuiSizeCallbackData *_swig_go_0) {
  ImGuiSizeCallbackData *arg1 = (ImGuiSizeCallbackData *) 0 ;
  ImVec2 *result = 0 ;
  ImVec2 *_swig_go_result;
  
  arg1 = *(ImGuiSizeCallbackData **)&_swig_go_0; 
  
  result = (ImVec2 *)& ((arg1)->Pos);
  *(ImVec2 **)&_swig_go_result = (ImVec2 *)result; 
  return _swig_go_result;
}


void _wrap_ImGuiSizeCallbackData_CurrentSize_set_imgui_568d46c1e1b4102a(ImGuiSizeCallbackData *_swig_go_0, ImVec2 *_swig_go_1) {
  ImGuiSizeCallbackData *arg1 = (ImGuiSizeCallbackData *) 0 ;
  ImVec2 *arg2 = (ImVec2 *) 0 ;
  
  arg1 = *(ImGuiSizeCallbackData **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  
  if (arg1) (arg1)->CurrentSize = *arg2;
  
}


ImVec2 *_wrap_ImGuiSizeCallbackData_CurrentSize_get_imgui_568d46c1e1b4102a(ImGuiSizeCallbackData *_swig_go_0) {
  ImGuiSizeCallbackData *arg1 = (ImGuiSizeCallbackData *) 0 ;
  ImVec2 *result = 0 ;
  ImVec2 *_swig_go_result;
  
  arg1 = *(ImGuiSizeCallbackData **)&_swig_go_0; 
  
  result = (ImVec2 *)& ((arg1)->CurrentSize);
  *(ImVec2 **)&_swig_go_result = (ImVec2 *)result; 
  return _swig_go_result;
}


void _wrap_ImGuiSizeCallbackData_DesiredSize_set_imgui_568d46c1e1b4102a(ImGuiSizeCallbackData *_swig_go_0, ImVec2 *_swig_go_1) {
  ImGuiSizeCallbackData *arg1 = (ImGuiSizeCallbackData *) 0 ;
  ImVec2 *arg2 = (ImVec2 *) 0 ;
  
  arg1 = *(ImGuiSizeCallbackData **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  
  if (arg1) (arg1)->DesiredSize = *arg2;
  
}


ImVec2 *_wrap_ImGuiSizeCallbackData_DesiredSize_get_imgui_568d46c1e1b4102a(ImGuiSizeCallbackData *_swig_go_0) {
  ImGuiSizeCallbackData *arg1 = (ImGuiSizeCallbackData *) 0 ;
  ImVec2 *result = 0 ;
  ImVec2 *_swig_go_result;
  
  arg1 = *(ImGuiSizeCallbackData **)&_swig_go_0; 
  
  result = (ImVec2 *)& ((arg1)->DesiredSize);
  *(ImVec2 **)&_swig_go_result = (ImVec2 *)result; 
  return _swig_go_result;
}


ImGuiSizeCallbackData *_wrap_new_ImGuiSizeCallbackData_imgui_568d46c1e1b4102a() {
  ImGuiSizeCallbackData *result = 0 ;
  ImGuiSizeCallbackData *_swig_go_result;
  
  
  result = (ImGuiSizeCallbackData *)new ImGuiSizeCallbackData();
  *(ImGuiSizeCallbackData **)&_swig_go_result = (ImGuiSizeCallbackData *)result; 
  return _swig_go_result;
}


void _wrap_delete_ImGuiSizeCallbackData_imgui_568d46c1e1b4102a(ImGuiSizeCallbackData *_swig_go_0) {
  ImGuiSizeCallbackData *arg1 = (ImGuiSizeCallbackData *) 0 ;
  
  arg1 = *(ImGuiSizeCallbackData **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_ImGuiPayload_Data_set_imgui_568d46c1e1b4102a(ImGuiPayload *_swig_go_0, void *_swig_go_1) {
  ImGuiPayload *arg1 = (ImGuiPayload *) 0 ;
  void *arg2 = (void *) 0 ;
  
  arg1 = *(ImGuiPayload **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  if (arg1) (arg1)->Data = arg2;
  
}


void *_wrap_ImGuiPayload_Data_get_imgui_568d46c1e1b4102a(ImGuiPayload *_swig_go_0) {
  ImGuiPayload *arg1 = (ImGuiPayload *) 0 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = *(ImGuiPayload **)&_swig_go_0; 
  
  result = (void *) ((arg1)->Data);
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


void _wrap_ImGuiPayload_DataSize_set_imgui_568d46c1e1b4102a(ImGuiPayload *_swig_go_0, intgo _swig_go_1) {
  ImGuiPayload *arg1 = (ImGuiPayload *) 0 ;
  int arg2 ;
  
  arg1 = *(ImGuiPayload **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->DataSize = arg2;
  
}


intgo _wrap_ImGuiPayload_DataSize_get_imgui_568d46c1e1b4102a(ImGuiPayload *_swig_go_0) {
  ImGuiPayload *arg1 = (ImGuiPayload *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(ImGuiPayload **)&_swig_go_0; 
  
  result = (int) ((arg1)->DataSize);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiPayload_SourceId_set_imgui_568d46c1e1b4102a(ImGuiPayload *_swig_go_0, intgo _swig_go_1) {
  ImGuiPayload *arg1 = (ImGuiPayload *) 0 ;
  ImGuiID arg2 ;
  
  arg1 = *(ImGuiPayload **)&_swig_go_0; 
  arg2 = (ImGuiID)_swig_go_1; 
  
  if (arg1) (arg1)->SourceId = arg2;
  
}


intgo _wrap_ImGuiPayload_SourceId_get_imgui_568d46c1e1b4102a(ImGuiPayload *_swig_go_0) {
  ImGuiPayload *arg1 = (ImGuiPayload *) 0 ;
  ImGuiID result;
  intgo _swig_go_result;
  
  arg1 = *(ImGuiPayload **)&_swig_go_0; 
  
  result = (ImGuiID) ((arg1)->SourceId);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiPayload_SourceParentId_set_imgui_568d46c1e1b4102a(ImGuiPayload *_swig_go_0, intgo _swig_go_1) {
  ImGuiPayload *arg1 = (ImGuiPayload *) 0 ;
  ImGuiID arg2 ;
  
  arg1 = *(ImGuiPayload **)&_swig_go_0; 
  arg2 = (ImGuiID)_swig_go_1; 
  
  if (arg1) (arg1)->SourceParentId = arg2;
  
}


intgo _wrap_ImGuiPayload_SourceParentId_get_imgui_568d46c1e1b4102a(ImGuiPayload *_swig_go_0) {
  ImGuiPayload *arg1 = (ImGuiPayload *) 0 ;
  ImGuiID result;
  intgo _swig_go_result;
  
  arg1 = *(ImGuiPayload **)&_swig_go_0; 
  
  result = (ImGuiID) ((arg1)->SourceParentId);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiPayload_DataFrameCount_set_imgui_568d46c1e1b4102a(ImGuiPayload *_swig_go_0, intgo _swig_go_1) {
  ImGuiPayload *arg1 = (ImGuiPayload *) 0 ;
  int arg2 ;
  
  arg1 = *(ImGuiPayload **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->DataFrameCount = arg2;
  
}


intgo _wrap_ImGuiPayload_DataFrameCount_get_imgui_568d46c1e1b4102a(ImGuiPayload *_swig_go_0) {
  ImGuiPayload *arg1 = (ImGuiPayload *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(ImGuiPayload **)&_swig_go_0; 
  
  result = (int) ((arg1)->DataFrameCount);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiPayload_DataType_set_imgui_568d46c1e1b4102a(ImGuiPayload *_swig_go_0, _gostring_ _swig_go_1) {
  ImGuiPayload *arg1 = (ImGuiPayload *) 0 ;
  char *arg2 = (char *) (char *)0 ;
  
  arg1 = *(ImGuiPayload **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->DataType, (const char *)arg2, 32+1-1);
      arg1->DataType[32+1-1] = 0;
    } else {
      arg1->DataType[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_ImGuiPayload_DataType_get_imgui_568d46c1e1b4102a(ImGuiPayload *_swig_go_0) {
  ImGuiPayload *arg1 = (ImGuiPayload *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(ImGuiPayload **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->DataType);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_ImGuiPayload_Preview_set_imgui_568d46c1e1b4102a(ImGuiPayload *_swig_go_0, bool _swig_go_1) {
  ImGuiPayload *arg1 = (ImGuiPayload *) 0 ;
  bool arg2 ;
  
  arg1 = *(ImGuiPayload **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->Preview = arg2;
  
}


bool _wrap_ImGuiPayload_Preview_get_imgui_568d46c1e1b4102a(ImGuiPayload *_swig_go_0) {
  ImGuiPayload *arg1 = (ImGuiPayload *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ImGuiPayload **)&_swig_go_0; 
  
  result = (bool) ((arg1)->Preview);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiPayload_Delivery_set_imgui_568d46c1e1b4102a(ImGuiPayload *_swig_go_0, bool _swig_go_1) {
  ImGuiPayload *arg1 = (ImGuiPayload *) 0 ;
  bool arg2 ;
  
  arg1 = *(ImGuiPayload **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->Delivery = arg2;
  
}


bool _wrap_ImGuiPayload_Delivery_get_imgui_568d46c1e1b4102a(ImGuiPayload *_swig_go_0) {
  ImGuiPayload *arg1 = (ImGuiPayload *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ImGuiPayload **)&_swig_go_0; 
  
  result = (bool) ((arg1)->Delivery);
  _swig_go_result = result; 
  return _swig_go_result;
}


ImGuiPayload *_wrap_new_ImGuiPayload_imgui_568d46c1e1b4102a() {
  ImGuiPayload *result = 0 ;
  ImGuiPayload *_swig_go_result;
  
  
  result = (ImGuiPayload *)new ImGuiPayload();
  *(ImGuiPayload **)&_swig_go_result = (ImGuiPayload *)result; 
  return _swig_go_result;
}


void _wrap_ImGuiPayload_Clear_imgui_568d46c1e1b4102a(ImGuiPayload *_swig_go_0) {
  ImGuiPayload *arg1 = (ImGuiPayload *) 0 ;
  
  arg1 = *(ImGuiPayload **)&_swig_go_0; 
  
  (arg1)->Clear();
  
}


bool _wrap_ImGuiPayload_IsDataType_imgui_568d46c1e1b4102a(ImGuiPayload *_swig_go_0, _gostring_ _swig_go_1) {
  ImGuiPayload *arg1 = (ImGuiPayload *) 0 ;
  char *arg2 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ImGuiPayload **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  result = (bool)((ImGuiPayload const *)arg1)->IsDataType((char const *)arg2);
  _swig_go_result = result; 
  free(arg2); 
  return _swig_go_result;
}


bool _wrap_ImGuiPayload_IsPreview_imgui_568d46c1e1b4102a(ImGuiPayload *_swig_go_0) {
  ImGuiPayload *arg1 = (ImGuiPayload *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ImGuiPayload **)&_swig_go_0; 
  
  result = (bool)((ImGuiPayload const *)arg1)->IsPreview();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ImGuiPayload_IsDelivery_imgui_568d46c1e1b4102a(ImGuiPayload *_swig_go_0) {
  ImGuiPayload *arg1 = (ImGuiPayload *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ImGuiPayload **)&_swig_go_0; 
  
  result = (bool)((ImGuiPayload const *)arg1)->IsDelivery();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_ImGuiPayload_imgui_568d46c1e1b4102a(ImGuiPayload *_swig_go_0) {
  ImGuiPayload *arg1 = (ImGuiPayload *) 0 ;
  
  arg1 = *(ImGuiPayload **)&_swig_go_0; 
  
  delete arg1;
  
}


ImGuiOnceUponAFrame *_wrap_new_ImGuiOnceUponAFrame_imgui_568d46c1e1b4102a() {
  ImGuiOnceUponAFrame *result = 0 ;
  ImGuiOnceUponAFrame *_swig_go_result;
  
  
  result = (ImGuiOnceUponAFrame *)new ImGuiOnceUponAFrame();
  *(ImGuiOnceUponAFrame **)&_swig_go_result = (ImGuiOnceUponAFrame *)result; 
  return _swig_go_result;
}


void _wrap_ImGuiOnceUponAFrame_RefFrame_set_imgui_568d46c1e1b4102a(ImGuiOnceUponAFrame *_swig_go_0, intgo _swig_go_1) {
  ImGuiOnceUponAFrame *arg1 = (ImGuiOnceUponAFrame *) 0 ;
  int arg2 ;
  
  arg1 = *(ImGuiOnceUponAFrame **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->RefFrame = arg2;
  
}


intgo _wrap_ImGuiOnceUponAFrame_RefFrame_get_imgui_568d46c1e1b4102a(ImGuiOnceUponAFrame *_swig_go_0) {
  ImGuiOnceUponAFrame *arg1 = (ImGuiOnceUponAFrame *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(ImGuiOnceUponAFrame **)&_swig_go_0; 
  
  result = (int) ((arg1)->RefFrame);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_ImGuiOnceUponAFrame_imgui_568d46c1e1b4102a(ImGuiOnceUponAFrame *_swig_go_0) {
  ImGuiOnceUponAFrame *arg1 = (ImGuiOnceUponAFrame *) 0 ;
  
  arg1 = *(ImGuiOnceUponAFrame **)&_swig_go_0; 
  
  delete arg1;
  
}


ImGuiTextFilter *_wrap_new_ImGuiTextFilter__SWIG_0_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0) {
  char *arg1 = (char *) 0 ;
  ImGuiTextFilter *result = 0 ;
  ImGuiTextFilter *_swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  result = (ImGuiTextFilter *)new ImGuiTextFilter((char const *)arg1);
  *(ImGuiTextFilter **)&_swig_go_result = (ImGuiTextFilter *)result; 
  free(arg1); 
  return _swig_go_result;
}


ImGuiTextFilter *_wrap_new_ImGuiTextFilter__SWIG_1_imgui_568d46c1e1b4102a() {
  ImGuiTextFilter *result = 0 ;
  ImGuiTextFilter *_swig_go_result;
  
  
  result = (ImGuiTextFilter *)new ImGuiTextFilter();
  *(ImGuiTextFilter **)&_swig_go_result = (ImGuiTextFilter *)result; 
  return _swig_go_result;
}


bool _wrap_ImGuiTextFilter_Draw__SWIG_0_imgui_568d46c1e1b4102a(ImGuiTextFilter *_swig_go_0, _gostring_ _swig_go_1, float _swig_go_2) {
  ImGuiTextFilter *arg1 = (ImGuiTextFilter *) 0 ;
  char *arg2 = (char *) 0 ;
  float arg3 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ImGuiTextFilter **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (float)_swig_go_2; 
  
  result = (bool)(arg1)->Draw((char const *)arg2,arg3);
  _swig_go_result = result; 
  free(arg2); 
  return _swig_go_result;
}


bool _wrap_ImGuiTextFilter_Draw__SWIG_1_imgui_568d46c1e1b4102a(ImGuiTextFilter *_swig_go_0, _gostring_ _swig_go_1) {
  ImGuiTextFilter *arg1 = (ImGuiTextFilter *) 0 ;
  char *arg2 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ImGuiTextFilter **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  result = (bool)(arg1)->Draw((char const *)arg2);
  _swig_go_result = result; 
  free(arg2); 
  return _swig_go_result;
}


bool _wrap_ImGuiTextFilter_Draw__SWIG_2_imgui_568d46c1e1b4102a(ImGuiTextFilter *_swig_go_0) {
  ImGuiTextFilter *arg1 = (ImGuiTextFilter *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ImGuiTextFilter **)&_swig_go_0; 
  
  result = (bool)(arg1)->Draw();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ImGuiTextFilter_PassFilter__SWIG_0_imgui_568d46c1e1b4102a(ImGuiTextFilter *_swig_go_0, _gostring_ _swig_go_1, _gostring_ _swig_go_2) {
  ImGuiTextFilter *arg1 = (ImGuiTextFilter *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ImGuiTextFilter **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  result = (bool)((ImGuiTextFilter const *)arg1)->PassFilter((char const *)arg2,(char const *)arg3);
  _swig_go_result = result; 
  free(arg2); 
  free(arg3); 
  return _swig_go_result;
}


bool _wrap_ImGuiTextFilter_PassFilter__SWIG_1_imgui_568d46c1e1b4102a(ImGuiTextFilter *_swig_go_0, _gostring_ _swig_go_1) {
  ImGuiTextFilter *arg1 = (ImGuiTextFilter *) 0 ;
  char *arg2 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ImGuiTextFilter **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  result = (bool)((ImGuiTextFilter const *)arg1)->PassFilter((char const *)arg2);
  _swig_go_result = result; 
  free(arg2); 
  return _swig_go_result;
}


void _wrap_ImGuiTextFilter_Build_imgui_568d46c1e1b4102a(ImGuiTextFilter *_swig_go_0) {
  ImGuiTextFilter *arg1 = (ImGuiTextFilter *) 0 ;
  
  arg1 = *(ImGuiTextFilter **)&_swig_go_0; 
  
  (arg1)->Build();
  
}


void _wrap_ImGuiTextFilter_Clear_imgui_568d46c1e1b4102a(ImGuiTextFilter *_swig_go_0) {
  ImGuiTextFilter *arg1 = (ImGuiTextFilter *) 0 ;
  
  arg1 = *(ImGuiTextFilter **)&_swig_go_0; 
  
  (arg1)->Clear();
  
}


bool _wrap_ImGuiTextFilter_IsActive_imgui_568d46c1e1b4102a(ImGuiTextFilter *_swig_go_0) {
  ImGuiTextFilter *arg1 = (ImGuiTextFilter *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ImGuiTextFilter **)&_swig_go_0; 
  
  result = (bool)((ImGuiTextFilter const *)arg1)->IsActive();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiTextFilter_InputBuf_set_imgui_568d46c1e1b4102a(ImGuiTextFilter *_swig_go_0, _gostring_ _swig_go_1) {
  ImGuiTextFilter *arg1 = (ImGuiTextFilter *) 0 ;
  char *arg2 = (char *) (char *)0 ;
  
  arg1 = *(ImGuiTextFilter **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->InputBuf, (const char *)arg2, 256-1);
      arg1->InputBuf[256-1] = 0;
    } else {
      arg1->InputBuf[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_ImGuiTextFilter_InputBuf_get_imgui_568d46c1e1b4102a(ImGuiTextFilter *_swig_go_0) {
  ImGuiTextFilter *arg1 = (ImGuiTextFilter *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(ImGuiTextFilter **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->InputBuf);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_ImGuiTextFilter_Filters_set_imgui_568d46c1e1b4102a(ImGuiTextFilter *_swig_go_0, ImVector< ImGuiTextFilter::ImGuiTextRange > *_swig_go_1) {
  ImGuiTextFilter *arg1 = (ImGuiTextFilter *) 0 ;
  ImVector< ImGuiTextFilter::ImGuiTextRange > *arg2 = (ImVector< ImGuiTextFilter::ImGuiTextRange > *) 0 ;
  
  arg1 = *(ImGuiTextFilter **)&_swig_go_0; 
  arg2 = *(ImVector< ImGuiTextFilter::ImGuiTextRange > **)&_swig_go_1; 
  
  if (arg1) (arg1)->Filters = *arg2;
  
}


ImVector< ImGuiTextFilter::ImGuiTextRange > *_wrap_ImGuiTextFilter_Filters_get_imgui_568d46c1e1b4102a(ImGuiTextFilter *_swig_go_0) {
  ImGuiTextFilter *arg1 = (ImGuiTextFilter *) 0 ;
  ImVector< ImGuiTextFilter::ImGuiTextRange > *result = 0 ;
  ImVector< ImGuiTextFilter::ImGuiTextRange > *_swig_go_result;
  
  arg1 = *(ImGuiTextFilter **)&_swig_go_0; 
  
  result = (ImVector< ImGuiTextFilter::ImGuiTextRange > *)& ((arg1)->Filters);
  *(ImVector< ImGuiTextFilter::ImGuiTextRange > **)&_swig_go_result = (ImVector< ImGuiTextFilter::ImGuiTextRange > *)result; 
  return _swig_go_result;
}


void _wrap_ImGuiTextFilter_CountGrep_set_imgui_568d46c1e1b4102a(ImGuiTextFilter *_swig_go_0, intgo _swig_go_1) {
  ImGuiTextFilter *arg1 = (ImGuiTextFilter *) 0 ;
  int arg2 ;
  
  arg1 = *(ImGuiTextFilter **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->CountGrep = arg2;
  
}


intgo _wrap_ImGuiTextFilter_CountGrep_get_imgui_568d46c1e1b4102a(ImGuiTextFilter *_swig_go_0) {
  ImGuiTextFilter *arg1 = (ImGuiTextFilter *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(ImGuiTextFilter **)&_swig_go_0; 
  
  result = (int) ((arg1)->CountGrep);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_ImGuiTextFilter_imgui_568d46c1e1b4102a(ImGuiTextFilter *_swig_go_0) {
  ImGuiTextFilter *arg1 = (ImGuiTextFilter *) 0 ;
  
  arg1 = *(ImGuiTextFilter **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_ImGuiTextBuffer_Buf_set_imgui_568d46c1e1b4102a(ImGuiTextBuffer *_swig_go_0, ImVector< char > *_swig_go_1) {
  ImGuiTextBuffer *arg1 = (ImGuiTextBuffer *) 0 ;
  ImVector< char > *arg2 = (ImVector< char > *) 0 ;
  
  arg1 = *(ImGuiTextBuffer **)&_swig_go_0; 
  arg2 = *(ImVector< char > **)&_swig_go_1; 
  
  if (arg1) (arg1)->Buf = *arg2;
  
}


ImVector< char > *_wrap_ImGuiTextBuffer_Buf_get_imgui_568d46c1e1b4102a(ImGuiTextBuffer *_swig_go_0) {
  ImGuiTextBuffer *arg1 = (ImGuiTextBuffer *) 0 ;
  ImVector< char > *result = 0 ;
  ImVector< char > *_swig_go_result;
  
  arg1 = *(ImGuiTextBuffer **)&_swig_go_0; 
  
  result = (ImVector< char > *)& ((arg1)->Buf);
  *(ImVector< char > **)&_swig_go_result = (ImVector< char > *)result; 
  return _swig_go_result;
}


void _wrap_ImGuiTextBuffer_EmptyString_set_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0) {
  char *arg1 = (char *) (char *)0 ;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  {
    if(arg1) {
      strncpy((char*)ImGuiTextBuffer::EmptyString, (const char *)arg1, 1-1);
      ImGuiTextBuffer::EmptyString[1-1] = 0;
    } else {
      ImGuiTextBuffer::EmptyString[0] = 0;
    }
  }
  
  free(arg1); 
}


_gostring_ _wrap_ImGuiTextBuffer_EmptyString_get_imgui_568d46c1e1b4102a() {
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  
  result = (char *)(char *)ImGuiTextBuffer::EmptyString;
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


ImGuiTextBuffer *_wrap_new_ImGuiTextBuffer_imgui_568d46c1e1b4102a() {
  ImGuiTextBuffer *result = 0 ;
  ImGuiTextBuffer *_swig_go_result;
  
  
  result = (ImGuiTextBuffer *)new ImGuiTextBuffer();
  *(ImGuiTextBuffer **)&_swig_go_result = (ImGuiTextBuffer *)result; 
  return _swig_go_result;
}


_gostring_ _wrap_ImGuiTextBuffer_begin_imgui_568d46c1e1b4102a(ImGuiTextBuffer *_swig_go_0) {
  ImGuiTextBuffer *arg1 = (ImGuiTextBuffer *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(ImGuiTextBuffer **)&_swig_go_0; 
  
  result = (char *)((ImGuiTextBuffer const *)arg1)->begin();
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


_gostring_ _wrap_ImGuiTextBuffer_end_imgui_568d46c1e1b4102a(ImGuiTextBuffer *_swig_go_0) {
  ImGuiTextBuffer *arg1 = (ImGuiTextBuffer *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(ImGuiTextBuffer **)&_swig_go_0; 
  
  result = (char *)((ImGuiTextBuffer const *)arg1)->end();
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


intgo _wrap_ImGuiTextBuffer_size_imgui_568d46c1e1b4102a(ImGuiTextBuffer *_swig_go_0) {
  ImGuiTextBuffer *arg1 = (ImGuiTextBuffer *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(ImGuiTextBuffer **)&_swig_go_0; 
  
  result = (int)((ImGuiTextBuffer const *)arg1)->size();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ImGuiTextBuffer_empty_imgui_568d46c1e1b4102a(ImGuiTextBuffer *_swig_go_0) {
  ImGuiTextBuffer *arg1 = (ImGuiTextBuffer *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ImGuiTextBuffer **)&_swig_go_0; 
  
  result = (bool)((ImGuiTextBuffer const *)arg1)->empty();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiTextBuffer_clear_imgui_568d46c1e1b4102a(ImGuiTextBuffer *_swig_go_0) {
  ImGuiTextBuffer *arg1 = (ImGuiTextBuffer *) 0 ;
  
  arg1 = *(ImGuiTextBuffer **)&_swig_go_0; 
  
  (arg1)->clear();
  
}


void _wrap_ImGuiTextBuffer_reserve_imgui_568d46c1e1b4102a(ImGuiTextBuffer *_swig_go_0, intgo _swig_go_1) {
  ImGuiTextBuffer *arg1 = (ImGuiTextBuffer *) 0 ;
  int arg2 ;
  
  arg1 = *(ImGuiTextBuffer **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  (arg1)->reserve(arg2);
  
}


_gostring_ _wrap_ImGuiTextBuffer_c_str_imgui_568d46c1e1b4102a(ImGuiTextBuffer *_swig_go_0) {
  ImGuiTextBuffer *arg1 = (ImGuiTextBuffer *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(ImGuiTextBuffer **)&_swig_go_0; 
  
  result = (char *)((ImGuiTextBuffer const *)arg1)->c_str();
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_ImGuiTextBuffer_append__SWIG_0_imgui_568d46c1e1b4102a(ImGuiTextBuffer *_swig_go_0, _gostring_ _swig_go_1, _gostring_ _swig_go_2) {
  ImGuiTextBuffer *arg1 = (ImGuiTextBuffer *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  
  arg1 = *(ImGuiTextBuffer **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  (arg1)->append((char const *)arg2,(char const *)arg3);
  
  free(arg2); 
  free(arg3); 
}


void _wrap_ImGuiTextBuffer_append__SWIG_1_imgui_568d46c1e1b4102a(ImGuiTextBuffer *_swig_go_0, _gostring_ _swig_go_1) {
  ImGuiTextBuffer *arg1 = (ImGuiTextBuffer *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = *(ImGuiTextBuffer **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  (arg1)->append((char const *)arg2);
  
  free(arg2); 
}


void _wrap_ImGuiTextBuffer_appendf_imgui_568d46c1e1b4102a(ImGuiTextBuffer *_swig_go_0, _gostring_ _swig_go_1) {
  ImGuiTextBuffer *arg1 = (ImGuiTextBuffer *) 0 ;
  char *arg2 = (char *) 0 ;
  void *arg3 = 0 ;
  
  arg1 = *(ImGuiTextBuffer **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  (arg1)->appendf((char const *)arg2,arg3);
  
  free(arg2); 
}


void _wrap_ImGuiTextBuffer_appendfv_imgui_568d46c1e1b4102a(ImGuiTextBuffer *_swig_go_0, _gostring_ _swig_go_1, va_list *_swig_go_2) {
  ImGuiTextBuffer *arg1 = (ImGuiTextBuffer *) 0 ;
  char *arg2 = (char *) 0 ;
  va_list arg3 ;
  va_list *argp3 ;
  
  arg1 = *(ImGuiTextBuffer **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  argp3 = (va_list *)_swig_go_2;
  if (argp3 == NULL) {
    _swig_gopanic("Attempt to dereference null va_list");
  }
  arg3 = (va_list)*argp3;
  
  
  (arg1)->appendfv((char const *)arg2,arg3);
  
  free(arg2); 
}


void _wrap_delete_ImGuiTextBuffer_imgui_568d46c1e1b4102a(ImGuiTextBuffer *_swig_go_0) {
  ImGuiTextBuffer *arg1 = (ImGuiTextBuffer *) 0 ;
  
  arg1 = *(ImGuiTextBuffer **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_ImGuiStoragePair_key_set_imgui_568d46c1e1b4102a(ImGuiStoragePair *_swig_go_0, intgo _swig_go_1) {
  ImGuiStoragePair *arg1 = (ImGuiStoragePair *) 0 ;
  ImGuiID arg2 ;
  
  arg1 = *(ImGuiStoragePair **)&_swig_go_0; 
  arg2 = (ImGuiID)_swig_go_1; 
  
  if (arg1) (arg1)->key = arg2;
  
}


intgo _wrap_ImGuiStoragePair_key_get_imgui_568d46c1e1b4102a(ImGuiStoragePair *_swig_go_0) {
  ImGuiStoragePair *arg1 = (ImGuiStoragePair *) 0 ;
  ImGuiID result;
  intgo _swig_go_result;
  
  arg1 = *(ImGuiStoragePair **)&_swig_go_0; 
  
  result = (ImGuiID) ((arg1)->key);
  _swig_go_result = result; 
  return _swig_go_result;
}


ImGuiStoragePair *_wrap_new_ImGuiStoragePair__SWIG_0_imgui_568d46c1e1b4102a(intgo _swig_go_0, intgo _swig_go_1) {
  ImGuiID arg1 ;
  int arg2 ;
  ImGuiStoragePair *result = 0 ;
  ImGuiStoragePair *_swig_go_result;
  
  arg1 = (ImGuiID)_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (ImGuiStoragePair *)new ImGuiStoragePair(arg1,arg2);
  *(ImGuiStoragePair **)&_swig_go_result = (ImGuiStoragePair *)result; 
  return _swig_go_result;
}


ImGuiStoragePair *_wrap_new_ImGuiStoragePair__SWIG_1_imgui_568d46c1e1b4102a(intgo _swig_go_0, float _swig_go_1) {
  ImGuiID arg1 ;
  float arg2 ;
  ImGuiStoragePair *result = 0 ;
  ImGuiStoragePair *_swig_go_result;
  
  arg1 = (ImGuiID)_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  result = (ImGuiStoragePair *)new ImGuiStoragePair(arg1,arg2);
  *(ImGuiStoragePair **)&_swig_go_result = (ImGuiStoragePair *)result; 
  return _swig_go_result;
}


ImGuiStoragePair *_wrap_new_ImGuiStoragePair__SWIG_2_imgui_568d46c1e1b4102a(intgo _swig_go_0, void *_swig_go_1) {
  ImGuiID arg1 ;
  void *arg2 = (void *) 0 ;
  ImGuiStoragePair *result = 0 ;
  ImGuiStoragePair *_swig_go_result;
  
  arg1 = (ImGuiID)_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  result = (ImGuiStoragePair *)new ImGuiStoragePair(arg1,arg2);
  *(ImGuiStoragePair **)&_swig_go_result = (ImGuiStoragePair *)result; 
  return _swig_go_result;
}


void _wrap_delete_ImGuiStoragePair_imgui_568d46c1e1b4102a(ImGuiStoragePair *_swig_go_0) {
  ImGuiStoragePair *arg1 = (ImGuiStoragePair *) 0 ;
  
  arg1 = *(ImGuiStoragePair **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_ImGuiStorage_Data_set_imgui_568d46c1e1b4102a(ImGuiStorage *_swig_go_0, ImVector< ImGuiStoragePair > *_swig_go_1) {
  ImGuiStorage *arg1 = (ImGuiStorage *) 0 ;
  ImVector< ImGuiStoragePair > *arg2 = (ImVector< ImGuiStoragePair > *) 0 ;
  
  arg1 = *(ImGuiStorage **)&_swig_go_0; 
  arg2 = *(ImVector< ImGuiStoragePair > **)&_swig_go_1; 
  
  if (arg1) (arg1)->Data = *arg2;
  
}


ImVector< ImGuiStoragePair > *_wrap_ImGuiStorage_Data_get_imgui_568d46c1e1b4102a(ImGuiStorage *_swig_go_0) {
  ImGuiStorage *arg1 = (ImGuiStorage *) 0 ;
  ImVector< ImGuiStoragePair > *result = 0 ;
  ImVector< ImGuiStoragePair > *_swig_go_result;
  
  arg1 = *(ImGuiStorage **)&_swig_go_0; 
  
  result = (ImVector< ImGuiStoragePair > *)& ((arg1)->Data);
  *(ImVector< ImGuiStoragePair > **)&_swig_go_result = (ImVector< ImGuiStoragePair > *)result; 
  return _swig_go_result;
}


void _wrap_ImGuiStorage_Clear_imgui_568d46c1e1b4102a(ImGuiStorage *_swig_go_0) {
  ImGuiStorage *arg1 = (ImGuiStorage *) 0 ;
  
  arg1 = *(ImGuiStorage **)&_swig_go_0; 
  
  (arg1)->Clear();
  
}


intgo _wrap_ImGuiStorage_GetInt__SWIG_0_imgui_568d46c1e1b4102a(ImGuiStorage *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  ImGuiStorage *arg1 = (ImGuiStorage *) 0 ;
  ImGuiID arg2 ;
  int arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(ImGuiStorage **)&_swig_go_0; 
  arg2 = (ImGuiID)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (int)((ImGuiStorage const *)arg1)->GetInt(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiStorage_GetInt__SWIG_1_imgui_568d46c1e1b4102a(ImGuiStorage *_swig_go_0, intgo _swig_go_1) {
  ImGuiStorage *arg1 = (ImGuiStorage *) 0 ;
  ImGuiID arg2 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(ImGuiStorage **)&_swig_go_0; 
  arg2 = (ImGuiID)_swig_go_1; 
  
  result = (int)((ImGuiStorage const *)arg1)->GetInt(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiStorage_SetInt_imgui_568d46c1e1b4102a(ImGuiStorage *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  ImGuiStorage *arg1 = (ImGuiStorage *) 0 ;
  ImGuiID arg2 ;
  int arg3 ;
  
  arg1 = *(ImGuiStorage **)&_swig_go_0; 
  arg2 = (ImGuiID)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  (arg1)->SetInt(arg2,arg3);
  
}


bool _wrap_ImGuiStorage_GetBool__SWIG_0_imgui_568d46c1e1b4102a(ImGuiStorage *_swig_go_0, intgo _swig_go_1, bool _swig_go_2) {
  ImGuiStorage *arg1 = (ImGuiStorage *) 0 ;
  ImGuiID arg2 ;
  bool arg3 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ImGuiStorage **)&_swig_go_0; 
  arg2 = (ImGuiID)_swig_go_1; 
  arg3 = (bool)_swig_go_2; 
  
  result = (bool)((ImGuiStorage const *)arg1)->GetBool(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ImGuiStorage_GetBool__SWIG_1_imgui_568d46c1e1b4102a(ImGuiStorage *_swig_go_0, intgo _swig_go_1) {
  ImGuiStorage *arg1 = (ImGuiStorage *) 0 ;
  ImGuiID arg2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ImGuiStorage **)&_swig_go_0; 
  arg2 = (ImGuiID)_swig_go_1; 
  
  result = (bool)((ImGuiStorage const *)arg1)->GetBool(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiStorage_SetBool_imgui_568d46c1e1b4102a(ImGuiStorage *_swig_go_0, intgo _swig_go_1, bool _swig_go_2) {
  ImGuiStorage *arg1 = (ImGuiStorage *) 0 ;
  ImGuiID arg2 ;
  bool arg3 ;
  
  arg1 = *(ImGuiStorage **)&_swig_go_0; 
  arg2 = (ImGuiID)_swig_go_1; 
  arg3 = (bool)_swig_go_2; 
  
  (arg1)->SetBool(arg2,arg3);
  
}


float _wrap_ImGuiStorage_GetFloat__SWIG_0_imgui_568d46c1e1b4102a(ImGuiStorage *_swig_go_0, intgo _swig_go_1, float _swig_go_2) {
  ImGuiStorage *arg1 = (ImGuiStorage *) 0 ;
  ImGuiID arg2 ;
  float arg3 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(ImGuiStorage **)&_swig_go_0; 
  arg2 = (ImGuiID)_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  
  result = (float)((ImGuiStorage const *)arg1)->GetFloat(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


float _wrap_ImGuiStorage_GetFloat__SWIG_1_imgui_568d46c1e1b4102a(ImGuiStorage *_swig_go_0, intgo _swig_go_1) {
  ImGuiStorage *arg1 = (ImGuiStorage *) 0 ;
  ImGuiID arg2 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(ImGuiStorage **)&_swig_go_0; 
  arg2 = (ImGuiID)_swig_go_1; 
  
  result = (float)((ImGuiStorage const *)arg1)->GetFloat(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiStorage_SetFloat_imgui_568d46c1e1b4102a(ImGuiStorage *_swig_go_0, intgo _swig_go_1, float _swig_go_2) {
  ImGuiStorage *arg1 = (ImGuiStorage *) 0 ;
  ImGuiID arg2 ;
  float arg3 ;
  
  arg1 = *(ImGuiStorage **)&_swig_go_0; 
  arg2 = (ImGuiID)_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  
  (arg1)->SetFloat(arg2,arg3);
  
}


void *_wrap_ImGuiStorage_GetVoidPtr_imgui_568d46c1e1b4102a(ImGuiStorage *_swig_go_0, intgo _swig_go_1) {
  ImGuiStorage *arg1 = (ImGuiStorage *) 0 ;
  ImGuiID arg2 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = *(ImGuiStorage **)&_swig_go_0; 
  arg2 = (ImGuiID)_swig_go_1; 
  
  result = (void *)((ImGuiStorage const *)arg1)->GetVoidPtr(arg2);
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


void _wrap_ImGuiStorage_SetVoidPtr_imgui_568d46c1e1b4102a(ImGuiStorage *_swig_go_0, intgo _swig_go_1, void *_swig_go_2) {
  ImGuiStorage *arg1 = (ImGuiStorage *) 0 ;
  ImGuiID arg2 ;
  void *arg3 = (void *) 0 ;
  
  arg1 = *(ImGuiStorage **)&_swig_go_0; 
  arg2 = (ImGuiID)_swig_go_1; 
  arg3 = *(void **)&_swig_go_2; 
  
  (arg1)->SetVoidPtr(arg2,arg3);
  
}


intgo *_wrap_ImGuiStorage_GetIntRef__SWIG_0_imgui_568d46c1e1b4102a(ImGuiStorage *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  ImGuiStorage *arg1 = (ImGuiStorage *) 0 ;
  ImGuiID arg2 ;
  int arg3 ;
  int *result = 0 ;
  intgo *_swig_go_result;
  
  arg1 = *(ImGuiStorage **)&_swig_go_0; 
  arg2 = (ImGuiID)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (int *)(arg1)->GetIntRef(arg2,arg3);
  *(int **)&_swig_go_result = (int *)result; 
  return _swig_go_result;
}


intgo *_wrap_ImGuiStorage_GetIntRef__SWIG_1_imgui_568d46c1e1b4102a(ImGuiStorage *_swig_go_0, intgo _swig_go_1) {
  ImGuiStorage *arg1 = (ImGuiStorage *) 0 ;
  ImGuiID arg2 ;
  int *result = 0 ;
  intgo *_swig_go_result;
  
  arg1 = *(ImGuiStorage **)&_swig_go_0; 
  arg2 = (ImGuiID)_swig_go_1; 
  
  result = (int *)(arg1)->GetIntRef(arg2);
  *(int **)&_swig_go_result = (int *)result; 
  return _swig_go_result;
}


bool *_wrap_ImGuiStorage_GetBoolRef__SWIG_0_imgui_568d46c1e1b4102a(ImGuiStorage *_swig_go_0, intgo _swig_go_1, bool _swig_go_2) {
  ImGuiStorage *arg1 = (ImGuiStorage *) 0 ;
  ImGuiID arg2 ;
  bool arg3 ;
  bool *result = 0 ;
  bool *_swig_go_result;
  
  arg1 = *(ImGuiStorage **)&_swig_go_0; 
  arg2 = (ImGuiID)_swig_go_1; 
  arg3 = (bool)_swig_go_2; 
  
  result = (bool *)(arg1)->GetBoolRef(arg2,arg3);
  *(bool **)&_swig_go_result = (bool *)result; 
  return _swig_go_result;
}


bool *_wrap_ImGuiStorage_GetBoolRef__SWIG_1_imgui_568d46c1e1b4102a(ImGuiStorage *_swig_go_0, intgo _swig_go_1) {
  ImGuiStorage *arg1 = (ImGuiStorage *) 0 ;
  ImGuiID arg2 ;
  bool *result = 0 ;
  bool *_swig_go_result;
  
  arg1 = *(ImGuiStorage **)&_swig_go_0; 
  arg2 = (ImGuiID)_swig_go_1; 
  
  result = (bool *)(arg1)->GetBoolRef(arg2);
  *(bool **)&_swig_go_result = (bool *)result; 
  return _swig_go_result;
}


float *_wrap_ImGuiStorage_GetFloatRef__SWIG_0_imgui_568d46c1e1b4102a(ImGuiStorage *_swig_go_0, intgo _swig_go_1, float _swig_go_2) {
  ImGuiStorage *arg1 = (ImGuiStorage *) 0 ;
  ImGuiID arg2 ;
  float arg3 ;
  float *result = 0 ;
  float *_swig_go_result;
  
  arg1 = *(ImGuiStorage **)&_swig_go_0; 
  arg2 = (ImGuiID)_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  
  result = (float *)(arg1)->GetFloatRef(arg2,arg3);
  *(float **)&_swig_go_result = (float *)result; 
  return _swig_go_result;
}


float *_wrap_ImGuiStorage_GetFloatRef__SWIG_1_imgui_568d46c1e1b4102a(ImGuiStorage *_swig_go_0, intgo _swig_go_1) {
  ImGuiStorage *arg1 = (ImGuiStorage *) 0 ;
  ImGuiID arg2 ;
  float *result = 0 ;
  float *_swig_go_result;
  
  arg1 = *(ImGuiStorage **)&_swig_go_0; 
  arg2 = (ImGuiID)_swig_go_1; 
  
  result = (float *)(arg1)->GetFloatRef(arg2);
  *(float **)&_swig_go_result = (float *)result; 
  return _swig_go_result;
}


void **_wrap_ImGuiStorage_GetVoidPtrRef__SWIG_0_imgui_568d46c1e1b4102a(ImGuiStorage *_swig_go_0, intgo _swig_go_1, void *_swig_go_2) {
  ImGuiStorage *arg1 = (ImGuiStorage *) 0 ;
  ImGuiID arg2 ;
  void *arg3 = (void *) 0 ;
  void **result = 0 ;
  void **_swig_go_result;
  
  arg1 = *(ImGuiStorage **)&_swig_go_0; 
  arg2 = (ImGuiID)_swig_go_1; 
  arg3 = *(void **)&_swig_go_2; 
  
  result = (void **)(arg1)->GetVoidPtrRef(arg2,arg3);
  *(void ***)&_swig_go_result = (void **)result; 
  return _swig_go_result;
}


void **_wrap_ImGuiStorage_GetVoidPtrRef__SWIG_1_imgui_568d46c1e1b4102a(ImGuiStorage *_swig_go_0, intgo _swig_go_1) {
  ImGuiStorage *arg1 = (ImGuiStorage *) 0 ;
  ImGuiID arg2 ;
  void **result = 0 ;
  void **_swig_go_result;
  
  arg1 = *(ImGuiStorage **)&_swig_go_0; 
  arg2 = (ImGuiID)_swig_go_1; 
  
  result = (void **)(arg1)->GetVoidPtrRef(arg2);
  *(void ***)&_swig_go_result = (void **)result; 
  return _swig_go_result;
}


void _wrap_ImGuiStorage_BuildSortByKey_imgui_568d46c1e1b4102a(ImGuiStorage *_swig_go_0) {
  ImGuiStorage *arg1 = (ImGuiStorage *) 0 ;
  
  arg1 = *(ImGuiStorage **)&_swig_go_0; 
  
  (arg1)->BuildSortByKey();
  
}


void _wrap_ImGuiStorage_SetAllInt_imgui_568d46c1e1b4102a(ImGuiStorage *_swig_go_0, intgo _swig_go_1) {
  ImGuiStorage *arg1 = (ImGuiStorage *) 0 ;
  int arg2 ;
  
  arg1 = *(ImGuiStorage **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  (arg1)->SetAllInt(arg2);
  
}


ImGuiStorage *_wrap_new_ImGuiStorage_imgui_568d46c1e1b4102a() {
  ImGuiStorage *result = 0 ;
  ImGuiStorage *_swig_go_result;
  
  
  result = (ImGuiStorage *)new ImGuiStorage();
  *(ImGuiStorage **)&_swig_go_result = (ImGuiStorage *)result; 
  return _swig_go_result;
}


void _wrap_delete_ImGuiStorage_imgui_568d46c1e1b4102a(ImGuiStorage *_swig_go_0) {
  ImGuiStorage *arg1 = (ImGuiStorage *) 0 ;
  
  arg1 = *(ImGuiStorage **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_ImGuiListClipper_Ctx_set_imgui_568d46c1e1b4102a(ImGuiListClipper *_swig_go_0, ImGuiContext *_swig_go_1) {
  ImGuiListClipper *arg1 = (ImGuiListClipper *) 0 ;
  ImGuiContext *arg2 = (ImGuiContext *) 0 ;
  
  arg1 = *(ImGuiListClipper **)&_swig_go_0; 
  arg2 = *(ImGuiContext **)&_swig_go_1; 
  
  if (arg1) (arg1)->Ctx = arg2;
  
}


ImGuiContext *_wrap_ImGuiListClipper_Ctx_get_imgui_568d46c1e1b4102a(ImGuiListClipper *_swig_go_0) {
  ImGuiListClipper *arg1 = (ImGuiListClipper *) 0 ;
  ImGuiContext *result = 0 ;
  ImGuiContext *_swig_go_result;
  
  arg1 = *(ImGuiListClipper **)&_swig_go_0; 
  
  result = (ImGuiContext *) ((arg1)->Ctx);
  *(ImGuiContext **)&_swig_go_result = (ImGuiContext *)result; 
  return _swig_go_result;
}


void _wrap_ImGuiListClipper_DisplayStart_set_imgui_568d46c1e1b4102a(ImGuiListClipper *_swig_go_0, intgo _swig_go_1) {
  ImGuiListClipper *arg1 = (ImGuiListClipper *) 0 ;
  int arg2 ;
  
  arg1 = *(ImGuiListClipper **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->DisplayStart = arg2;
  
}


intgo _wrap_ImGuiListClipper_DisplayStart_get_imgui_568d46c1e1b4102a(ImGuiListClipper *_swig_go_0) {
  ImGuiListClipper *arg1 = (ImGuiListClipper *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(ImGuiListClipper **)&_swig_go_0; 
  
  result = (int) ((arg1)->DisplayStart);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiListClipper_DisplayEnd_set_imgui_568d46c1e1b4102a(ImGuiListClipper *_swig_go_0, intgo _swig_go_1) {
  ImGuiListClipper *arg1 = (ImGuiListClipper *) 0 ;
  int arg2 ;
  
  arg1 = *(ImGuiListClipper **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->DisplayEnd = arg2;
  
}


intgo _wrap_ImGuiListClipper_DisplayEnd_get_imgui_568d46c1e1b4102a(ImGuiListClipper *_swig_go_0) {
  ImGuiListClipper *arg1 = (ImGuiListClipper *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(ImGuiListClipper **)&_swig_go_0; 
  
  result = (int) ((arg1)->DisplayEnd);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiListClipper_ItemsCount_set_imgui_568d46c1e1b4102a(ImGuiListClipper *_swig_go_0, intgo _swig_go_1) {
  ImGuiListClipper *arg1 = (ImGuiListClipper *) 0 ;
  int arg2 ;
  
  arg1 = *(ImGuiListClipper **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->ItemsCount = arg2;
  
}


intgo _wrap_ImGuiListClipper_ItemsCount_get_imgui_568d46c1e1b4102a(ImGuiListClipper *_swig_go_0) {
  ImGuiListClipper *arg1 = (ImGuiListClipper *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(ImGuiListClipper **)&_swig_go_0; 
  
  result = (int) ((arg1)->ItemsCount);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiListClipper_ItemsHeight_set_imgui_568d46c1e1b4102a(ImGuiListClipper *_swig_go_0, float _swig_go_1) {
  ImGuiListClipper *arg1 = (ImGuiListClipper *) 0 ;
  float arg2 ;
  
  arg1 = *(ImGuiListClipper **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->ItemsHeight = arg2;
  
}


float _wrap_ImGuiListClipper_ItemsHeight_get_imgui_568d46c1e1b4102a(ImGuiListClipper *_swig_go_0) {
  ImGuiListClipper *arg1 = (ImGuiListClipper *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(ImGuiListClipper **)&_swig_go_0; 
  
  result = (float) ((arg1)->ItemsHeight);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiListClipper_StartPosY_set_imgui_568d46c1e1b4102a(ImGuiListClipper *_swig_go_0, float _swig_go_1) {
  ImGuiListClipper *arg1 = (ImGuiListClipper *) 0 ;
  float arg2 ;
  
  arg1 = *(ImGuiListClipper **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->StartPosY = arg2;
  
}


float _wrap_ImGuiListClipper_StartPosY_get_imgui_568d46c1e1b4102a(ImGuiListClipper *_swig_go_0) {
  ImGuiListClipper *arg1 = (ImGuiListClipper *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(ImGuiListClipper **)&_swig_go_0; 
  
  result = (float) ((arg1)->StartPosY);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiListClipper_StartSeekOffsetY_set_imgui_568d46c1e1b4102a(ImGuiListClipper *_swig_go_0, double _swig_go_1) {
  ImGuiListClipper *arg1 = (ImGuiListClipper *) 0 ;
  double arg2 ;
  
  arg1 = *(ImGuiListClipper **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  
  if (arg1) (arg1)->StartSeekOffsetY = arg2;
  
}


double _wrap_ImGuiListClipper_StartSeekOffsetY_get_imgui_568d46c1e1b4102a(ImGuiListClipper *_swig_go_0) {
  ImGuiListClipper *arg1 = (ImGuiListClipper *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(ImGuiListClipper **)&_swig_go_0; 
  
  result = (double) ((arg1)->StartSeekOffsetY);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiListClipper_TempData_set_imgui_568d46c1e1b4102a(ImGuiListClipper *_swig_go_0, void *_swig_go_1) {
  ImGuiListClipper *arg1 = (ImGuiListClipper *) 0 ;
  void *arg2 = (void *) 0 ;
  
  arg1 = *(ImGuiListClipper **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  if (arg1) (arg1)->TempData = arg2;
  
}


void *_wrap_ImGuiListClipper_TempData_get_imgui_568d46c1e1b4102a(ImGuiListClipper *_swig_go_0) {
  ImGuiListClipper *arg1 = (ImGuiListClipper *) 0 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = *(ImGuiListClipper **)&_swig_go_0; 
  
  result = (void *) ((arg1)->TempData);
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


ImGuiListClipper *_wrap_new_ImGuiListClipper_imgui_568d46c1e1b4102a() {
  ImGuiListClipper *result = 0 ;
  ImGuiListClipper *_swig_go_result;
  
  
  result = (ImGuiListClipper *)new ImGuiListClipper();
  *(ImGuiListClipper **)&_swig_go_result = (ImGuiListClipper *)result; 
  return _swig_go_result;
}


void _wrap_delete_ImGuiListClipper_imgui_568d46c1e1b4102a(ImGuiListClipper *_swig_go_0) {
  ImGuiListClipper *arg1 = (ImGuiListClipper *) 0 ;
  
  arg1 = *(ImGuiListClipper **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_ImGuiListClipper_Begin__SWIG_0_imgui_568d46c1e1b4102a(ImGuiListClipper *_swig_go_0, intgo _swig_go_1, float _swig_go_2) {
  ImGuiListClipper *arg1 = (ImGuiListClipper *) 0 ;
  int arg2 ;
  float arg3 ;
  
  arg1 = *(ImGuiListClipper **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  
  (arg1)->Begin(arg2,arg3);
  
}


void _wrap_ImGuiListClipper_Begin__SWIG_1_imgui_568d46c1e1b4102a(ImGuiListClipper *_swig_go_0, intgo _swig_go_1) {
  ImGuiListClipper *arg1 = (ImGuiListClipper *) 0 ;
  int arg2 ;
  
  arg1 = *(ImGuiListClipper **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  (arg1)->Begin(arg2);
  
}


void _wrap_ImGuiListClipper_End_imgui_568d46c1e1b4102a(ImGuiListClipper *_swig_go_0) {
  ImGuiListClipper *arg1 = (ImGuiListClipper *) 0 ;
  
  arg1 = *(ImGuiListClipper **)&_swig_go_0; 
  
  (arg1)->End();
  
}


bool _wrap_ImGuiListClipper_Step_imgui_568d46c1e1b4102a(ImGuiListClipper *_swig_go_0) {
  ImGuiListClipper *arg1 = (ImGuiListClipper *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ImGuiListClipper **)&_swig_go_0; 
  
  result = (bool)(arg1)->Step();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiListClipper_IncludeItemByIndex_imgui_568d46c1e1b4102a(ImGuiListClipper *_swig_go_0, intgo _swig_go_1) {
  ImGuiListClipper *arg1 = (ImGuiListClipper *) 0 ;
  int arg2 ;
  
  arg1 = *(ImGuiListClipper **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  (arg1)->IncludeItemByIndex(arg2);
  
}


void _wrap_ImGuiListClipper_IncludeItemsByIndex_imgui_568d46c1e1b4102a(ImGuiListClipper *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  ImGuiListClipper *arg1 = (ImGuiListClipper *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = *(ImGuiListClipper **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  (arg1)->IncludeItemsByIndex(arg2,arg3);
  
}


void _wrap_ImGuiListClipper_SeekCursorForItem_imgui_568d46c1e1b4102a(ImGuiListClipper *_swig_go_0, intgo _swig_go_1) {
  ImGuiListClipper *arg1 = (ImGuiListClipper *) 0 ;
  int arg2 ;
  
  arg1 = *(ImGuiListClipper **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  (arg1)->SeekCursorForItem(arg2);
  
}


void _wrap_ImGuiListClipper_IncludeRangeByIndices_imgui_568d46c1e1b4102a(ImGuiListClipper *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  ImGuiListClipper *arg1 = (ImGuiListClipper *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = *(ImGuiListClipper **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  (arg1)->IncludeRangeByIndices(arg2,arg3);
  
}


void _wrap_ImGuiListClipper_ForceDisplayRangeByIndices_imgui_568d46c1e1b4102a(ImGuiListClipper *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  ImGuiListClipper *arg1 = (ImGuiListClipper *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = *(ImGuiListClipper **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  (arg1)->ForceDisplayRangeByIndices(arg2,arg3);
  
}


void _wrap_ImColor_Value_set_imgui_568d46c1e1b4102a(ImColor *_swig_go_0, ImVec4 *_swig_go_1) {
  ImColor *arg1 = (ImColor *) 0 ;
  ImVec4 *arg2 = (ImVec4 *) 0 ;
  
  arg1 = *(ImColor **)&_swig_go_0; 
  arg2 = *(ImVec4 **)&_swig_go_1; 
  
  if (arg1) (arg1)->Value = *arg2;
  
}


ImVec4 *_wrap_ImColor_Value_get_imgui_568d46c1e1b4102a(ImColor *_swig_go_0) {
  ImColor *arg1 = (ImColor *) 0 ;
  ImVec4 *result = 0 ;
  ImVec4 *_swig_go_result;
  
  arg1 = *(ImColor **)&_swig_go_0; 
  
  result = (ImVec4 *)& ((arg1)->Value);
  *(ImVec4 **)&_swig_go_result = (ImVec4 *)result; 
  return _swig_go_result;
}


ImColor *_wrap_new_ImColor__SWIG_0_imgui_568d46c1e1b4102a() {
  ImColor *result = 0 ;
  ImColor *_swig_go_result;
  
  
  result = (ImColor *)new ImColor();
  *(ImColor **)&_swig_go_result = (ImColor *)result; 
  return _swig_go_result;
}


ImColor *_wrap_new_ImColor__SWIG_1_imgui_568d46c1e1b4102a(float _swig_go_0, float _swig_go_1, float _swig_go_2, float _swig_go_3) {
  float arg1 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  ImColor *result = 0 ;
  ImColor *_swig_go_result;
  
  arg1 = (float)_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  arg4 = (float)_swig_go_3; 
  
  result = (ImColor *)new ImColor(arg1,arg2,arg3,arg4);
  *(ImColor **)&_swig_go_result = (ImColor *)result; 
  return _swig_go_result;
}


ImColor *_wrap_new_ImColor__SWIG_2_imgui_568d46c1e1b4102a(float _swig_go_0, float _swig_go_1, float _swig_go_2) {
  float arg1 ;
  float arg2 ;
  float arg3 ;
  ImColor *result = 0 ;
  ImColor *_swig_go_result;
  
  arg1 = (float)_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  
  result = (ImColor *)new ImColor(arg1,arg2,arg3);
  *(ImColor **)&_swig_go_result = (ImColor *)result; 
  return _swig_go_result;
}


ImColor *_wrap_new_ImColor__SWIG_3_imgui_568d46c1e1b4102a(ImVec4 *_swig_go_0) {
  ImVec4 *arg1 = 0 ;
  ImColor *result = 0 ;
  ImColor *_swig_go_result;
  
  arg1 = *(ImVec4 **)&_swig_go_0; 
  
  result = (ImColor *)new ImColor((ImVec4 const &)*arg1);
  *(ImColor **)&_swig_go_result = (ImColor *)result; 
  return _swig_go_result;
}


ImColor *_wrap_new_ImColor__SWIG_4_imgui_568d46c1e1b4102a(intgo _swig_go_0, intgo _swig_go_1, intgo _swig_go_2, intgo _swig_go_3) {
  int arg1 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  ImColor *result = 0 ;
  ImColor *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  result = (ImColor *)new ImColor(arg1,arg2,arg3,arg4);
  *(ImColor **)&_swig_go_result = (ImColor *)result; 
  return _swig_go_result;
}


ImColor *_wrap_new_ImColor__SWIG_5_imgui_568d46c1e1b4102a(intgo _swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  int arg1 ;
  int arg2 ;
  int arg3 ;
  ImColor *result = 0 ;
  ImColor *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (ImColor *)new ImColor(arg1,arg2,arg3);
  *(ImColor **)&_swig_go_result = (ImColor *)result; 
  return _swig_go_result;
}


ImColor *_wrap_new_ImColor__SWIG_6_imgui_568d46c1e1b4102a(intgo _swig_go_0) {
  ImU32 arg1 ;
  ImColor *result = 0 ;
  ImColor *_swig_go_result;
  
  arg1 = (ImU32)_swig_go_0; 
  
  result = (ImColor *)new ImColor(arg1);
  *(ImColor **)&_swig_go_result = (ImColor *)result; 
  return _swig_go_result;
}


void _wrap_ImColor_SetHSV__SWIG_0_imgui_568d46c1e1b4102a(ImColor *_swig_go_0, float _swig_go_1, float _swig_go_2, float _swig_go_3, float _swig_go_4) {
  ImColor *arg1 = (ImColor *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  
  arg1 = *(ImColor **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  arg4 = (float)_swig_go_3; 
  arg5 = (float)_swig_go_4; 
  
  (arg1)->SetHSV(arg2,arg3,arg4,arg5);
  
}


void _wrap_ImColor_SetHSV__SWIG_1_imgui_568d46c1e1b4102a(ImColor *_swig_go_0, float _swig_go_1, float _swig_go_2, float _swig_go_3) {
  ImColor *arg1 = (ImColor *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  
  arg1 = *(ImColor **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  arg4 = (float)_swig_go_3; 
  
  (arg1)->SetHSV(arg2,arg3,arg4);
  
}


ImColor *_wrap_ImColor_HSV__SWIG_0_imgui_568d46c1e1b4102a(float _swig_go_0, float _swig_go_1, float _swig_go_2, float _swig_go_3) {
  float arg1 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  ImColor result;
  ImColor *_swig_go_result;
  
  arg1 = (float)_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  arg4 = (float)_swig_go_3; 
  
  result = ImColor::HSV(arg1,arg2,arg3,arg4);
  *(ImColor **)&_swig_go_result = new ImColor(result); 
  return _swig_go_result;
}


ImColor *_wrap_ImColor_HSV__SWIG_1_imgui_568d46c1e1b4102a(float _swig_go_0, float _swig_go_1, float _swig_go_2) {
  float arg1 ;
  float arg2 ;
  float arg3 ;
  ImColor result;
  ImColor *_swig_go_result;
  
  arg1 = (float)_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  
  result = ImColor::HSV(arg1,arg2,arg3);
  *(ImColor **)&_swig_go_result = new ImColor(result); 
  return _swig_go_result;
}


void _wrap_delete_ImColor_imgui_568d46c1e1b4102a(ImColor *_swig_go_0) {
  ImColor *arg1 = (ImColor *) 0 ;
  
  arg1 = *(ImColor **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_ImGuiMultiSelectFlags_None_imgui_568d46c1e1b4102a() {
  ImGuiMultiSelectFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiMultiSelectFlags_None;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiMultiSelectFlags_SingleSelect_imgui_568d46c1e1b4102a() {
  ImGuiMultiSelectFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiMultiSelectFlags_SingleSelect;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiMultiSelectFlags_NoSelectAll_imgui_568d46c1e1b4102a() {
  ImGuiMultiSelectFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiMultiSelectFlags_NoSelectAll;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiMultiSelectFlags_NoRangeSelect_imgui_568d46c1e1b4102a() {
  ImGuiMultiSelectFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiMultiSelectFlags_NoRangeSelect;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiMultiSelectFlags_NoAutoSelect_imgui_568d46c1e1b4102a() {
  ImGuiMultiSelectFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiMultiSelectFlags_NoAutoSelect;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiMultiSelectFlags_NoAutoClear_imgui_568d46c1e1b4102a() {
  ImGuiMultiSelectFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiMultiSelectFlags_NoAutoClear;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiMultiSelectFlags_NoAutoClearOnReselect_imgui_568d46c1e1b4102a() {
  ImGuiMultiSelectFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiMultiSelectFlags_NoAutoClearOnReselect;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiMultiSelectFlags_BoxSelect1d_imgui_568d46c1e1b4102a() {
  ImGuiMultiSelectFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiMultiSelectFlags_BoxSelect1d;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiMultiSelectFlags_BoxSelect2d_imgui_568d46c1e1b4102a() {
  ImGuiMultiSelectFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiMultiSelectFlags_BoxSelect2d;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiMultiSelectFlags_BoxSelectNoScroll_imgui_568d46c1e1b4102a() {
  ImGuiMultiSelectFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiMultiSelectFlags_BoxSelectNoScroll;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiMultiSelectFlags_ClearOnEscape_imgui_568d46c1e1b4102a() {
  ImGuiMultiSelectFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiMultiSelectFlags_ClearOnEscape;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiMultiSelectFlags_ClearOnClickVoid_imgui_568d46c1e1b4102a() {
  ImGuiMultiSelectFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiMultiSelectFlags_ClearOnClickVoid;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiMultiSelectFlags_ScopeWindow_imgui_568d46c1e1b4102a() {
  ImGuiMultiSelectFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiMultiSelectFlags_ScopeWindow;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiMultiSelectFlags_ScopeRect_imgui_568d46c1e1b4102a() {
  ImGuiMultiSelectFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiMultiSelectFlags_ScopeRect;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiMultiSelectFlags_SelectOnClick_imgui_568d46c1e1b4102a() {
  ImGuiMultiSelectFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiMultiSelectFlags_SelectOnClick;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiMultiSelectFlags_SelectOnClickRelease_imgui_568d46c1e1b4102a() {
  ImGuiMultiSelectFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiMultiSelectFlags_SelectOnClickRelease;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiMultiSelectFlags_NavWrapX_imgui_568d46c1e1b4102a() {
  ImGuiMultiSelectFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiMultiSelectFlags_NavWrapX;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_ImGuiMultiSelectIO_Requests_set_imgui_568d46c1e1b4102a(ImGuiMultiSelectIO *_swig_go_0, ImVector< ImGuiSelectionRequest > *_swig_go_1) {
  ImGuiMultiSelectIO *arg1 = (ImGuiMultiSelectIO *) 0 ;
  ImVector< ImGuiSelectionRequest > *arg2 = (ImVector< ImGuiSelectionRequest > *) 0 ;
  
  arg1 = *(ImGuiMultiSelectIO **)&_swig_go_0; 
  arg2 = *(ImVector< ImGuiSelectionRequest > **)&_swig_go_1; 
  
  if (arg1) (arg1)->Requests = *arg2;
  
}


ImVector< ImGuiSelectionRequest > *_wrap_ImGuiMultiSelectIO_Requests_get_imgui_568d46c1e1b4102a(ImGuiMultiSelectIO *_swig_go_0) {
  ImGuiMultiSelectIO *arg1 = (ImGuiMultiSelectIO *) 0 ;
  ImVector< ImGuiSelectionRequest > *result = 0 ;
  ImVector< ImGuiSelectionRequest > *_swig_go_result;
  
  arg1 = *(ImGuiMultiSelectIO **)&_swig_go_0; 
  
  result = (ImVector< ImGuiSelectionRequest > *)& ((arg1)->Requests);
  *(ImVector< ImGuiSelectionRequest > **)&_swig_go_result = (ImVector< ImGuiSelectionRequest > *)result; 
  return _swig_go_result;
}


void _wrap_ImGuiMultiSelectIO_RangeSrcItem_set_imgui_568d46c1e1b4102a(ImGuiMultiSelectIO *_swig_go_0, long long _swig_go_1) {
  ImGuiMultiSelectIO *arg1 = (ImGuiMultiSelectIO *) 0 ;
  ImGuiSelectionUserData arg2 ;
  
  arg1 = *(ImGuiMultiSelectIO **)&_swig_go_0; 
  arg2 = (ImGuiSelectionUserData)_swig_go_1; 
  
  if (arg1) (arg1)->RangeSrcItem = arg2;
  
}


long long _wrap_ImGuiMultiSelectIO_RangeSrcItem_get_imgui_568d46c1e1b4102a(ImGuiMultiSelectIO *_swig_go_0) {
  ImGuiMultiSelectIO *arg1 = (ImGuiMultiSelectIO *) 0 ;
  ImGuiSelectionUserData result;
  long long _swig_go_result;
  
  arg1 = *(ImGuiMultiSelectIO **)&_swig_go_0; 
  
  result = (ImGuiSelectionUserData) ((arg1)->RangeSrcItem);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiMultiSelectIO_NavIdItem_set_imgui_568d46c1e1b4102a(ImGuiMultiSelectIO *_swig_go_0, long long _swig_go_1) {
  ImGuiMultiSelectIO *arg1 = (ImGuiMultiSelectIO *) 0 ;
  ImGuiSelectionUserData arg2 ;
  
  arg1 = *(ImGuiMultiSelectIO **)&_swig_go_0; 
  arg2 = (ImGuiSelectionUserData)_swig_go_1; 
  
  if (arg1) (arg1)->NavIdItem = arg2;
  
}


long long _wrap_ImGuiMultiSelectIO_NavIdItem_get_imgui_568d46c1e1b4102a(ImGuiMultiSelectIO *_swig_go_0) {
  ImGuiMultiSelectIO *arg1 = (ImGuiMultiSelectIO *) 0 ;
  ImGuiSelectionUserData result;
  long long _swig_go_result;
  
  arg1 = *(ImGuiMultiSelectIO **)&_swig_go_0; 
  
  result = (ImGuiSelectionUserData) ((arg1)->NavIdItem);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiMultiSelectIO_NavIdSelected_set_imgui_568d46c1e1b4102a(ImGuiMultiSelectIO *_swig_go_0, bool _swig_go_1) {
  ImGuiMultiSelectIO *arg1 = (ImGuiMultiSelectIO *) 0 ;
  bool arg2 ;
  
  arg1 = *(ImGuiMultiSelectIO **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->NavIdSelected = arg2;
  
}


bool _wrap_ImGuiMultiSelectIO_NavIdSelected_get_imgui_568d46c1e1b4102a(ImGuiMultiSelectIO *_swig_go_0) {
  ImGuiMultiSelectIO *arg1 = (ImGuiMultiSelectIO *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ImGuiMultiSelectIO **)&_swig_go_0; 
  
  result = (bool) ((arg1)->NavIdSelected);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiMultiSelectIO_RangeSrcReset_set_imgui_568d46c1e1b4102a(ImGuiMultiSelectIO *_swig_go_0, bool _swig_go_1) {
  ImGuiMultiSelectIO *arg1 = (ImGuiMultiSelectIO *) 0 ;
  bool arg2 ;
  
  arg1 = *(ImGuiMultiSelectIO **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->RangeSrcReset = arg2;
  
}


bool _wrap_ImGuiMultiSelectIO_RangeSrcReset_get_imgui_568d46c1e1b4102a(ImGuiMultiSelectIO *_swig_go_0) {
  ImGuiMultiSelectIO *arg1 = (ImGuiMultiSelectIO *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ImGuiMultiSelectIO **)&_swig_go_0; 
  
  result = (bool) ((arg1)->RangeSrcReset);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiMultiSelectIO_ItemsCount_set_imgui_568d46c1e1b4102a(ImGuiMultiSelectIO *_swig_go_0, intgo _swig_go_1) {
  ImGuiMultiSelectIO *arg1 = (ImGuiMultiSelectIO *) 0 ;
  int arg2 ;
  
  arg1 = *(ImGuiMultiSelectIO **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->ItemsCount = arg2;
  
}


intgo _wrap_ImGuiMultiSelectIO_ItemsCount_get_imgui_568d46c1e1b4102a(ImGuiMultiSelectIO *_swig_go_0) {
  ImGuiMultiSelectIO *arg1 = (ImGuiMultiSelectIO *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(ImGuiMultiSelectIO **)&_swig_go_0; 
  
  result = (int) ((arg1)->ItemsCount);
  _swig_go_result = result; 
  return _swig_go_result;
}


ImGuiMultiSelectIO *_wrap_new_ImGuiMultiSelectIO_imgui_568d46c1e1b4102a() {
  ImGuiMultiSelectIO *result = 0 ;
  ImGuiMultiSelectIO *_swig_go_result;
  
  
  result = (ImGuiMultiSelectIO *)new ImGuiMultiSelectIO();
  *(ImGuiMultiSelectIO **)&_swig_go_result = (ImGuiMultiSelectIO *)result; 
  return _swig_go_result;
}


void _wrap_delete_ImGuiMultiSelectIO_imgui_568d46c1e1b4102a(ImGuiMultiSelectIO *_swig_go_0) {
  ImGuiMultiSelectIO *arg1 = (ImGuiMultiSelectIO *) 0 ;
  
  arg1 = *(ImGuiMultiSelectIO **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_ImGuiSelectionRequestType_None_imgui_568d46c1e1b4102a() {
  ImGuiSelectionRequestType result;
  intgo _swig_go_result;
  
  
  result = ImGuiSelectionRequestType_None;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiSelectionRequestType_SetAll_imgui_568d46c1e1b4102a() {
  ImGuiSelectionRequestType result;
  intgo _swig_go_result;
  
  
  result = ImGuiSelectionRequestType_SetAll;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiSelectionRequestType_SetRange_imgui_568d46c1e1b4102a() {
  ImGuiSelectionRequestType result;
  intgo _swig_go_result;
  
  
  result = ImGuiSelectionRequestType_SetRange;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_ImGuiSelectionRequest_Type_set_imgui_568d46c1e1b4102a(ImGuiSelectionRequest *_swig_go_0, intgo _swig_go_1) {
  ImGuiSelectionRequest *arg1 = (ImGuiSelectionRequest *) 0 ;
  ImGuiSelectionRequestType arg2 ;
  
  arg1 = *(ImGuiSelectionRequest **)&_swig_go_0; 
  arg2 = (ImGuiSelectionRequestType)_swig_go_1; 
  
  if (arg1) (arg1)->Type = arg2;
  
}


intgo _wrap_ImGuiSelectionRequest_Type_get_imgui_568d46c1e1b4102a(ImGuiSelectionRequest *_swig_go_0) {
  ImGuiSelectionRequest *arg1 = (ImGuiSelectionRequest *) 0 ;
  ImGuiSelectionRequestType result;
  intgo _swig_go_result;
  
  arg1 = *(ImGuiSelectionRequest **)&_swig_go_0; 
  
  result = (ImGuiSelectionRequestType) ((arg1)->Type);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_ImGuiSelectionRequest_Selected_set_imgui_568d46c1e1b4102a(ImGuiSelectionRequest *_swig_go_0, bool _swig_go_1) {
  ImGuiSelectionRequest *arg1 = (ImGuiSelectionRequest *) 0 ;
  bool arg2 ;
  
  arg1 = *(ImGuiSelectionRequest **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->Selected = arg2;
  
}


bool _wrap_ImGuiSelectionRequest_Selected_get_imgui_568d46c1e1b4102a(ImGuiSelectionRequest *_swig_go_0) {
  ImGuiSelectionRequest *arg1 = (ImGuiSelectionRequest *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ImGuiSelectionRequest **)&_swig_go_0; 
  
  result = (bool) ((arg1)->Selected);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiSelectionRequest_RangeDirection_set_imgui_568d46c1e1b4102a(ImGuiSelectionRequest *_swig_go_0, char _swig_go_1) {
  ImGuiSelectionRequest *arg1 = (ImGuiSelectionRequest *) 0 ;
  ImS8 arg2 ;
  
  arg1 = *(ImGuiSelectionRequest **)&_swig_go_0; 
  arg2 = (ImS8)_swig_go_1; 
  
  if (arg1) (arg1)->RangeDirection = arg2;
  
}


char _wrap_ImGuiSelectionRequest_RangeDirection_get_imgui_568d46c1e1b4102a(ImGuiSelectionRequest *_swig_go_0) {
  ImGuiSelectionRequest *arg1 = (ImGuiSelectionRequest *) 0 ;
  ImS8 result;
  char _swig_go_result;
  
  arg1 = *(ImGuiSelectionRequest **)&_swig_go_0; 
  
  result = (ImS8) ((arg1)->RangeDirection);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiSelectionRequest_RangeFirstItem_set_imgui_568d46c1e1b4102a(ImGuiSelectionRequest *_swig_go_0, long long _swig_go_1) {
  ImGuiSelectionRequest *arg1 = (ImGuiSelectionRequest *) 0 ;
  ImGuiSelectionUserData arg2 ;
  
  arg1 = *(ImGuiSelectionRequest **)&_swig_go_0; 
  arg2 = (ImGuiSelectionUserData)_swig_go_1; 
  
  if (arg1) (arg1)->RangeFirstItem = arg2;
  
}


long long _wrap_ImGuiSelectionRequest_RangeFirstItem_get_imgui_568d46c1e1b4102a(ImGuiSelectionRequest *_swig_go_0) {
  ImGuiSelectionRequest *arg1 = (ImGuiSelectionRequest *) 0 ;
  ImGuiSelectionUserData result;
  long long _swig_go_result;
  
  arg1 = *(ImGuiSelectionRequest **)&_swig_go_0; 
  
  result = (ImGuiSelectionUserData) ((arg1)->RangeFirstItem);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiSelectionRequest_RangeLastItem_set_imgui_568d46c1e1b4102a(ImGuiSelectionRequest *_swig_go_0, long long _swig_go_1) {
  ImGuiSelectionRequest *arg1 = (ImGuiSelectionRequest *) 0 ;
  ImGuiSelectionUserData arg2 ;
  
  arg1 = *(ImGuiSelectionRequest **)&_swig_go_0; 
  arg2 = (ImGuiSelectionUserData)_swig_go_1; 
  
  if (arg1) (arg1)->RangeLastItem = arg2;
  
}


long long _wrap_ImGuiSelectionRequest_RangeLastItem_get_imgui_568d46c1e1b4102a(ImGuiSelectionRequest *_swig_go_0) {
  ImGuiSelectionRequest *arg1 = (ImGuiSelectionRequest *) 0 ;
  ImGuiSelectionUserData result;
  long long _swig_go_result;
  
  arg1 = *(ImGuiSelectionRequest **)&_swig_go_0; 
  
  result = (ImGuiSelectionUserData) ((arg1)->RangeLastItem);
  _swig_go_result = result; 
  return _swig_go_result;
}


ImGuiSelectionRequest *_wrap_new_ImGuiSelectionRequest_imgui_568d46c1e1b4102a() {
  ImGuiSelectionRequest *result = 0 ;
  ImGuiSelectionRequest *_swig_go_result;
  
  
  result = (ImGuiSelectionRequest *)new ImGuiSelectionRequest();
  *(ImGuiSelectionRequest **)&_swig_go_result = (ImGuiSelectionRequest *)result; 
  return _swig_go_result;
}


void _wrap_delete_ImGuiSelectionRequest_imgui_568d46c1e1b4102a(ImGuiSelectionRequest *_swig_go_0) {
  ImGuiSelectionRequest *arg1 = (ImGuiSelectionRequest *) 0 ;
  
  arg1 = *(ImGuiSelectionRequest **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_ImGuiSelectionBasicStorage_Size_set_imgui_568d46c1e1b4102a(ImGuiSelectionBasicStorage *_swig_go_0, intgo _swig_go_1) {
  ImGuiSelectionBasicStorage *arg1 = (ImGuiSelectionBasicStorage *) 0 ;
  int arg2 ;
  
  arg1 = *(ImGuiSelectionBasicStorage **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->Size = arg2;
  
}


intgo _wrap_ImGuiSelectionBasicStorage_Size_get_imgui_568d46c1e1b4102a(ImGuiSelectionBasicStorage *_swig_go_0) {
  ImGuiSelectionBasicStorage *arg1 = (ImGuiSelectionBasicStorage *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(ImGuiSelectionBasicStorage **)&_swig_go_0; 
  
  result = (int) ((arg1)->Size);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiSelectionBasicStorage_PreserveOrder_set_imgui_568d46c1e1b4102a(ImGuiSelectionBasicStorage *_swig_go_0, bool _swig_go_1) {
  ImGuiSelectionBasicStorage *arg1 = (ImGuiSelectionBasicStorage *) 0 ;
  bool arg2 ;
  
  arg1 = *(ImGuiSelectionBasicStorage **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->PreserveOrder = arg2;
  
}


bool _wrap_ImGuiSelectionBasicStorage_PreserveOrder_get_imgui_568d46c1e1b4102a(ImGuiSelectionBasicStorage *_swig_go_0) {
  ImGuiSelectionBasicStorage *arg1 = (ImGuiSelectionBasicStorage *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ImGuiSelectionBasicStorage **)&_swig_go_0; 
  
  result = (bool) ((arg1)->PreserveOrder);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiSelectionBasicStorage_UserData_set_imgui_568d46c1e1b4102a(ImGuiSelectionBasicStorage *_swig_go_0, void *_swig_go_1) {
  ImGuiSelectionBasicStorage *arg1 = (ImGuiSelectionBasicStorage *) 0 ;
  void *arg2 = (void *) 0 ;
  
  arg1 = *(ImGuiSelectionBasicStorage **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  if (arg1) (arg1)->UserData = arg2;
  
}


void *_wrap_ImGuiSelectionBasicStorage_UserData_get_imgui_568d46c1e1b4102a(ImGuiSelectionBasicStorage *_swig_go_0) {
  ImGuiSelectionBasicStorage *arg1 = (ImGuiSelectionBasicStorage *) 0 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = *(ImGuiSelectionBasicStorage **)&_swig_go_0; 
  
  result = (void *) ((arg1)->UserData);
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


void _wrap_ImGuiSelectionBasicStorage_AdapterIndexToStorageId_set_imgui_568d46c1e1b4102a(ImGuiSelectionBasicStorage *_swig_go_0, void* _swig_go_1) {
  ImGuiSelectionBasicStorage *arg1 = (ImGuiSelectionBasicStorage *) 0 ;
  ImGuiID (*arg2)(ImGuiSelectionBasicStorage *,int) = (ImGuiID (*)(ImGuiSelectionBasicStorage *,int)) 0 ;
  
  arg1 = *(ImGuiSelectionBasicStorage **)&_swig_go_0; 
  arg2 = *(ImGuiID (**)(ImGuiSelectionBasicStorage *,int))&_swig_go_1; 
  
  if (arg1) (arg1)->AdapterIndexToStorageId = arg2;
  
}


void* _wrap_ImGuiSelectionBasicStorage_AdapterIndexToStorageId_get_imgui_568d46c1e1b4102a(ImGuiSelectionBasicStorage *_swig_go_0) {
  ImGuiSelectionBasicStorage *arg1 = (ImGuiSelectionBasicStorage *) 0 ;
  ImGuiID (*result)(ImGuiSelectionBasicStorage *,int) = 0 ;
  void* _swig_go_result;
  
  arg1 = *(ImGuiSelectionBasicStorage **)&_swig_go_0; 
  
  result = (ImGuiID (*)(ImGuiSelectionBasicStorage *,int)) ((arg1)->AdapterIndexToStorageId);
  *(ImGuiID (**)(ImGuiSelectionBasicStorage *,int))&_swig_go_result = (ImGuiID (*)(ImGuiSelectionBasicStorage *,int))result; 
  return _swig_go_result;
}


void _wrap_ImGuiSelectionBasicStorage__SelectionOrder_set_imgui_568d46c1e1b4102a(ImGuiSelectionBasicStorage *_swig_go_0, intgo _swig_go_1) {
  ImGuiSelectionBasicStorage *arg1 = (ImGuiSelectionBasicStorage *) 0 ;
  int arg2 ;
  
  arg1 = *(ImGuiSelectionBasicStorage **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->_SelectionOrder = arg2;
  
}


intgo _wrap_ImGuiSelectionBasicStorage__SelectionOrder_get_imgui_568d46c1e1b4102a(ImGuiSelectionBasicStorage *_swig_go_0) {
  ImGuiSelectionBasicStorage *arg1 = (ImGuiSelectionBasicStorage *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(ImGuiSelectionBasicStorage **)&_swig_go_0; 
  
  result = (int) ((arg1)->_SelectionOrder);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiSelectionBasicStorage__Storage_set_imgui_568d46c1e1b4102a(ImGuiSelectionBasicStorage *_swig_go_0, ImGuiStorage *_swig_go_1) {
  ImGuiSelectionBasicStorage *arg1 = (ImGuiSelectionBasicStorage *) 0 ;
  ImGuiStorage *arg2 = (ImGuiStorage *) 0 ;
  
  arg1 = *(ImGuiSelectionBasicStorage **)&_swig_go_0; 
  arg2 = *(ImGuiStorage **)&_swig_go_1; 
  
  if (arg1) (arg1)->_Storage = *arg2;
  
}


ImGuiStorage *_wrap_ImGuiSelectionBasicStorage__Storage_get_imgui_568d46c1e1b4102a(ImGuiSelectionBasicStorage *_swig_go_0) {
  ImGuiSelectionBasicStorage *arg1 = (ImGuiSelectionBasicStorage *) 0 ;
  ImGuiStorage *result = 0 ;
  ImGuiStorage *_swig_go_result;
  
  arg1 = *(ImGuiSelectionBasicStorage **)&_swig_go_0; 
  
  result = (ImGuiStorage *)& ((arg1)->_Storage);
  *(ImGuiStorage **)&_swig_go_result = (ImGuiStorage *)result; 
  return _swig_go_result;
}


ImGuiSelectionBasicStorage *_wrap_new_ImGuiSelectionBasicStorage_imgui_568d46c1e1b4102a() {
  ImGuiSelectionBasicStorage *result = 0 ;
  ImGuiSelectionBasicStorage *_swig_go_result;
  
  
  result = (ImGuiSelectionBasicStorage *)new ImGuiSelectionBasicStorage();
  *(ImGuiSelectionBasicStorage **)&_swig_go_result = (ImGuiSelectionBasicStorage *)result; 
  return _swig_go_result;
}


void _wrap_ImGuiSelectionBasicStorage_ApplyRequests_imgui_568d46c1e1b4102a(ImGuiSelectionBasicStorage *_swig_go_0, ImGuiMultiSelectIO *_swig_go_1) {
  ImGuiSelectionBasicStorage *arg1 = (ImGuiSelectionBasicStorage *) 0 ;
  ImGuiMultiSelectIO *arg2 = (ImGuiMultiSelectIO *) 0 ;
  
  arg1 = *(ImGuiSelectionBasicStorage **)&_swig_go_0; 
  arg2 = *(ImGuiMultiSelectIO **)&_swig_go_1; 
  
  (arg1)->ApplyRequests(arg2);
  
}


bool _wrap_ImGuiSelectionBasicStorage_Contains_imgui_568d46c1e1b4102a(ImGuiSelectionBasicStorage *_swig_go_0, intgo _swig_go_1) {
  ImGuiSelectionBasicStorage *arg1 = (ImGuiSelectionBasicStorage *) 0 ;
  ImGuiID arg2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ImGuiSelectionBasicStorage **)&_swig_go_0; 
  arg2 = (ImGuiID)_swig_go_1; 
  
  result = (bool)((ImGuiSelectionBasicStorage const *)arg1)->Contains(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiSelectionBasicStorage_Clear_imgui_568d46c1e1b4102a(ImGuiSelectionBasicStorage *_swig_go_0) {
  ImGuiSelectionBasicStorage *arg1 = (ImGuiSelectionBasicStorage *) 0 ;
  
  arg1 = *(ImGuiSelectionBasicStorage **)&_swig_go_0; 
  
  (arg1)->Clear();
  
}


void _wrap_ImGuiSelectionBasicStorage_Swap_imgui_568d46c1e1b4102a(ImGuiSelectionBasicStorage *_swig_go_0, ImGuiSelectionBasicStorage *_swig_go_1) {
  ImGuiSelectionBasicStorage *arg1 = (ImGuiSelectionBasicStorage *) 0 ;
  ImGuiSelectionBasicStorage *arg2 = 0 ;
  
  arg1 = *(ImGuiSelectionBasicStorage **)&_swig_go_0; 
  arg2 = *(ImGuiSelectionBasicStorage **)&_swig_go_1; 
  
  (arg1)->Swap(*arg2);
  
}


void _wrap_ImGuiSelectionBasicStorage_SetItemSelected_imgui_568d46c1e1b4102a(ImGuiSelectionBasicStorage *_swig_go_0, intgo _swig_go_1, bool _swig_go_2) {
  ImGuiSelectionBasicStorage *arg1 = (ImGuiSelectionBasicStorage *) 0 ;
  ImGuiID arg2 ;
  bool arg3 ;
  
  arg1 = *(ImGuiSelectionBasicStorage **)&_swig_go_0; 
  arg2 = (ImGuiID)_swig_go_1; 
  arg3 = (bool)_swig_go_2; 
  
  (arg1)->SetItemSelected(arg2,arg3);
  
}


bool _wrap_ImGuiSelectionBasicStorage_GetNextSelectedItem_imgui_568d46c1e1b4102a(ImGuiSelectionBasicStorage *_swig_go_0, void **_swig_go_1, intgo *_swig_go_2) {
  ImGuiSelectionBasicStorage *arg1 = (ImGuiSelectionBasicStorage *) 0 ;
  void **arg2 = (void **) 0 ;
  ImGuiID *arg3 = (ImGuiID *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ImGuiSelectionBasicStorage **)&_swig_go_0; 
  arg2 = *(void ***)&_swig_go_1; 
  arg3 = *(ImGuiID **)&_swig_go_2; 
  
  result = (bool)(arg1)->GetNextSelectedItem(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiSelectionBasicStorage_GetStorageIdFromIndex_imgui_568d46c1e1b4102a(ImGuiSelectionBasicStorage *_swig_go_0, intgo _swig_go_1) {
  ImGuiSelectionBasicStorage *arg1 = (ImGuiSelectionBasicStorage *) 0 ;
  int arg2 ;
  ImGuiID result;
  intgo _swig_go_result;
  
  arg1 = *(ImGuiSelectionBasicStorage **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (ImGuiID)(arg1)->GetStorageIdFromIndex(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_ImGuiSelectionBasicStorage_imgui_568d46c1e1b4102a(ImGuiSelectionBasicStorage *_swig_go_0) {
  ImGuiSelectionBasicStorage *arg1 = (ImGuiSelectionBasicStorage *) 0 ;
  
  arg1 = *(ImGuiSelectionBasicStorage **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_ImGuiSelectionExternalStorage_UserData_set_imgui_568d46c1e1b4102a(ImGuiSelectionExternalStorage *_swig_go_0, void *_swig_go_1) {
  ImGuiSelectionExternalStorage *arg1 = (ImGuiSelectionExternalStorage *) 0 ;
  void *arg2 = (void *) 0 ;
  
  arg1 = *(ImGuiSelectionExternalStorage **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  if (arg1) (arg1)->UserData = arg2;
  
}


void *_wrap_ImGuiSelectionExternalStorage_UserData_get_imgui_568d46c1e1b4102a(ImGuiSelectionExternalStorage *_swig_go_0) {
  ImGuiSelectionExternalStorage *arg1 = (ImGuiSelectionExternalStorage *) 0 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = *(ImGuiSelectionExternalStorage **)&_swig_go_0; 
  
  result = (void *) ((arg1)->UserData);
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


void _wrap_ImGuiSelectionExternalStorage_AdapterSetItemSelected_set_imgui_568d46c1e1b4102a(ImGuiSelectionExternalStorage *_swig_go_0, void* _swig_go_1) {
  ImGuiSelectionExternalStorage *arg1 = (ImGuiSelectionExternalStorage *) 0 ;
  void (*arg2)(ImGuiSelectionExternalStorage *,int,bool) = (void (*)(ImGuiSelectionExternalStorage *,int,bool)) 0 ;
  
  arg1 = *(ImGuiSelectionExternalStorage **)&_swig_go_0; 
  arg2 = *(void (**)(ImGuiSelectionExternalStorage *,int,bool))&_swig_go_1; 
  
  if (arg1) (arg1)->AdapterSetItemSelected = arg2;
  
}


void* _wrap_ImGuiSelectionExternalStorage_AdapterSetItemSelected_get_imgui_568d46c1e1b4102a(ImGuiSelectionExternalStorage *_swig_go_0) {
  ImGuiSelectionExternalStorage *arg1 = (ImGuiSelectionExternalStorage *) 0 ;
  void (*result)(ImGuiSelectionExternalStorage *,int,bool) = 0 ;
  void* _swig_go_result;
  
  arg1 = *(ImGuiSelectionExternalStorage **)&_swig_go_0; 
  
  result = (void (*)(ImGuiSelectionExternalStorage *,int,bool)) ((arg1)->AdapterSetItemSelected);
  *(void (**)(ImGuiSelectionExternalStorage *,int,bool))&_swig_go_result = (void (*)(ImGuiSelectionExternalStorage *,int,bool))result; 
  return _swig_go_result;
}


ImGuiSelectionExternalStorage *_wrap_new_ImGuiSelectionExternalStorage_imgui_568d46c1e1b4102a() {
  ImGuiSelectionExternalStorage *result = 0 ;
  ImGuiSelectionExternalStorage *_swig_go_result;
  
  
  result = (ImGuiSelectionExternalStorage *)new ImGuiSelectionExternalStorage();
  *(ImGuiSelectionExternalStorage **)&_swig_go_result = (ImGuiSelectionExternalStorage *)result; 
  return _swig_go_result;
}


void _wrap_ImGuiSelectionExternalStorage_ApplyRequests_imgui_568d46c1e1b4102a(ImGuiSelectionExternalStorage *_swig_go_0, ImGuiMultiSelectIO *_swig_go_1) {
  ImGuiSelectionExternalStorage *arg1 = (ImGuiSelectionExternalStorage *) 0 ;
  ImGuiMultiSelectIO *arg2 = (ImGuiMultiSelectIO *) 0 ;
  
  arg1 = *(ImGuiSelectionExternalStorage **)&_swig_go_0; 
  arg2 = *(ImGuiMultiSelectIO **)&_swig_go_1; 
  
  (arg1)->ApplyRequests(arg2);
  
}


void _wrap_delete_ImGuiSelectionExternalStorage_imgui_568d46c1e1b4102a(ImGuiSelectionExternalStorage *_swig_go_0) {
  ImGuiSelectionExternalStorage *arg1 = (ImGuiSelectionExternalStorage *) 0 ;
  
  arg1 = *(ImGuiSelectionExternalStorage **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_IM_DRAWLIST_TEX_LINES_WIDTH_MAX_imgui_568d46c1e1b4102a() {
  int result;
  intgo _swig_go_result;
  
  
  result = (int)((63));
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImDrawCmd_ClipRect_set_imgui_568d46c1e1b4102a(ImDrawCmd *_swig_go_0, ImVec4 *_swig_go_1) {
  ImDrawCmd *arg1 = (ImDrawCmd *) 0 ;
  ImVec4 *arg2 = (ImVec4 *) 0 ;
  
  arg1 = *(ImDrawCmd **)&_swig_go_0; 
  arg2 = *(ImVec4 **)&_swig_go_1; 
  
  if (arg1) (arg1)->ClipRect = *arg2;
  
}


ImVec4 *_wrap_ImDrawCmd_ClipRect_get_imgui_568d46c1e1b4102a(ImDrawCmd *_swig_go_0) {
  ImDrawCmd *arg1 = (ImDrawCmd *) 0 ;
  ImVec4 *result = 0 ;
  ImVec4 *_swig_go_result;
  
  arg1 = *(ImDrawCmd **)&_swig_go_0; 
  
  result = (ImVec4 *)& ((arg1)->ClipRect);
  *(ImVec4 **)&_swig_go_result = (ImVec4 *)result; 
  return _swig_go_result;
}


void _wrap_ImDrawCmd_TextureId_set_imgui_568d46c1e1b4102a(ImDrawCmd *_swig_go_0, ImTextureID _swig_go_1) {
  ImDrawCmd *arg1 = (ImDrawCmd *) 0 ;
  ImTextureID arg2 = (ImTextureID) 0 ;
  
  arg1 = *(ImDrawCmd **)&_swig_go_0; 
  arg2 = *(ImTextureID *)&_swig_go_1; 
  
  if (arg1) (arg1)->TextureId = arg2;
  
}


ImTextureID _wrap_ImDrawCmd_TextureId_get_imgui_568d46c1e1b4102a(ImDrawCmd *_swig_go_0) {
  ImDrawCmd *arg1 = (ImDrawCmd *) 0 ;
  ImTextureID result;
  ImTextureID _swig_go_result;
  
  arg1 = *(ImDrawCmd **)&_swig_go_0; 
  
  result = (ImTextureID) ((arg1)->TextureId);
  *(ImTextureID *)&_swig_go_result = (ImTextureID)result; 
  return _swig_go_result;
}


void _wrap_ImDrawCmd_VtxOffset_set_imgui_568d46c1e1b4102a(ImDrawCmd *_swig_go_0, intgo _swig_go_1) {
  ImDrawCmd *arg1 = (ImDrawCmd *) 0 ;
  unsigned int arg2 ;
  
  arg1 = *(ImDrawCmd **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  if (arg1) (arg1)->VtxOffset = arg2;
  
}


intgo _wrap_ImDrawCmd_VtxOffset_get_imgui_568d46c1e1b4102a(ImDrawCmd *_swig_go_0) {
  ImDrawCmd *arg1 = (ImDrawCmd *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(ImDrawCmd **)&_swig_go_0; 
  
  result = (unsigned int) ((arg1)->VtxOffset);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImDrawCmd_IdxOffset_set_imgui_568d46c1e1b4102a(ImDrawCmd *_swig_go_0, intgo _swig_go_1) {
  ImDrawCmd *arg1 = (ImDrawCmd *) 0 ;
  unsigned int arg2 ;
  
  arg1 = *(ImDrawCmd **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  if (arg1) (arg1)->IdxOffset = arg2;
  
}


intgo _wrap_ImDrawCmd_IdxOffset_get_imgui_568d46c1e1b4102a(ImDrawCmd *_swig_go_0) {
  ImDrawCmd *arg1 = (ImDrawCmd *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(ImDrawCmd **)&_swig_go_0; 
  
  result = (unsigned int) ((arg1)->IdxOffset);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImDrawCmd_ElemCount_set_imgui_568d46c1e1b4102a(ImDrawCmd *_swig_go_0, intgo _swig_go_1) {
  ImDrawCmd *arg1 = (ImDrawCmd *) 0 ;
  unsigned int arg2 ;
  
  arg1 = *(ImDrawCmd **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  if (arg1) (arg1)->ElemCount = arg2;
  
}


intgo _wrap_ImDrawCmd_ElemCount_get_imgui_568d46c1e1b4102a(ImDrawCmd *_swig_go_0) {
  ImDrawCmd *arg1 = (ImDrawCmd *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(ImDrawCmd **)&_swig_go_0; 
  
  result = (unsigned int) ((arg1)->ElemCount);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImDrawCmd_UserCallback_set_imgui_568d46c1e1b4102a(ImDrawCmd *_swig_go_0, void* _swig_go_1) {
  ImDrawCmd *arg1 = (ImDrawCmd *) 0 ;
  ImDrawCallback arg2 = (ImDrawCallback) 0 ;
  
  arg1 = *(ImDrawCmd **)&_swig_go_0; 
  arg2 = *(ImDrawCallback *)&_swig_go_1; 
  
  if (arg1) (arg1)->UserCallback = arg2;
  
}


void* _wrap_ImDrawCmd_UserCallback_get_imgui_568d46c1e1b4102a(ImDrawCmd *_swig_go_0) {
  ImDrawCmd *arg1 = (ImDrawCmd *) 0 ;
  ImDrawCallback result;
  void* _swig_go_result;
  
  arg1 = *(ImDrawCmd **)&_swig_go_0; 
  
  result = (ImDrawCallback) ((arg1)->UserCallback);
  *(ImDrawCallback *)&_swig_go_result = (ImDrawCallback)result; 
  return _swig_go_result;
}


void _wrap_ImDrawCmd_UserCallbackData_set_imgui_568d46c1e1b4102a(ImDrawCmd *_swig_go_0, void *_swig_go_1) {
  ImDrawCmd *arg1 = (ImDrawCmd *) 0 ;
  void *arg2 = (void *) 0 ;
  
  arg1 = *(ImDrawCmd **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  if (arg1) (arg1)->UserCallbackData = arg2;
  
}


void *_wrap_ImDrawCmd_UserCallbackData_get_imgui_568d46c1e1b4102a(ImDrawCmd *_swig_go_0) {
  ImDrawCmd *arg1 = (ImDrawCmd *) 0 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = *(ImDrawCmd **)&_swig_go_0; 
  
  result = (void *) ((arg1)->UserCallbackData);
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


ImDrawCmd *_wrap_new_ImDrawCmd_imgui_568d46c1e1b4102a() {
  ImDrawCmd *result = 0 ;
  ImDrawCmd *_swig_go_result;
  
  
  result = (ImDrawCmd *)new ImDrawCmd();
  *(ImDrawCmd **)&_swig_go_result = (ImDrawCmd *)result; 
  return _swig_go_result;
}


ImTextureID _wrap_ImDrawCmd_GetTexID_imgui_568d46c1e1b4102a(ImDrawCmd *_swig_go_0) {
  ImDrawCmd *arg1 = (ImDrawCmd *) 0 ;
  ImTextureID result;
  ImTextureID _swig_go_result;
  
  arg1 = *(ImDrawCmd **)&_swig_go_0; 
  
  result = (ImTextureID)((ImDrawCmd const *)arg1)->GetTexID();
  *(ImTextureID *)&_swig_go_result = (ImTextureID)result; 
  return _swig_go_result;
}


void _wrap_delete_ImDrawCmd_imgui_568d46c1e1b4102a(ImDrawCmd *_swig_go_0) {
  ImDrawCmd *arg1 = (ImDrawCmd *) 0 ;
  
  arg1 = *(ImDrawCmd **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_ImDrawVert_pos_set_imgui_568d46c1e1b4102a(ImDrawVert *_swig_go_0, ImVec2 *_swig_go_1) {
  ImDrawVert *arg1 = (ImDrawVert *) 0 ;
  ImVec2 *arg2 = (ImVec2 *) 0 ;
  
  arg1 = *(ImDrawVert **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  
  if (arg1) (arg1)->pos = *arg2;
  
}


ImVec2 *_wrap_ImDrawVert_pos_get_imgui_568d46c1e1b4102a(ImDrawVert *_swig_go_0) {
  ImDrawVert *arg1 = (ImDrawVert *) 0 ;
  ImVec2 *result = 0 ;
  ImVec2 *_swig_go_result;
  
  arg1 = *(ImDrawVert **)&_swig_go_0; 
  
  result = (ImVec2 *)& ((arg1)->pos);
  *(ImVec2 **)&_swig_go_result = (ImVec2 *)result; 
  return _swig_go_result;
}


void _wrap_ImDrawVert_uv_set_imgui_568d46c1e1b4102a(ImDrawVert *_swig_go_0, ImVec2 *_swig_go_1) {
  ImDrawVert *arg1 = (ImDrawVert *) 0 ;
  ImVec2 *arg2 = (ImVec2 *) 0 ;
  
  arg1 = *(ImDrawVert **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  
  if (arg1) (arg1)->uv = *arg2;
  
}


ImVec2 *_wrap_ImDrawVert_uv_get_imgui_568d46c1e1b4102a(ImDrawVert *_swig_go_0) {
  ImDrawVert *arg1 = (ImDrawVert *) 0 ;
  ImVec2 *result = 0 ;
  ImVec2 *_swig_go_result;
  
  arg1 = *(ImDrawVert **)&_swig_go_0; 
  
  result = (ImVec2 *)& ((arg1)->uv);
  *(ImVec2 **)&_swig_go_result = (ImVec2 *)result; 
  return _swig_go_result;
}


void _wrap_ImDrawVert_col_set_imgui_568d46c1e1b4102a(ImDrawVert *_swig_go_0, intgo _swig_go_1) {
  ImDrawVert *arg1 = (ImDrawVert *) 0 ;
  ImU32 arg2 ;
  
  arg1 = *(ImDrawVert **)&_swig_go_0; 
  arg2 = (ImU32)_swig_go_1; 
  
  if (arg1) (arg1)->col = arg2;
  
}


intgo _wrap_ImDrawVert_col_get_imgui_568d46c1e1b4102a(ImDrawVert *_swig_go_0) {
  ImDrawVert *arg1 = (ImDrawVert *) 0 ;
  ImU32 result;
  intgo _swig_go_result;
  
  arg1 = *(ImDrawVert **)&_swig_go_0; 
  
  result = (ImU32) ((arg1)->col);
  _swig_go_result = result; 
  return _swig_go_result;
}


ImDrawVert *_wrap_new_ImDrawVert_imgui_568d46c1e1b4102a() {
  ImDrawVert *result = 0 ;
  ImDrawVert *_swig_go_result;
  
  
  result = (ImDrawVert *)new ImDrawVert();
  *(ImDrawVert **)&_swig_go_result = (ImDrawVert *)result; 
  return _swig_go_result;
}


void _wrap_delete_ImDrawVert_imgui_568d46c1e1b4102a(ImDrawVert *_swig_go_0) {
  ImDrawVert *arg1 = (ImDrawVert *) 0 ;
  
  arg1 = *(ImDrawVert **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_ImDrawCmdHeader_ClipRect_set_imgui_568d46c1e1b4102a(ImDrawCmdHeader *_swig_go_0, ImVec4 *_swig_go_1) {
  ImDrawCmdHeader *arg1 = (ImDrawCmdHeader *) 0 ;
  ImVec4 *arg2 = (ImVec4 *) 0 ;
  
  arg1 = *(ImDrawCmdHeader **)&_swig_go_0; 
  arg2 = *(ImVec4 **)&_swig_go_1; 
  
  if (arg1) (arg1)->ClipRect = *arg2;
  
}


ImVec4 *_wrap_ImDrawCmdHeader_ClipRect_get_imgui_568d46c1e1b4102a(ImDrawCmdHeader *_swig_go_0) {
  ImDrawCmdHeader *arg1 = (ImDrawCmdHeader *) 0 ;
  ImVec4 *result = 0 ;
  ImVec4 *_swig_go_result;
  
  arg1 = *(ImDrawCmdHeader **)&_swig_go_0; 
  
  result = (ImVec4 *)& ((arg1)->ClipRect);
  *(ImVec4 **)&_swig_go_result = (ImVec4 *)result; 
  return _swig_go_result;
}


void _wrap_ImDrawCmdHeader_TextureId_set_imgui_568d46c1e1b4102a(ImDrawCmdHeader *_swig_go_0, ImTextureID _swig_go_1) {
  ImDrawCmdHeader *arg1 = (ImDrawCmdHeader *) 0 ;
  ImTextureID arg2 = (ImTextureID) 0 ;
  
  arg1 = *(ImDrawCmdHeader **)&_swig_go_0; 
  arg2 = *(ImTextureID *)&_swig_go_1; 
  
  if (arg1) (arg1)->TextureId = arg2;
  
}


ImTextureID _wrap_ImDrawCmdHeader_TextureId_get_imgui_568d46c1e1b4102a(ImDrawCmdHeader *_swig_go_0) {
  ImDrawCmdHeader *arg1 = (ImDrawCmdHeader *) 0 ;
  ImTextureID result;
  ImTextureID _swig_go_result;
  
  arg1 = *(ImDrawCmdHeader **)&_swig_go_0; 
  
  result = (ImTextureID) ((arg1)->TextureId);
  *(ImTextureID *)&_swig_go_result = (ImTextureID)result; 
  return _swig_go_result;
}


void _wrap_ImDrawCmdHeader_VtxOffset_set_imgui_568d46c1e1b4102a(ImDrawCmdHeader *_swig_go_0, intgo _swig_go_1) {
  ImDrawCmdHeader *arg1 = (ImDrawCmdHeader *) 0 ;
  unsigned int arg2 ;
  
  arg1 = *(ImDrawCmdHeader **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  if (arg1) (arg1)->VtxOffset = arg2;
  
}


intgo _wrap_ImDrawCmdHeader_VtxOffset_get_imgui_568d46c1e1b4102a(ImDrawCmdHeader *_swig_go_0) {
  ImDrawCmdHeader *arg1 = (ImDrawCmdHeader *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(ImDrawCmdHeader **)&_swig_go_0; 
  
  result = (unsigned int) ((arg1)->VtxOffset);
  _swig_go_result = result; 
  return _swig_go_result;
}


ImDrawCmdHeader *_wrap_new_ImDrawCmdHeader_imgui_568d46c1e1b4102a() {
  ImDrawCmdHeader *result = 0 ;
  ImDrawCmdHeader *_swig_go_result;
  
  
  result = (ImDrawCmdHeader *)new ImDrawCmdHeader();
  *(ImDrawCmdHeader **)&_swig_go_result = (ImDrawCmdHeader *)result; 
  return _swig_go_result;
}


void _wrap_delete_ImDrawCmdHeader_imgui_568d46c1e1b4102a(ImDrawCmdHeader *_swig_go_0) {
  ImDrawCmdHeader *arg1 = (ImDrawCmdHeader *) 0 ;
  
  arg1 = *(ImDrawCmdHeader **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_ImDrawChannel__CmdBuffer_set_imgui_568d46c1e1b4102a(ImDrawChannel *_swig_go_0, ImVector< ImDrawCmd > *_swig_go_1) {
  ImDrawChannel *arg1 = (ImDrawChannel *) 0 ;
  ImVector< ImDrawCmd > *arg2 = (ImVector< ImDrawCmd > *) 0 ;
  
  arg1 = *(ImDrawChannel **)&_swig_go_0; 
  arg2 = *(ImVector< ImDrawCmd > **)&_swig_go_1; 
  
  if (arg1) (arg1)->_CmdBuffer = *arg2;
  
}


ImVector< ImDrawCmd > *_wrap_ImDrawChannel__CmdBuffer_get_imgui_568d46c1e1b4102a(ImDrawChannel *_swig_go_0) {
  ImDrawChannel *arg1 = (ImDrawChannel *) 0 ;
  ImVector< ImDrawCmd > *result = 0 ;
  ImVector< ImDrawCmd > *_swig_go_result;
  
  arg1 = *(ImDrawChannel **)&_swig_go_0; 
  
  result = (ImVector< ImDrawCmd > *)& ((arg1)->_CmdBuffer);
  *(ImVector< ImDrawCmd > **)&_swig_go_result = (ImVector< ImDrawCmd > *)result; 
  return _swig_go_result;
}


void _wrap_ImDrawChannel__IdxBuffer_set_imgui_568d46c1e1b4102a(ImDrawChannel *_swig_go_0, ImVector< unsigned short > *_swig_go_1) {
  ImDrawChannel *arg1 = (ImDrawChannel *) 0 ;
  ImVector< ImDrawIdx > *arg2 = (ImVector< ImDrawIdx > *) 0 ;
  
  arg1 = *(ImDrawChannel **)&_swig_go_0; 
  arg2 = *(ImVector< ImDrawIdx > **)&_swig_go_1; 
  
  if (arg1) (arg1)->_IdxBuffer = *arg2;
  
}


ImVector< unsigned short > *_wrap_ImDrawChannel__IdxBuffer_get_imgui_568d46c1e1b4102a(ImDrawChannel *_swig_go_0) {
  ImDrawChannel *arg1 = (ImDrawChannel *) 0 ;
  ImVector< ImDrawIdx > *result = 0 ;
  ImVector< unsigned short > *_swig_go_result;
  
  arg1 = *(ImDrawChannel **)&_swig_go_0; 
  
  result = (ImVector< ImDrawIdx > *)& ((arg1)->_IdxBuffer);
  *(ImVector< ImDrawIdx > **)&_swig_go_result = (ImVector< ImDrawIdx > *)result; 
  return _swig_go_result;
}


ImDrawChannel *_wrap_new_ImDrawChannel_imgui_568d46c1e1b4102a() {
  ImDrawChannel *result = 0 ;
  ImDrawChannel *_swig_go_result;
  
  
  result = (ImDrawChannel *)new ImDrawChannel();
  *(ImDrawChannel **)&_swig_go_result = (ImDrawChannel *)result; 
  return _swig_go_result;
}


void _wrap_delete_ImDrawChannel_imgui_568d46c1e1b4102a(ImDrawChannel *_swig_go_0) {
  ImDrawChannel *arg1 = (ImDrawChannel *) 0 ;
  
  arg1 = *(ImDrawChannel **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_ImDrawListSplitter__Current_set_imgui_568d46c1e1b4102a(ImDrawListSplitter *_swig_go_0, intgo _swig_go_1) {
  ImDrawListSplitter *arg1 = (ImDrawListSplitter *) 0 ;
  int arg2 ;
  
  arg1 = *(ImDrawListSplitter **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->_Current = arg2;
  
}


intgo _wrap_ImDrawListSplitter__Current_get_imgui_568d46c1e1b4102a(ImDrawListSplitter *_swig_go_0) {
  ImDrawListSplitter *arg1 = (ImDrawListSplitter *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(ImDrawListSplitter **)&_swig_go_0; 
  
  result = (int) ((arg1)->_Current);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImDrawListSplitter__Count_set_imgui_568d46c1e1b4102a(ImDrawListSplitter *_swig_go_0, intgo _swig_go_1) {
  ImDrawListSplitter *arg1 = (ImDrawListSplitter *) 0 ;
  int arg2 ;
  
  arg1 = *(ImDrawListSplitter **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->_Count = arg2;
  
}


intgo _wrap_ImDrawListSplitter__Count_get_imgui_568d46c1e1b4102a(ImDrawListSplitter *_swig_go_0) {
  ImDrawListSplitter *arg1 = (ImDrawListSplitter *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(ImDrawListSplitter **)&_swig_go_0; 
  
  result = (int) ((arg1)->_Count);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImDrawListSplitter__Channels_set_imgui_568d46c1e1b4102a(ImDrawListSplitter *_swig_go_0, ImVector< ImDrawChannel > *_swig_go_1) {
  ImDrawListSplitter *arg1 = (ImDrawListSplitter *) 0 ;
  ImVector< ImDrawChannel > *arg2 = (ImVector< ImDrawChannel > *) 0 ;
  
  arg1 = *(ImDrawListSplitter **)&_swig_go_0; 
  arg2 = *(ImVector< ImDrawChannel > **)&_swig_go_1; 
  
  if (arg1) (arg1)->_Channels = *arg2;
  
}


ImVector< ImDrawChannel > *_wrap_ImDrawListSplitter__Channels_get_imgui_568d46c1e1b4102a(ImDrawListSplitter *_swig_go_0) {
  ImDrawListSplitter *arg1 = (ImDrawListSplitter *) 0 ;
  ImVector< ImDrawChannel > *result = 0 ;
  ImVector< ImDrawChannel > *_swig_go_result;
  
  arg1 = *(ImDrawListSplitter **)&_swig_go_0; 
  
  result = (ImVector< ImDrawChannel > *)& ((arg1)->_Channels);
  *(ImVector< ImDrawChannel > **)&_swig_go_result = (ImVector< ImDrawChannel > *)result; 
  return _swig_go_result;
}


ImDrawListSplitter *_wrap_new_ImDrawListSplitter_imgui_568d46c1e1b4102a() {
  ImDrawListSplitter *result = 0 ;
  ImDrawListSplitter *_swig_go_result;
  
  
  result = (ImDrawListSplitter *)new ImDrawListSplitter();
  *(ImDrawListSplitter **)&_swig_go_result = (ImDrawListSplitter *)result; 
  return _swig_go_result;
}


void _wrap_delete_ImDrawListSplitter_imgui_568d46c1e1b4102a(ImDrawListSplitter *_swig_go_0) {
  ImDrawListSplitter *arg1 = (ImDrawListSplitter *) 0 ;
  
  arg1 = *(ImDrawListSplitter **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_ImDrawListSplitter_Clear_imgui_568d46c1e1b4102a(ImDrawListSplitter *_swig_go_0) {
  ImDrawListSplitter *arg1 = (ImDrawListSplitter *) 0 ;
  
  arg1 = *(ImDrawListSplitter **)&_swig_go_0; 
  
  (arg1)->Clear();
  
}


void _wrap_ImDrawListSplitter_ClearFreeMemory_imgui_568d46c1e1b4102a(ImDrawListSplitter *_swig_go_0) {
  ImDrawListSplitter *arg1 = (ImDrawListSplitter *) 0 ;
  
  arg1 = *(ImDrawListSplitter **)&_swig_go_0; 
  
  (arg1)->ClearFreeMemory();
  
}


void _wrap_ImDrawListSplitter_Split_imgui_568d46c1e1b4102a(ImDrawListSplitter *_swig_go_0, ImDrawList *_swig_go_1, intgo _swig_go_2) {
  ImDrawListSplitter *arg1 = (ImDrawListSplitter *) 0 ;
  ImDrawList *arg2 = (ImDrawList *) 0 ;
  int arg3 ;
  
  arg1 = *(ImDrawListSplitter **)&_swig_go_0; 
  arg2 = *(ImDrawList **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  (arg1)->Split(arg2,arg3);
  
}


void _wrap_ImDrawListSplitter_Merge_imgui_568d46c1e1b4102a(ImDrawListSplitter *_swig_go_0, ImDrawList *_swig_go_1) {
  ImDrawListSplitter *arg1 = (ImDrawListSplitter *) 0 ;
  ImDrawList *arg2 = (ImDrawList *) 0 ;
  
  arg1 = *(ImDrawListSplitter **)&_swig_go_0; 
  arg2 = *(ImDrawList **)&_swig_go_1; 
  
  (arg1)->Merge(arg2);
  
}


void _wrap_ImDrawListSplitter_SetCurrentChannel_imgui_568d46c1e1b4102a(ImDrawListSplitter *_swig_go_0, ImDrawList *_swig_go_1, intgo _swig_go_2) {
  ImDrawListSplitter *arg1 = (ImDrawListSplitter *) 0 ;
  ImDrawList *arg2 = (ImDrawList *) 0 ;
  int arg3 ;
  
  arg1 = *(ImDrawListSplitter **)&_swig_go_0; 
  arg2 = *(ImDrawList **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  (arg1)->SetCurrentChannel(arg2,arg3);
  
}


intgo _wrap_ImDrawFlags_None_imgui_568d46c1e1b4102a() {
  ImDrawFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImDrawFlags_None;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImDrawFlags_Closed_imgui_568d46c1e1b4102a() {
  ImDrawFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImDrawFlags_Closed;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImDrawFlags_RoundCornersTopLeft_imgui_568d46c1e1b4102a() {
  ImDrawFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImDrawFlags_RoundCornersTopLeft;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImDrawFlags_RoundCornersTopRight_imgui_568d46c1e1b4102a() {
  ImDrawFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImDrawFlags_RoundCornersTopRight;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImDrawFlags_RoundCornersBottomLeft_imgui_568d46c1e1b4102a() {
  ImDrawFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImDrawFlags_RoundCornersBottomLeft;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImDrawFlags_RoundCornersBottomRight_imgui_568d46c1e1b4102a() {
  ImDrawFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImDrawFlags_RoundCornersBottomRight;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImDrawFlags_RoundCornersNone_imgui_568d46c1e1b4102a() {
  ImDrawFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImDrawFlags_RoundCornersNone;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImDrawFlags_RoundCornersTop_imgui_568d46c1e1b4102a() {
  ImDrawFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImDrawFlags_RoundCornersTop;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImDrawFlags_RoundCornersBottom_imgui_568d46c1e1b4102a() {
  ImDrawFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImDrawFlags_RoundCornersBottom;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImDrawFlags_RoundCornersLeft_imgui_568d46c1e1b4102a() {
  ImDrawFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImDrawFlags_RoundCornersLeft;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImDrawFlags_RoundCornersRight_imgui_568d46c1e1b4102a() {
  ImDrawFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImDrawFlags_RoundCornersRight;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImDrawFlags_RoundCornersAll_imgui_568d46c1e1b4102a() {
  ImDrawFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImDrawFlags_RoundCornersAll;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImDrawFlags_RoundCornersDefault__imgui_568d46c1e1b4102a() {
  ImDrawFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImDrawFlags_RoundCornersDefault_;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImDrawFlags_RoundCornersMask__imgui_568d46c1e1b4102a() {
  ImDrawFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImDrawFlags_RoundCornersMask_;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImDrawListFlags_None_imgui_568d46c1e1b4102a() {
  ImDrawListFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImDrawListFlags_None;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImDrawListFlags_AntiAliasedLines_imgui_568d46c1e1b4102a() {
  ImDrawListFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImDrawListFlags_AntiAliasedLines;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImDrawListFlags_AntiAliasedLinesUseTex_imgui_568d46c1e1b4102a() {
  ImDrawListFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImDrawListFlags_AntiAliasedLinesUseTex;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImDrawListFlags_AntiAliasedFill_imgui_568d46c1e1b4102a() {
  ImDrawListFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImDrawListFlags_AntiAliasedFill;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImDrawListFlags_AllowVtxOffset_imgui_568d46c1e1b4102a() {
  ImDrawListFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImDrawListFlags_AllowVtxOffset;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_ImDrawList_CmdBuffer_set_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, ImVector< ImDrawCmd > *_swig_go_1) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImVector< ImDrawCmd > *arg2 = (ImVector< ImDrawCmd > *) 0 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = *(ImVector< ImDrawCmd > **)&_swig_go_1; 
  
  if (arg1) (arg1)->CmdBuffer = *arg2;
  
}


ImVector< ImDrawCmd > *_wrap_ImDrawList_CmdBuffer_get_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImVector< ImDrawCmd > *result = 0 ;
  ImVector< ImDrawCmd > *_swig_go_result;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  
  result = (ImVector< ImDrawCmd > *)& ((arg1)->CmdBuffer);
  *(ImVector< ImDrawCmd > **)&_swig_go_result = (ImVector< ImDrawCmd > *)result; 
  return _swig_go_result;
}


void _wrap_ImDrawList_IdxBuffer_set_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, ImVector< unsigned short > *_swig_go_1) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImVector< ImDrawIdx > *arg2 = (ImVector< ImDrawIdx > *) 0 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = *(ImVector< ImDrawIdx > **)&_swig_go_1; 
  
  if (arg1) (arg1)->IdxBuffer = *arg2;
  
}


ImVector< unsigned short > *_wrap_ImDrawList_IdxBuffer_get_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImVector< ImDrawIdx > *result = 0 ;
  ImVector< unsigned short > *_swig_go_result;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  
  result = (ImVector< ImDrawIdx > *)& ((arg1)->IdxBuffer);
  *(ImVector< ImDrawIdx > **)&_swig_go_result = (ImVector< ImDrawIdx > *)result; 
  return _swig_go_result;
}


void _wrap_ImDrawList_VtxBuffer_set_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, ImVector< ImDrawVert > *_swig_go_1) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImVector< ImDrawVert > *arg2 = (ImVector< ImDrawVert > *) 0 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = *(ImVector< ImDrawVert > **)&_swig_go_1; 
  
  if (arg1) (arg1)->VtxBuffer = *arg2;
  
}


ImVector< ImDrawVert > *_wrap_ImDrawList_VtxBuffer_get_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImVector< ImDrawVert > *result = 0 ;
  ImVector< ImDrawVert > *_swig_go_result;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  
  result = (ImVector< ImDrawVert > *)& ((arg1)->VtxBuffer);
  *(ImVector< ImDrawVert > **)&_swig_go_result = (ImVector< ImDrawVert > *)result; 
  return _swig_go_result;
}


void _wrap_ImDrawList_Flags_set_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, intgo _swig_go_1) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImDrawListFlags arg2 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = (ImDrawListFlags)_swig_go_1; 
  
  if (arg1) (arg1)->Flags = arg2;
  
}


intgo _wrap_ImDrawList_Flags_get_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImDrawListFlags result;
  intgo _swig_go_result;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  
  result = (ImDrawListFlags) ((arg1)->Flags);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImDrawList__VtxCurrentIdx_set_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, intgo _swig_go_1) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  unsigned int arg2 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  if (arg1) (arg1)->_VtxCurrentIdx = arg2;
  
}


intgo _wrap_ImDrawList__VtxCurrentIdx_get_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  
  result = (unsigned int) ((arg1)->_VtxCurrentIdx);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImDrawList__Data_set_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, ImDrawListSharedData *_swig_go_1) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImDrawListSharedData *arg2 = (ImDrawListSharedData *) 0 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = *(ImDrawListSharedData **)&_swig_go_1; 
  
  if (arg1) (arg1)->_Data = arg2;
  
}


ImDrawListSharedData *_wrap_ImDrawList__Data_get_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImDrawListSharedData *result = 0 ;
  ImDrawListSharedData *_swig_go_result;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  
  result = (ImDrawListSharedData *) ((arg1)->_Data);
  *(ImDrawListSharedData **)&_swig_go_result = (ImDrawListSharedData *)result; 
  return _swig_go_result;
}


void _wrap_ImDrawList__VtxWritePtr_set_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, ImDrawVert *_swig_go_1) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImDrawVert *arg2 = (ImDrawVert *) 0 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = *(ImDrawVert **)&_swig_go_1; 
  
  if (arg1) (arg1)->_VtxWritePtr = arg2;
  
}


ImDrawVert *_wrap_ImDrawList__VtxWritePtr_get_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImDrawVert *result = 0 ;
  ImDrawVert *_swig_go_result;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  
  result = (ImDrawVert *) ((arg1)->_VtxWritePtr);
  *(ImDrawVert **)&_swig_go_result = (ImDrawVert *)result; 
  return _swig_go_result;
}


void _wrap_ImDrawList__IdxWritePtr_set_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, short *_swig_go_1) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImDrawIdx *arg2 = (ImDrawIdx *) 0 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = *(ImDrawIdx **)&_swig_go_1; 
  
  if (arg1) (arg1)->_IdxWritePtr = arg2;
  
}


short *_wrap_ImDrawList__IdxWritePtr_get_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImDrawIdx *result = 0 ;
  short *_swig_go_result;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  
  result = (ImDrawIdx *) ((arg1)->_IdxWritePtr);
  *(ImDrawIdx **)&_swig_go_result = (ImDrawIdx *)result; 
  return _swig_go_result;
}


void _wrap_ImDrawList__Path_set_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, ImVector< ImVec2 > *_swig_go_1) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImVector< ImVec2 > *arg2 = (ImVector< ImVec2 > *) 0 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = *(ImVector< ImVec2 > **)&_swig_go_1; 
  
  if (arg1) (arg1)->_Path = *arg2;
  
}


ImVector< ImVec2 > *_wrap_ImDrawList__Path_get_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImVector< ImVec2 > *result = 0 ;
  ImVector< ImVec2 > *_swig_go_result;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  
  result = (ImVector< ImVec2 > *)& ((arg1)->_Path);
  *(ImVector< ImVec2 > **)&_swig_go_result = (ImVector< ImVec2 > *)result; 
  return _swig_go_result;
}


void _wrap_ImDrawList__CmdHeader_set_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, ImDrawCmdHeader *_swig_go_1) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImDrawCmdHeader *arg2 = (ImDrawCmdHeader *) 0 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = *(ImDrawCmdHeader **)&_swig_go_1; 
  
  if (arg1) (arg1)->_CmdHeader = *arg2;
  
}


ImDrawCmdHeader *_wrap_ImDrawList__CmdHeader_get_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImDrawCmdHeader *result = 0 ;
  ImDrawCmdHeader *_swig_go_result;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  
  result = (ImDrawCmdHeader *)& ((arg1)->_CmdHeader);
  *(ImDrawCmdHeader **)&_swig_go_result = (ImDrawCmdHeader *)result; 
  return _swig_go_result;
}


void _wrap_ImDrawList__Splitter_set_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, ImDrawListSplitter *_swig_go_1) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImDrawListSplitter *arg2 = (ImDrawListSplitter *) 0 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = *(ImDrawListSplitter **)&_swig_go_1; 
  
  if (arg1) (arg1)->_Splitter = *arg2;
  
}


ImDrawListSplitter *_wrap_ImDrawList__Splitter_get_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImDrawListSplitter *result = 0 ;
  ImDrawListSplitter *_swig_go_result;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  
  result = (ImDrawListSplitter *)& ((arg1)->_Splitter);
  *(ImDrawListSplitter **)&_swig_go_result = (ImDrawListSplitter *)result; 
  return _swig_go_result;
}


void _wrap_ImDrawList__ClipRectStack_set_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, ImVector< ImVec4 > *_swig_go_1) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImVector< ImVec4 > *arg2 = (ImVector< ImVec4 > *) 0 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = *(ImVector< ImVec4 > **)&_swig_go_1; 
  
  if (arg1) (arg1)->_ClipRectStack = *arg2;
  
}


ImVector< ImVec4 > *_wrap_ImDrawList__ClipRectStack_get_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImVector< ImVec4 > *result = 0 ;
  ImVector< ImVec4 > *_swig_go_result;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  
  result = (ImVector< ImVec4 > *)& ((arg1)->_ClipRectStack);
  *(ImVector< ImVec4 > **)&_swig_go_result = (ImVector< ImVec4 > *)result; 
  return _swig_go_result;
}


void _wrap_ImDrawList__TextureIdStack_set_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, ImVector< void * > *_swig_go_1) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImVector< ImTextureID > *arg2 = (ImVector< ImTextureID > *) 0 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = *(ImVector< ImTextureID > **)&_swig_go_1; 
  
  if (arg1) (arg1)->_TextureIdStack = *arg2;
  
}


ImVector< void * > *_wrap_ImDrawList__TextureIdStack_get_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImVector< ImTextureID > *result = 0 ;
  ImVector< void * > *_swig_go_result;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  
  result = (ImVector< ImTextureID > *)& ((arg1)->_TextureIdStack);
  *(ImVector< ImTextureID > **)&_swig_go_result = (ImVector< ImTextureID > *)result; 
  return _swig_go_result;
}


void _wrap_ImDrawList__FringeScale_set_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, float _swig_go_1) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  float arg2 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->_FringeScale = arg2;
  
}


float _wrap_ImDrawList__FringeScale_get_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  
  result = (float) ((arg1)->_FringeScale);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImDrawList__OwnerName_set_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, _gostring_ _swig_go_1) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if (arg2) {
      arg1->_OwnerName = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->_OwnerName, (const char *)arg2);
    } else {
      arg1->_OwnerName = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_ImDrawList__OwnerName_get_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  
  result = (char *) ((arg1)->_OwnerName);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


ImDrawList *_wrap_new_ImDrawList_imgui_568d46c1e1b4102a(ImDrawListSharedData *_swig_go_0) {
  ImDrawListSharedData *arg1 = (ImDrawListSharedData *) 0 ;
  ImDrawList *result = 0 ;
  ImDrawList *_swig_go_result;
  
  arg1 = *(ImDrawListSharedData **)&_swig_go_0; 
  
  result = (ImDrawList *)new ImDrawList(arg1);
  *(ImDrawList **)&_swig_go_result = (ImDrawList *)result; 
  return _swig_go_result;
}


void _wrap_delete_ImDrawList_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_ImDrawList_PushClipRect__SWIG_0_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, ImVec2 *_swig_go_1, ImVec2 *_swig_go_2, bool _swig_go_3) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImVec2 *arg2 = 0 ;
  ImVec2 *arg3 = 0 ;
  bool arg4 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  arg3 = *(ImVec2 **)&_swig_go_2; 
  arg4 = (bool)_swig_go_3; 
  
  (arg1)->PushClipRect((ImVec2 const &)*arg2,(ImVec2 const &)*arg3,arg4);
  
}


void _wrap_ImDrawList_PushClipRect__SWIG_1_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, ImVec2 *_swig_go_1, ImVec2 *_swig_go_2) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImVec2 *arg2 = 0 ;
  ImVec2 *arg3 = 0 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  arg3 = *(ImVec2 **)&_swig_go_2; 
  
  (arg1)->PushClipRect((ImVec2 const &)*arg2,(ImVec2 const &)*arg3);
  
}


void _wrap_ImDrawList_PushClipRectFullScreen_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  
  (arg1)->PushClipRectFullScreen();
  
}


void _wrap_ImDrawList_PopClipRect_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  
  (arg1)->PopClipRect();
  
}


void _wrap_ImDrawList_PushTextureID_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, ImTextureID _swig_go_1) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImTextureID arg2 = (ImTextureID) 0 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = *(ImTextureID *)&_swig_go_1; 
  
  (arg1)->PushTextureID(arg2);
  
}


void _wrap_ImDrawList_PopTextureID_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  
  (arg1)->PopTextureID();
  
}


ImVec2 *_wrap_ImDrawList_GetClipRectMin_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImVec2 result;
  ImVec2 *_swig_go_result;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  
  result = ((ImDrawList const *)arg1)->GetClipRectMin();
  *(ImVec2 **)&_swig_go_result = new ImVec2(result); 
  return _swig_go_result;
}


ImVec2 *_wrap_ImDrawList_GetClipRectMax_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImVec2 result;
  ImVec2 *_swig_go_result;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  
  result = ((ImDrawList const *)arg1)->GetClipRectMax();
  *(ImVec2 **)&_swig_go_result = new ImVec2(result); 
  return _swig_go_result;
}


void _wrap_ImDrawList_AddLine__SWIG_0_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, ImVec2 *_swig_go_1, ImVec2 *_swig_go_2, intgo _swig_go_3, float _swig_go_4) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImVec2 *arg2 = 0 ;
  ImVec2 *arg3 = 0 ;
  ImU32 arg4 ;
  float arg5 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  arg3 = *(ImVec2 **)&_swig_go_2; 
  arg4 = (ImU32)_swig_go_3; 
  arg5 = (float)_swig_go_4; 
  
  (arg1)->AddLine((ImVec2 const &)*arg2,(ImVec2 const &)*arg3,arg4,arg5);
  
}


void _wrap_ImDrawList_AddLine__SWIG_1_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, ImVec2 *_swig_go_1, ImVec2 *_swig_go_2, intgo _swig_go_3) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImVec2 *arg2 = 0 ;
  ImVec2 *arg3 = 0 ;
  ImU32 arg4 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  arg3 = *(ImVec2 **)&_swig_go_2; 
  arg4 = (ImU32)_swig_go_3; 
  
  (arg1)->AddLine((ImVec2 const &)*arg2,(ImVec2 const &)*arg3,arg4);
  
}


void _wrap_ImDrawList_AddRect__SWIG_0_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, ImVec2 *_swig_go_1, ImVec2 *_swig_go_2, intgo _swig_go_3, float _swig_go_4, intgo _swig_go_5, float _swig_go_6) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImVec2 *arg2 = 0 ;
  ImVec2 *arg3 = 0 ;
  ImU32 arg4 ;
  float arg5 ;
  ImDrawFlags arg6 ;
  float arg7 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  arg3 = *(ImVec2 **)&_swig_go_2; 
  arg4 = (ImU32)_swig_go_3; 
  arg5 = (float)_swig_go_4; 
  arg6 = (ImDrawFlags)_swig_go_5; 
  arg7 = (float)_swig_go_6; 
  
  (arg1)->AddRect((ImVec2 const &)*arg2,(ImVec2 const &)*arg3,arg4,arg5,arg6,arg7);
  
}


void _wrap_ImDrawList_AddRect__SWIG_1_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, ImVec2 *_swig_go_1, ImVec2 *_swig_go_2, intgo _swig_go_3, float _swig_go_4, intgo _swig_go_5) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImVec2 *arg2 = 0 ;
  ImVec2 *arg3 = 0 ;
  ImU32 arg4 ;
  float arg5 ;
  ImDrawFlags arg6 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  arg3 = *(ImVec2 **)&_swig_go_2; 
  arg4 = (ImU32)_swig_go_3; 
  arg5 = (float)_swig_go_4; 
  arg6 = (ImDrawFlags)_swig_go_5; 
  
  (arg1)->AddRect((ImVec2 const &)*arg2,(ImVec2 const &)*arg3,arg4,arg5,arg6);
  
}


void _wrap_ImDrawList_AddRect__SWIG_2_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, ImVec2 *_swig_go_1, ImVec2 *_swig_go_2, intgo _swig_go_3, float _swig_go_4) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImVec2 *arg2 = 0 ;
  ImVec2 *arg3 = 0 ;
  ImU32 arg4 ;
  float arg5 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  arg3 = *(ImVec2 **)&_swig_go_2; 
  arg4 = (ImU32)_swig_go_3; 
  arg5 = (float)_swig_go_4; 
  
  (arg1)->AddRect((ImVec2 const &)*arg2,(ImVec2 const &)*arg3,arg4,arg5);
  
}


void _wrap_ImDrawList_AddRect__SWIG_3_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, ImVec2 *_swig_go_1, ImVec2 *_swig_go_2, intgo _swig_go_3) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImVec2 *arg2 = 0 ;
  ImVec2 *arg3 = 0 ;
  ImU32 arg4 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  arg3 = *(ImVec2 **)&_swig_go_2; 
  arg4 = (ImU32)_swig_go_3; 
  
  (arg1)->AddRect((ImVec2 const &)*arg2,(ImVec2 const &)*arg3,arg4);
  
}


void _wrap_ImDrawList_AddRectFilled__SWIG_0_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, ImVec2 *_swig_go_1, ImVec2 *_swig_go_2, intgo _swig_go_3, float _swig_go_4, intgo _swig_go_5) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImVec2 *arg2 = 0 ;
  ImVec2 *arg3 = 0 ;
  ImU32 arg4 ;
  float arg5 ;
  ImDrawFlags arg6 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  arg3 = *(ImVec2 **)&_swig_go_2; 
  arg4 = (ImU32)_swig_go_3; 
  arg5 = (float)_swig_go_4; 
  arg6 = (ImDrawFlags)_swig_go_5; 
  
  (arg1)->AddRectFilled((ImVec2 const &)*arg2,(ImVec2 const &)*arg3,arg4,arg5,arg6);
  
}


void _wrap_ImDrawList_AddRectFilled__SWIG_1_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, ImVec2 *_swig_go_1, ImVec2 *_swig_go_2, intgo _swig_go_3, float _swig_go_4) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImVec2 *arg2 = 0 ;
  ImVec2 *arg3 = 0 ;
  ImU32 arg4 ;
  float arg5 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  arg3 = *(ImVec2 **)&_swig_go_2; 
  arg4 = (ImU32)_swig_go_3; 
  arg5 = (float)_swig_go_4; 
  
  (arg1)->AddRectFilled((ImVec2 const &)*arg2,(ImVec2 const &)*arg3,arg4,arg5);
  
}


void _wrap_ImDrawList_AddRectFilled__SWIG_2_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, ImVec2 *_swig_go_1, ImVec2 *_swig_go_2, intgo _swig_go_3) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImVec2 *arg2 = 0 ;
  ImVec2 *arg3 = 0 ;
  ImU32 arg4 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  arg3 = *(ImVec2 **)&_swig_go_2; 
  arg4 = (ImU32)_swig_go_3; 
  
  (arg1)->AddRectFilled((ImVec2 const &)*arg2,(ImVec2 const &)*arg3,arg4);
  
}


void _wrap_ImDrawList_AddRectFilledMultiColor_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, ImVec2 *_swig_go_1, ImVec2 *_swig_go_2, intgo _swig_go_3, intgo _swig_go_4, intgo _swig_go_5, intgo _swig_go_6) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImVec2 *arg2 = 0 ;
  ImVec2 *arg3 = 0 ;
  ImU32 arg4 ;
  ImU32 arg5 ;
  ImU32 arg6 ;
  ImU32 arg7 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  arg3 = *(ImVec2 **)&_swig_go_2; 
  arg4 = (ImU32)_swig_go_3; 
  arg5 = (ImU32)_swig_go_4; 
  arg6 = (ImU32)_swig_go_5; 
  arg7 = (ImU32)_swig_go_6; 
  
  (arg1)->AddRectFilledMultiColor((ImVec2 const &)*arg2,(ImVec2 const &)*arg3,arg4,arg5,arg6,arg7);
  
}


void _wrap_ImDrawList_AddQuad__SWIG_0_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, ImVec2 *_swig_go_1, ImVec2 *_swig_go_2, ImVec2 *_swig_go_3, ImVec2 *_swig_go_4, intgo _swig_go_5, float _swig_go_6) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImVec2 *arg2 = 0 ;
  ImVec2 *arg3 = 0 ;
  ImVec2 *arg4 = 0 ;
  ImVec2 *arg5 = 0 ;
  ImU32 arg6 ;
  float arg7 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  arg3 = *(ImVec2 **)&_swig_go_2; 
  arg4 = *(ImVec2 **)&_swig_go_3; 
  arg5 = *(ImVec2 **)&_swig_go_4; 
  arg6 = (ImU32)_swig_go_5; 
  arg7 = (float)_swig_go_6; 
  
  (arg1)->AddQuad((ImVec2 const &)*arg2,(ImVec2 const &)*arg3,(ImVec2 const &)*arg4,(ImVec2 const &)*arg5,arg6,arg7);
  
}


void _wrap_ImDrawList_AddQuad__SWIG_1_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, ImVec2 *_swig_go_1, ImVec2 *_swig_go_2, ImVec2 *_swig_go_3, ImVec2 *_swig_go_4, intgo _swig_go_5) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImVec2 *arg2 = 0 ;
  ImVec2 *arg3 = 0 ;
  ImVec2 *arg4 = 0 ;
  ImVec2 *arg5 = 0 ;
  ImU32 arg6 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  arg3 = *(ImVec2 **)&_swig_go_2; 
  arg4 = *(ImVec2 **)&_swig_go_3; 
  arg5 = *(ImVec2 **)&_swig_go_4; 
  arg6 = (ImU32)_swig_go_5; 
  
  (arg1)->AddQuad((ImVec2 const &)*arg2,(ImVec2 const &)*arg3,(ImVec2 const &)*arg4,(ImVec2 const &)*arg5,arg6);
  
}


void _wrap_ImDrawList_AddQuadFilled_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, ImVec2 *_swig_go_1, ImVec2 *_swig_go_2, ImVec2 *_swig_go_3, ImVec2 *_swig_go_4, intgo _swig_go_5) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImVec2 *arg2 = 0 ;
  ImVec2 *arg3 = 0 ;
  ImVec2 *arg4 = 0 ;
  ImVec2 *arg5 = 0 ;
  ImU32 arg6 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  arg3 = *(ImVec2 **)&_swig_go_2; 
  arg4 = *(ImVec2 **)&_swig_go_3; 
  arg5 = *(ImVec2 **)&_swig_go_4; 
  arg6 = (ImU32)_swig_go_5; 
  
  (arg1)->AddQuadFilled((ImVec2 const &)*arg2,(ImVec2 const &)*arg3,(ImVec2 const &)*arg4,(ImVec2 const &)*arg5,arg6);
  
}


void _wrap_ImDrawList_AddTriangle__SWIG_0_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, ImVec2 *_swig_go_1, ImVec2 *_swig_go_2, ImVec2 *_swig_go_3, intgo _swig_go_4, float _swig_go_5) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImVec2 *arg2 = 0 ;
  ImVec2 *arg3 = 0 ;
  ImVec2 *arg4 = 0 ;
  ImU32 arg5 ;
  float arg6 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  arg3 = *(ImVec2 **)&_swig_go_2; 
  arg4 = *(ImVec2 **)&_swig_go_3; 
  arg5 = (ImU32)_swig_go_4; 
  arg6 = (float)_swig_go_5; 
  
  (arg1)->AddTriangle((ImVec2 const &)*arg2,(ImVec2 const &)*arg3,(ImVec2 const &)*arg4,arg5,arg6);
  
}


void _wrap_ImDrawList_AddTriangle__SWIG_1_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, ImVec2 *_swig_go_1, ImVec2 *_swig_go_2, ImVec2 *_swig_go_3, intgo _swig_go_4) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImVec2 *arg2 = 0 ;
  ImVec2 *arg3 = 0 ;
  ImVec2 *arg4 = 0 ;
  ImU32 arg5 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  arg3 = *(ImVec2 **)&_swig_go_2; 
  arg4 = *(ImVec2 **)&_swig_go_3; 
  arg5 = (ImU32)_swig_go_4; 
  
  (arg1)->AddTriangle((ImVec2 const &)*arg2,(ImVec2 const &)*arg3,(ImVec2 const &)*arg4,arg5);
  
}


void _wrap_ImDrawList_AddTriangleFilled_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, ImVec2 *_swig_go_1, ImVec2 *_swig_go_2, ImVec2 *_swig_go_3, intgo _swig_go_4) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImVec2 *arg2 = 0 ;
  ImVec2 *arg3 = 0 ;
  ImVec2 *arg4 = 0 ;
  ImU32 arg5 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  arg3 = *(ImVec2 **)&_swig_go_2; 
  arg4 = *(ImVec2 **)&_swig_go_3; 
  arg5 = (ImU32)_swig_go_4; 
  
  (arg1)->AddTriangleFilled((ImVec2 const &)*arg2,(ImVec2 const &)*arg3,(ImVec2 const &)*arg4,arg5);
  
}


void _wrap_ImDrawList_AddCircle__SWIG_0_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, ImVec2 *_swig_go_1, float _swig_go_2, intgo _swig_go_3, intgo _swig_go_4, float _swig_go_5) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImVec2 *arg2 = 0 ;
  float arg3 ;
  ImU32 arg4 ;
  int arg5 ;
  float arg6 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  arg4 = (ImU32)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  arg6 = (float)_swig_go_5; 
  
  (arg1)->AddCircle((ImVec2 const &)*arg2,arg3,arg4,arg5,arg6);
  
}


void _wrap_ImDrawList_AddCircle__SWIG_1_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, ImVec2 *_swig_go_1, float _swig_go_2, intgo _swig_go_3, intgo _swig_go_4) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImVec2 *arg2 = 0 ;
  float arg3 ;
  ImU32 arg4 ;
  int arg5 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  arg4 = (ImU32)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  (arg1)->AddCircle((ImVec2 const &)*arg2,arg3,arg4,arg5);
  
}


void _wrap_ImDrawList_AddCircle__SWIG_2_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, ImVec2 *_swig_go_1, float _swig_go_2, intgo _swig_go_3) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImVec2 *arg2 = 0 ;
  float arg3 ;
  ImU32 arg4 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  arg4 = (ImU32)_swig_go_3; 
  
  (arg1)->AddCircle((ImVec2 const &)*arg2,arg3,arg4);
  
}


void _wrap_ImDrawList_AddCircleFilled__SWIG_0_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, ImVec2 *_swig_go_1, float _swig_go_2, intgo _swig_go_3, intgo _swig_go_4) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImVec2 *arg2 = 0 ;
  float arg3 ;
  ImU32 arg4 ;
  int arg5 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  arg4 = (ImU32)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  (arg1)->AddCircleFilled((ImVec2 const &)*arg2,arg3,arg4,arg5);
  
}


void _wrap_ImDrawList_AddCircleFilled__SWIG_1_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, ImVec2 *_swig_go_1, float _swig_go_2, intgo _swig_go_3) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImVec2 *arg2 = 0 ;
  float arg3 ;
  ImU32 arg4 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  arg4 = (ImU32)_swig_go_3; 
  
  (arg1)->AddCircleFilled((ImVec2 const &)*arg2,arg3,arg4);
  
}


void _wrap_ImDrawList_AddNgon__SWIG_0_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, ImVec2 *_swig_go_1, float _swig_go_2, intgo _swig_go_3, intgo _swig_go_4, float _swig_go_5) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImVec2 *arg2 = 0 ;
  float arg3 ;
  ImU32 arg4 ;
  int arg5 ;
  float arg6 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  arg4 = (ImU32)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  arg6 = (float)_swig_go_5; 
  
  (arg1)->AddNgon((ImVec2 const &)*arg2,arg3,arg4,arg5,arg6);
  
}


void _wrap_ImDrawList_AddNgon__SWIG_1_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, ImVec2 *_swig_go_1, float _swig_go_2, intgo _swig_go_3, intgo _swig_go_4) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImVec2 *arg2 = 0 ;
  float arg3 ;
  ImU32 arg4 ;
  int arg5 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  arg4 = (ImU32)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  (arg1)->AddNgon((ImVec2 const &)*arg2,arg3,arg4,arg5);
  
}


void _wrap_ImDrawList_AddNgonFilled_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, ImVec2 *_swig_go_1, float _swig_go_2, intgo _swig_go_3, intgo _swig_go_4) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImVec2 *arg2 = 0 ;
  float arg3 ;
  ImU32 arg4 ;
  int arg5 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  arg4 = (ImU32)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  (arg1)->AddNgonFilled((ImVec2 const &)*arg2,arg3,arg4,arg5);
  
}


void _wrap_ImDrawList_AddEllipse__SWIG_0_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, ImVec2 *_swig_go_1, ImVec2 *_swig_go_2, intgo _swig_go_3, float _swig_go_4, intgo _swig_go_5, float _swig_go_6) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImVec2 *arg2 = 0 ;
  ImVec2 *arg3 = 0 ;
  ImU32 arg4 ;
  float arg5 ;
  int arg6 ;
  float arg7 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  arg3 = *(ImVec2 **)&_swig_go_2; 
  arg4 = (ImU32)_swig_go_3; 
  arg5 = (float)_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  arg7 = (float)_swig_go_6; 
  
  (arg1)->AddEllipse((ImVec2 const &)*arg2,(ImVec2 const &)*arg3,arg4,arg5,arg6,arg7);
  
}


void _wrap_ImDrawList_AddEllipse__SWIG_1_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, ImVec2 *_swig_go_1, ImVec2 *_swig_go_2, intgo _swig_go_3, float _swig_go_4, intgo _swig_go_5) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImVec2 *arg2 = 0 ;
  ImVec2 *arg3 = 0 ;
  ImU32 arg4 ;
  float arg5 ;
  int arg6 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  arg3 = *(ImVec2 **)&_swig_go_2; 
  arg4 = (ImU32)_swig_go_3; 
  arg5 = (float)_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  
  (arg1)->AddEllipse((ImVec2 const &)*arg2,(ImVec2 const &)*arg3,arg4,arg5,arg6);
  
}


void _wrap_ImDrawList_AddEllipse__SWIG_2_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, ImVec2 *_swig_go_1, ImVec2 *_swig_go_2, intgo _swig_go_3, float _swig_go_4) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImVec2 *arg2 = 0 ;
  ImVec2 *arg3 = 0 ;
  ImU32 arg4 ;
  float arg5 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  arg3 = *(ImVec2 **)&_swig_go_2; 
  arg4 = (ImU32)_swig_go_3; 
  arg5 = (float)_swig_go_4; 
  
  (arg1)->AddEllipse((ImVec2 const &)*arg2,(ImVec2 const &)*arg3,arg4,arg5);
  
}


void _wrap_ImDrawList_AddEllipse__SWIG_3_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, ImVec2 *_swig_go_1, ImVec2 *_swig_go_2, intgo _swig_go_3) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImVec2 *arg2 = 0 ;
  ImVec2 *arg3 = 0 ;
  ImU32 arg4 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  arg3 = *(ImVec2 **)&_swig_go_2; 
  arg4 = (ImU32)_swig_go_3; 
  
  (arg1)->AddEllipse((ImVec2 const &)*arg2,(ImVec2 const &)*arg3,arg4);
  
}


void _wrap_ImDrawList_AddEllipseFilled__SWIG_0_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, ImVec2 *_swig_go_1, ImVec2 *_swig_go_2, intgo _swig_go_3, float _swig_go_4, intgo _swig_go_5) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImVec2 *arg2 = 0 ;
  ImVec2 *arg3 = 0 ;
  ImU32 arg4 ;
  float arg5 ;
  int arg6 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  arg3 = *(ImVec2 **)&_swig_go_2; 
  arg4 = (ImU32)_swig_go_3; 
  arg5 = (float)_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  
  (arg1)->AddEllipseFilled((ImVec2 const &)*arg2,(ImVec2 const &)*arg3,arg4,arg5,arg6);
  
}


void _wrap_ImDrawList_AddEllipseFilled__SWIG_1_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, ImVec2 *_swig_go_1, ImVec2 *_swig_go_2, intgo _swig_go_3, float _swig_go_4) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImVec2 *arg2 = 0 ;
  ImVec2 *arg3 = 0 ;
  ImU32 arg4 ;
  float arg5 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  arg3 = *(ImVec2 **)&_swig_go_2; 
  arg4 = (ImU32)_swig_go_3; 
  arg5 = (float)_swig_go_4; 
  
  (arg1)->AddEllipseFilled((ImVec2 const &)*arg2,(ImVec2 const &)*arg3,arg4,arg5);
  
}


void _wrap_ImDrawList_AddEllipseFilled__SWIG_2_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, ImVec2 *_swig_go_1, ImVec2 *_swig_go_2, intgo _swig_go_3) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImVec2 *arg2 = 0 ;
  ImVec2 *arg3 = 0 ;
  ImU32 arg4 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  arg3 = *(ImVec2 **)&_swig_go_2; 
  arg4 = (ImU32)_swig_go_3; 
  
  (arg1)->AddEllipseFilled((ImVec2 const &)*arg2,(ImVec2 const &)*arg3,arg4);
  
}


void _wrap_ImDrawList_AddText__SWIG_0_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, ImVec2 *_swig_go_1, intgo _swig_go_2, _gostring_ _swig_go_3, _gostring_ _swig_go_4) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImVec2 *arg2 = 0 ;
  ImU32 arg3 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  arg3 = (ImU32)_swig_go_2; 
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  
  arg5 = (char *)malloc(_swig_go_4.n + 1);
  memcpy(arg5, _swig_go_4.p, _swig_go_4.n);
  arg5[_swig_go_4.n] = '\0';
  
  
  (arg1)->AddText((ImVec2 const &)*arg2,arg3,(char const *)arg4,(char const *)arg5);
  
  free(arg4); 
  free(arg5); 
}


void _wrap_ImDrawList_AddText__SWIG_1_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, ImVec2 *_swig_go_1, intgo _swig_go_2, _gostring_ _swig_go_3) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImVec2 *arg2 = 0 ;
  ImU32 arg3 ;
  char *arg4 = (char *) 0 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  arg3 = (ImU32)_swig_go_2; 
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  
  (arg1)->AddText((ImVec2 const &)*arg2,arg3,(char const *)arg4);
  
  free(arg4); 
}


void _wrap_ImDrawList_AddText__SWIG_2_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, ImFont *_swig_go_1, float _swig_go_2, ImVec2 *_swig_go_3, intgo _swig_go_4, _gostring_ _swig_go_5, _gostring_ _swig_go_6, float _swig_go_7, ImVec4 *_swig_go_8) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImFont *arg2 = (ImFont *) 0 ;
  float arg3 ;
  ImVec2 *arg4 = 0 ;
  ImU32 arg5 ;
  char *arg6 = (char *) 0 ;
  char *arg7 = (char *) 0 ;
  float arg8 ;
  ImVec4 *arg9 = (ImVec4 *) 0 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = *(ImFont **)&_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  arg4 = *(ImVec2 **)&_swig_go_3; 
  arg5 = (ImU32)_swig_go_4; 
  
  arg6 = (char *)malloc(_swig_go_5.n + 1);
  memcpy(arg6, _swig_go_5.p, _swig_go_5.n);
  arg6[_swig_go_5.n] = '\0';
  
  
  arg7 = (char *)malloc(_swig_go_6.n + 1);
  memcpy(arg7, _swig_go_6.p, _swig_go_6.n);
  arg7[_swig_go_6.n] = '\0';
  
  arg8 = (float)_swig_go_7; 
  arg9 = *(ImVec4 **)&_swig_go_8; 
  
  (arg1)->AddText((ImFont const *)arg2,arg3,(ImVec2 const &)*arg4,arg5,(char const *)arg6,(char const *)arg7,arg8,(ImVec4 const *)arg9);
  
  free(arg6); 
  free(arg7); 
}


void _wrap_ImDrawList_AddText__SWIG_3_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, ImFont *_swig_go_1, float _swig_go_2, ImVec2 *_swig_go_3, intgo _swig_go_4, _gostring_ _swig_go_5, _gostring_ _swig_go_6, float _swig_go_7) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImFont *arg2 = (ImFont *) 0 ;
  float arg3 ;
  ImVec2 *arg4 = 0 ;
  ImU32 arg5 ;
  char *arg6 = (char *) 0 ;
  char *arg7 = (char *) 0 ;
  float arg8 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = *(ImFont **)&_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  arg4 = *(ImVec2 **)&_swig_go_3; 
  arg5 = (ImU32)_swig_go_4; 
  
  arg6 = (char *)malloc(_swig_go_5.n + 1);
  memcpy(arg6, _swig_go_5.p, _swig_go_5.n);
  arg6[_swig_go_5.n] = '\0';
  
  
  arg7 = (char *)malloc(_swig_go_6.n + 1);
  memcpy(arg7, _swig_go_6.p, _swig_go_6.n);
  arg7[_swig_go_6.n] = '\0';
  
  arg8 = (float)_swig_go_7; 
  
  (arg1)->AddText((ImFont const *)arg2,arg3,(ImVec2 const &)*arg4,arg5,(char const *)arg6,(char const *)arg7,arg8);
  
  free(arg6); 
  free(arg7); 
}


void _wrap_ImDrawList_AddText__SWIG_4_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, ImFont *_swig_go_1, float _swig_go_2, ImVec2 *_swig_go_3, intgo _swig_go_4, _gostring_ _swig_go_5, _gostring_ _swig_go_6) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImFont *arg2 = (ImFont *) 0 ;
  float arg3 ;
  ImVec2 *arg4 = 0 ;
  ImU32 arg5 ;
  char *arg6 = (char *) 0 ;
  char *arg7 = (char *) 0 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = *(ImFont **)&_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  arg4 = *(ImVec2 **)&_swig_go_3; 
  arg5 = (ImU32)_swig_go_4; 
  
  arg6 = (char *)malloc(_swig_go_5.n + 1);
  memcpy(arg6, _swig_go_5.p, _swig_go_5.n);
  arg6[_swig_go_5.n] = '\0';
  
  
  arg7 = (char *)malloc(_swig_go_6.n + 1);
  memcpy(arg7, _swig_go_6.p, _swig_go_6.n);
  arg7[_swig_go_6.n] = '\0';
  
  
  (arg1)->AddText((ImFont const *)arg2,arg3,(ImVec2 const &)*arg4,arg5,(char const *)arg6,(char const *)arg7);
  
  free(arg6); 
  free(arg7); 
}


void _wrap_ImDrawList_AddText__SWIG_5_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, ImFont *_swig_go_1, float _swig_go_2, ImVec2 *_swig_go_3, intgo _swig_go_4, _gostring_ _swig_go_5) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImFont *arg2 = (ImFont *) 0 ;
  float arg3 ;
  ImVec2 *arg4 = 0 ;
  ImU32 arg5 ;
  char *arg6 = (char *) 0 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = *(ImFont **)&_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  arg4 = *(ImVec2 **)&_swig_go_3; 
  arg5 = (ImU32)_swig_go_4; 
  
  arg6 = (char *)malloc(_swig_go_5.n + 1);
  memcpy(arg6, _swig_go_5.p, _swig_go_5.n);
  arg6[_swig_go_5.n] = '\0';
  
  
  (arg1)->AddText((ImFont const *)arg2,arg3,(ImVec2 const &)*arg4,arg5,(char const *)arg6);
  
  free(arg6); 
}


void _wrap_ImDrawList_AddBezierCubic__SWIG_0_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, ImVec2 *_swig_go_1, ImVec2 *_swig_go_2, ImVec2 *_swig_go_3, ImVec2 *_swig_go_4, intgo _swig_go_5, float _swig_go_6, intgo _swig_go_7) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImVec2 *arg2 = 0 ;
  ImVec2 *arg3 = 0 ;
  ImVec2 *arg4 = 0 ;
  ImVec2 *arg5 = 0 ;
  ImU32 arg6 ;
  float arg7 ;
  int arg8 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  arg3 = *(ImVec2 **)&_swig_go_2; 
  arg4 = *(ImVec2 **)&_swig_go_3; 
  arg5 = *(ImVec2 **)&_swig_go_4; 
  arg6 = (ImU32)_swig_go_5; 
  arg7 = (float)_swig_go_6; 
  arg8 = (int)_swig_go_7; 
  
  (arg1)->AddBezierCubic((ImVec2 const &)*arg2,(ImVec2 const &)*arg3,(ImVec2 const &)*arg4,(ImVec2 const &)*arg5,arg6,arg7,arg8);
  
}


void _wrap_ImDrawList_AddBezierCubic__SWIG_1_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, ImVec2 *_swig_go_1, ImVec2 *_swig_go_2, ImVec2 *_swig_go_3, ImVec2 *_swig_go_4, intgo _swig_go_5, float _swig_go_6) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImVec2 *arg2 = 0 ;
  ImVec2 *arg3 = 0 ;
  ImVec2 *arg4 = 0 ;
  ImVec2 *arg5 = 0 ;
  ImU32 arg6 ;
  float arg7 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  arg3 = *(ImVec2 **)&_swig_go_2; 
  arg4 = *(ImVec2 **)&_swig_go_3; 
  arg5 = *(ImVec2 **)&_swig_go_4; 
  arg6 = (ImU32)_swig_go_5; 
  arg7 = (float)_swig_go_6; 
  
  (arg1)->AddBezierCubic((ImVec2 const &)*arg2,(ImVec2 const &)*arg3,(ImVec2 const &)*arg4,(ImVec2 const &)*arg5,arg6,arg7);
  
}


void _wrap_ImDrawList_AddBezierQuadratic__SWIG_0_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, ImVec2 *_swig_go_1, ImVec2 *_swig_go_2, ImVec2 *_swig_go_3, intgo _swig_go_4, float _swig_go_5, intgo _swig_go_6) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImVec2 *arg2 = 0 ;
  ImVec2 *arg3 = 0 ;
  ImVec2 *arg4 = 0 ;
  ImU32 arg5 ;
  float arg6 ;
  int arg7 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  arg3 = *(ImVec2 **)&_swig_go_2; 
  arg4 = *(ImVec2 **)&_swig_go_3; 
  arg5 = (ImU32)_swig_go_4; 
  arg6 = (float)_swig_go_5; 
  arg7 = (int)_swig_go_6; 
  
  (arg1)->AddBezierQuadratic((ImVec2 const &)*arg2,(ImVec2 const &)*arg3,(ImVec2 const &)*arg4,arg5,arg6,arg7);
  
}


void _wrap_ImDrawList_AddBezierQuadratic__SWIG_1_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, ImVec2 *_swig_go_1, ImVec2 *_swig_go_2, ImVec2 *_swig_go_3, intgo _swig_go_4, float _swig_go_5) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImVec2 *arg2 = 0 ;
  ImVec2 *arg3 = 0 ;
  ImVec2 *arg4 = 0 ;
  ImU32 arg5 ;
  float arg6 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  arg3 = *(ImVec2 **)&_swig_go_2; 
  arg4 = *(ImVec2 **)&_swig_go_3; 
  arg5 = (ImU32)_swig_go_4; 
  arg6 = (float)_swig_go_5; 
  
  (arg1)->AddBezierQuadratic((ImVec2 const &)*arg2,(ImVec2 const &)*arg3,(ImVec2 const &)*arg4,arg5,arg6);
  
}


void _wrap_ImDrawList_AddPolyline_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, ImVec2 *_swig_go_1, intgo _swig_go_2, intgo _swig_go_3, intgo _swig_go_4, float _swig_go_5) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImVec2 *arg2 = (ImVec2 *) 0 ;
  int arg3 ;
  ImU32 arg4 ;
  ImDrawFlags arg5 ;
  float arg6 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (ImU32)_swig_go_3; 
  arg5 = (ImDrawFlags)_swig_go_4; 
  arg6 = (float)_swig_go_5; 
  
  (arg1)->AddPolyline((ImVec2 const *)arg2,arg3,arg4,arg5,arg6);
  
}


void _wrap_ImDrawList_AddConvexPolyFilled_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, ImVec2 *_swig_go_1, intgo _swig_go_2, intgo _swig_go_3) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImVec2 *arg2 = (ImVec2 *) 0 ;
  int arg3 ;
  ImU32 arg4 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (ImU32)_swig_go_3; 
  
  (arg1)->AddConvexPolyFilled((ImVec2 const *)arg2,arg3,arg4);
  
}


void _wrap_ImDrawList_AddConcavePolyFilled_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, ImVec2 *_swig_go_1, intgo _swig_go_2, intgo _swig_go_3) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImVec2 *arg2 = (ImVec2 *) 0 ;
  int arg3 ;
  ImU32 arg4 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (ImU32)_swig_go_3; 
  
  (arg1)->AddConcavePolyFilled((ImVec2 const *)arg2,arg3,arg4);
  
}


void _wrap_ImDrawList_AddImage__SWIG_0_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, ImTextureID _swig_go_1, ImVec2 *_swig_go_2, ImVec2 *_swig_go_3, ImVec2 *_swig_go_4, ImVec2 *_swig_go_5, intgo _swig_go_6) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImTextureID arg2 = (ImTextureID) 0 ;
  ImVec2 *arg3 = 0 ;
  ImVec2 *arg4 = 0 ;
  ImVec2 *arg5 = 0 ;
  ImVec2 *arg6 = 0 ;
  ImU32 arg7 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = *(ImTextureID *)&_swig_go_1; 
  arg3 = *(ImVec2 **)&_swig_go_2; 
  arg4 = *(ImVec2 **)&_swig_go_3; 
  arg5 = *(ImVec2 **)&_swig_go_4; 
  arg6 = *(ImVec2 **)&_swig_go_5; 
  arg7 = (ImU32)_swig_go_6; 
  
  (arg1)->AddImage(arg2,(ImVec2 const &)*arg3,(ImVec2 const &)*arg4,(ImVec2 const &)*arg5,(ImVec2 const &)*arg6,arg7);
  
}


void _wrap_ImDrawList_AddImage__SWIG_1_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, ImTextureID _swig_go_1, ImVec2 *_swig_go_2, ImVec2 *_swig_go_3, ImVec2 *_swig_go_4, ImVec2 *_swig_go_5) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImTextureID arg2 = (ImTextureID) 0 ;
  ImVec2 *arg3 = 0 ;
  ImVec2 *arg4 = 0 ;
  ImVec2 *arg5 = 0 ;
  ImVec2 *arg6 = 0 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = *(ImTextureID *)&_swig_go_1; 
  arg3 = *(ImVec2 **)&_swig_go_2; 
  arg4 = *(ImVec2 **)&_swig_go_3; 
  arg5 = *(ImVec2 **)&_swig_go_4; 
  arg6 = *(ImVec2 **)&_swig_go_5; 
  
  (arg1)->AddImage(arg2,(ImVec2 const &)*arg3,(ImVec2 const &)*arg4,(ImVec2 const &)*arg5,(ImVec2 const &)*arg6);
  
}


void _wrap_ImDrawList_AddImage__SWIG_2_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, ImTextureID _swig_go_1, ImVec2 *_swig_go_2, ImVec2 *_swig_go_3, ImVec2 *_swig_go_4) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImTextureID arg2 = (ImTextureID) 0 ;
  ImVec2 *arg3 = 0 ;
  ImVec2 *arg4 = 0 ;
  ImVec2 *arg5 = 0 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = *(ImTextureID *)&_swig_go_1; 
  arg3 = *(ImVec2 **)&_swig_go_2; 
  arg4 = *(ImVec2 **)&_swig_go_3; 
  arg5 = *(ImVec2 **)&_swig_go_4; 
  
  (arg1)->AddImage(arg2,(ImVec2 const &)*arg3,(ImVec2 const &)*arg4,(ImVec2 const &)*arg5);
  
}


void _wrap_ImDrawList_AddImage__SWIG_3_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, ImTextureID _swig_go_1, ImVec2 *_swig_go_2, ImVec2 *_swig_go_3) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImTextureID arg2 = (ImTextureID) 0 ;
  ImVec2 *arg3 = 0 ;
  ImVec2 *arg4 = 0 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = *(ImTextureID *)&_swig_go_1; 
  arg3 = *(ImVec2 **)&_swig_go_2; 
  arg4 = *(ImVec2 **)&_swig_go_3; 
  
  (arg1)->AddImage(arg2,(ImVec2 const &)*arg3,(ImVec2 const &)*arg4);
  
}


void _wrap_ImDrawList_AddImageQuad__SWIG_0_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, ImTextureID _swig_go_1, ImVec2 *_swig_go_2, ImVec2 *_swig_go_3, ImVec2 *_swig_go_4, ImVec2 *_swig_go_5, ImVec2 *_swig_go_6, ImVec2 *_swig_go_7, ImVec2 *_swig_go_8, ImVec2 *_swig_go_9, intgo _swig_go_10) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImTextureID arg2 = (ImTextureID) 0 ;
  ImVec2 *arg3 = 0 ;
  ImVec2 *arg4 = 0 ;
  ImVec2 *arg5 = 0 ;
  ImVec2 *arg6 = 0 ;
  ImVec2 *arg7 = 0 ;
  ImVec2 *arg8 = 0 ;
  ImVec2 *arg9 = 0 ;
  ImVec2 *arg10 = 0 ;
  ImU32 arg11 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = *(ImTextureID *)&_swig_go_1; 
  arg3 = *(ImVec2 **)&_swig_go_2; 
  arg4 = *(ImVec2 **)&_swig_go_3; 
  arg5 = *(ImVec2 **)&_swig_go_4; 
  arg6 = *(ImVec2 **)&_swig_go_5; 
  arg7 = *(ImVec2 **)&_swig_go_6; 
  arg8 = *(ImVec2 **)&_swig_go_7; 
  arg9 = *(ImVec2 **)&_swig_go_8; 
  arg10 = *(ImVec2 **)&_swig_go_9; 
  arg11 = (ImU32)_swig_go_10; 
  
  (arg1)->AddImageQuad(arg2,(ImVec2 const &)*arg3,(ImVec2 const &)*arg4,(ImVec2 const &)*arg5,(ImVec2 const &)*arg6,(ImVec2 const &)*arg7,(ImVec2 const &)*arg8,(ImVec2 const &)*arg9,(ImVec2 const &)*arg10,arg11);
  
}


void _wrap_ImDrawList_AddImageQuad__SWIG_1_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, ImTextureID _swig_go_1, ImVec2 *_swig_go_2, ImVec2 *_swig_go_3, ImVec2 *_swig_go_4, ImVec2 *_swig_go_5, ImVec2 *_swig_go_6, ImVec2 *_swig_go_7, ImVec2 *_swig_go_8, ImVec2 *_swig_go_9) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImTextureID arg2 = (ImTextureID) 0 ;
  ImVec2 *arg3 = 0 ;
  ImVec2 *arg4 = 0 ;
  ImVec2 *arg5 = 0 ;
  ImVec2 *arg6 = 0 ;
  ImVec2 *arg7 = 0 ;
  ImVec2 *arg8 = 0 ;
  ImVec2 *arg9 = 0 ;
  ImVec2 *arg10 = 0 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = *(ImTextureID *)&_swig_go_1; 
  arg3 = *(ImVec2 **)&_swig_go_2; 
  arg4 = *(ImVec2 **)&_swig_go_3; 
  arg5 = *(ImVec2 **)&_swig_go_4; 
  arg6 = *(ImVec2 **)&_swig_go_5; 
  arg7 = *(ImVec2 **)&_swig_go_6; 
  arg8 = *(ImVec2 **)&_swig_go_7; 
  arg9 = *(ImVec2 **)&_swig_go_8; 
  arg10 = *(ImVec2 **)&_swig_go_9; 
  
  (arg1)->AddImageQuad(arg2,(ImVec2 const &)*arg3,(ImVec2 const &)*arg4,(ImVec2 const &)*arg5,(ImVec2 const &)*arg6,(ImVec2 const &)*arg7,(ImVec2 const &)*arg8,(ImVec2 const &)*arg9,(ImVec2 const &)*arg10);
  
}


void _wrap_ImDrawList_AddImageQuad__SWIG_2_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, ImTextureID _swig_go_1, ImVec2 *_swig_go_2, ImVec2 *_swig_go_3, ImVec2 *_swig_go_4, ImVec2 *_swig_go_5, ImVec2 *_swig_go_6, ImVec2 *_swig_go_7, ImVec2 *_swig_go_8) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImTextureID arg2 = (ImTextureID) 0 ;
  ImVec2 *arg3 = 0 ;
  ImVec2 *arg4 = 0 ;
  ImVec2 *arg5 = 0 ;
  ImVec2 *arg6 = 0 ;
  ImVec2 *arg7 = 0 ;
  ImVec2 *arg8 = 0 ;
  ImVec2 *arg9 = 0 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = *(ImTextureID *)&_swig_go_1; 
  arg3 = *(ImVec2 **)&_swig_go_2; 
  arg4 = *(ImVec2 **)&_swig_go_3; 
  arg5 = *(ImVec2 **)&_swig_go_4; 
  arg6 = *(ImVec2 **)&_swig_go_5; 
  arg7 = *(ImVec2 **)&_swig_go_6; 
  arg8 = *(ImVec2 **)&_swig_go_7; 
  arg9 = *(ImVec2 **)&_swig_go_8; 
  
  (arg1)->AddImageQuad(arg2,(ImVec2 const &)*arg3,(ImVec2 const &)*arg4,(ImVec2 const &)*arg5,(ImVec2 const &)*arg6,(ImVec2 const &)*arg7,(ImVec2 const &)*arg8,(ImVec2 const &)*arg9);
  
}


void _wrap_ImDrawList_AddImageQuad__SWIG_3_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, ImTextureID _swig_go_1, ImVec2 *_swig_go_2, ImVec2 *_swig_go_3, ImVec2 *_swig_go_4, ImVec2 *_swig_go_5, ImVec2 *_swig_go_6, ImVec2 *_swig_go_7) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImTextureID arg2 = (ImTextureID) 0 ;
  ImVec2 *arg3 = 0 ;
  ImVec2 *arg4 = 0 ;
  ImVec2 *arg5 = 0 ;
  ImVec2 *arg6 = 0 ;
  ImVec2 *arg7 = 0 ;
  ImVec2 *arg8 = 0 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = *(ImTextureID *)&_swig_go_1; 
  arg3 = *(ImVec2 **)&_swig_go_2; 
  arg4 = *(ImVec2 **)&_swig_go_3; 
  arg5 = *(ImVec2 **)&_swig_go_4; 
  arg6 = *(ImVec2 **)&_swig_go_5; 
  arg7 = *(ImVec2 **)&_swig_go_6; 
  arg8 = *(ImVec2 **)&_swig_go_7; 
  
  (arg1)->AddImageQuad(arg2,(ImVec2 const &)*arg3,(ImVec2 const &)*arg4,(ImVec2 const &)*arg5,(ImVec2 const &)*arg6,(ImVec2 const &)*arg7,(ImVec2 const &)*arg8);
  
}


void _wrap_ImDrawList_AddImageQuad__SWIG_4_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, ImTextureID _swig_go_1, ImVec2 *_swig_go_2, ImVec2 *_swig_go_3, ImVec2 *_swig_go_4, ImVec2 *_swig_go_5, ImVec2 *_swig_go_6) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImTextureID arg2 = (ImTextureID) 0 ;
  ImVec2 *arg3 = 0 ;
  ImVec2 *arg4 = 0 ;
  ImVec2 *arg5 = 0 ;
  ImVec2 *arg6 = 0 ;
  ImVec2 *arg7 = 0 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = *(ImTextureID *)&_swig_go_1; 
  arg3 = *(ImVec2 **)&_swig_go_2; 
  arg4 = *(ImVec2 **)&_swig_go_3; 
  arg5 = *(ImVec2 **)&_swig_go_4; 
  arg6 = *(ImVec2 **)&_swig_go_5; 
  arg7 = *(ImVec2 **)&_swig_go_6; 
  
  (arg1)->AddImageQuad(arg2,(ImVec2 const &)*arg3,(ImVec2 const &)*arg4,(ImVec2 const &)*arg5,(ImVec2 const &)*arg6,(ImVec2 const &)*arg7);
  
}


void _wrap_ImDrawList_AddImageQuad__SWIG_5_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, ImTextureID _swig_go_1, ImVec2 *_swig_go_2, ImVec2 *_swig_go_3, ImVec2 *_swig_go_4, ImVec2 *_swig_go_5) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImTextureID arg2 = (ImTextureID) 0 ;
  ImVec2 *arg3 = 0 ;
  ImVec2 *arg4 = 0 ;
  ImVec2 *arg5 = 0 ;
  ImVec2 *arg6 = 0 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = *(ImTextureID *)&_swig_go_1; 
  arg3 = *(ImVec2 **)&_swig_go_2; 
  arg4 = *(ImVec2 **)&_swig_go_3; 
  arg5 = *(ImVec2 **)&_swig_go_4; 
  arg6 = *(ImVec2 **)&_swig_go_5; 
  
  (arg1)->AddImageQuad(arg2,(ImVec2 const &)*arg3,(ImVec2 const &)*arg4,(ImVec2 const &)*arg5,(ImVec2 const &)*arg6);
  
}


void _wrap_ImDrawList_AddImageRounded__SWIG_0_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, ImTextureID _swig_go_1, ImVec2 *_swig_go_2, ImVec2 *_swig_go_3, ImVec2 *_swig_go_4, ImVec2 *_swig_go_5, intgo _swig_go_6, float _swig_go_7, intgo _swig_go_8) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImTextureID arg2 = (ImTextureID) 0 ;
  ImVec2 *arg3 = 0 ;
  ImVec2 *arg4 = 0 ;
  ImVec2 *arg5 = 0 ;
  ImVec2 *arg6 = 0 ;
  ImU32 arg7 ;
  float arg8 ;
  ImDrawFlags arg9 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = *(ImTextureID *)&_swig_go_1; 
  arg3 = *(ImVec2 **)&_swig_go_2; 
  arg4 = *(ImVec2 **)&_swig_go_3; 
  arg5 = *(ImVec2 **)&_swig_go_4; 
  arg6 = *(ImVec2 **)&_swig_go_5; 
  arg7 = (ImU32)_swig_go_6; 
  arg8 = (float)_swig_go_7; 
  arg9 = (ImDrawFlags)_swig_go_8; 
  
  (arg1)->AddImageRounded(arg2,(ImVec2 const &)*arg3,(ImVec2 const &)*arg4,(ImVec2 const &)*arg5,(ImVec2 const &)*arg6,arg7,arg8,arg9);
  
}


void _wrap_ImDrawList_AddImageRounded__SWIG_1_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, ImTextureID _swig_go_1, ImVec2 *_swig_go_2, ImVec2 *_swig_go_3, ImVec2 *_swig_go_4, ImVec2 *_swig_go_5, intgo _swig_go_6, float _swig_go_7) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImTextureID arg2 = (ImTextureID) 0 ;
  ImVec2 *arg3 = 0 ;
  ImVec2 *arg4 = 0 ;
  ImVec2 *arg5 = 0 ;
  ImVec2 *arg6 = 0 ;
  ImU32 arg7 ;
  float arg8 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = *(ImTextureID *)&_swig_go_1; 
  arg3 = *(ImVec2 **)&_swig_go_2; 
  arg4 = *(ImVec2 **)&_swig_go_3; 
  arg5 = *(ImVec2 **)&_swig_go_4; 
  arg6 = *(ImVec2 **)&_swig_go_5; 
  arg7 = (ImU32)_swig_go_6; 
  arg8 = (float)_swig_go_7; 
  
  (arg1)->AddImageRounded(arg2,(ImVec2 const &)*arg3,(ImVec2 const &)*arg4,(ImVec2 const &)*arg5,(ImVec2 const &)*arg6,arg7,arg8);
  
}


void _wrap_ImDrawList_PathClear_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  
  (arg1)->PathClear();
  
}


void _wrap_ImDrawList_PathLineTo_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, ImVec2 *_swig_go_1) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImVec2 *arg2 = 0 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  
  (arg1)->PathLineTo((ImVec2 const &)*arg2);
  
}


void _wrap_ImDrawList_PathLineToMergeDuplicate_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, ImVec2 *_swig_go_1) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImVec2 *arg2 = 0 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  
  (arg1)->PathLineToMergeDuplicate((ImVec2 const &)*arg2);
  
}


void _wrap_ImDrawList_PathFillConvex_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, intgo _swig_go_1) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImU32 arg2 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = (ImU32)_swig_go_1; 
  
  (arg1)->PathFillConvex(arg2);
  
}


void _wrap_ImDrawList_PathFillConcave_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, intgo _swig_go_1) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImU32 arg2 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = (ImU32)_swig_go_1; 
  
  (arg1)->PathFillConcave(arg2);
  
}


void _wrap_ImDrawList_PathStroke__SWIG_0_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2, float _swig_go_3) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImU32 arg2 ;
  ImDrawFlags arg3 ;
  float arg4 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = (ImU32)_swig_go_1; 
  arg3 = (ImDrawFlags)_swig_go_2; 
  arg4 = (float)_swig_go_3; 
  
  (arg1)->PathStroke(arg2,arg3,arg4);
  
}


void _wrap_ImDrawList_PathStroke__SWIG_1_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImU32 arg2 ;
  ImDrawFlags arg3 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = (ImU32)_swig_go_1; 
  arg3 = (ImDrawFlags)_swig_go_2; 
  
  (arg1)->PathStroke(arg2,arg3);
  
}


void _wrap_ImDrawList_PathStroke__SWIG_2_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, intgo _swig_go_1) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImU32 arg2 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = (ImU32)_swig_go_1; 
  
  (arg1)->PathStroke(arg2);
  
}


void _wrap_ImDrawList_PathArcTo__SWIG_0_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, ImVec2 *_swig_go_1, float _swig_go_2, float _swig_go_3, float _swig_go_4, intgo _swig_go_5) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImVec2 *arg2 = 0 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  int arg6 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  arg4 = (float)_swig_go_3; 
  arg5 = (float)_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  
  (arg1)->PathArcTo((ImVec2 const &)*arg2,arg3,arg4,arg5,arg6);
  
}


void _wrap_ImDrawList_PathArcTo__SWIG_1_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, ImVec2 *_swig_go_1, float _swig_go_2, float _swig_go_3, float _swig_go_4) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImVec2 *arg2 = 0 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  arg4 = (float)_swig_go_3; 
  arg5 = (float)_swig_go_4; 
  
  (arg1)->PathArcTo((ImVec2 const &)*arg2,arg3,arg4,arg5);
  
}


void _wrap_ImDrawList_PathArcToFast_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, ImVec2 *_swig_go_1, float _swig_go_2, intgo _swig_go_3, intgo _swig_go_4) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImVec2 *arg2 = 0 ;
  float arg3 ;
  int arg4 ;
  int arg5 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  (arg1)->PathArcToFast((ImVec2 const &)*arg2,arg3,arg4,arg5);
  
}


void _wrap_ImDrawList_PathEllipticalArcTo__SWIG_0_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, ImVec2 *_swig_go_1, ImVec2 *_swig_go_2, float _swig_go_3, float _swig_go_4, float _swig_go_5, intgo _swig_go_6) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImVec2 *arg2 = 0 ;
  ImVec2 *arg3 = 0 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  int arg7 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  arg3 = *(ImVec2 **)&_swig_go_2; 
  arg4 = (float)_swig_go_3; 
  arg5 = (float)_swig_go_4; 
  arg6 = (float)_swig_go_5; 
  arg7 = (int)_swig_go_6; 
  
  (arg1)->PathEllipticalArcTo((ImVec2 const &)*arg2,(ImVec2 const &)*arg3,arg4,arg5,arg6,arg7);
  
}


void _wrap_ImDrawList_PathEllipticalArcTo__SWIG_1_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, ImVec2 *_swig_go_1, ImVec2 *_swig_go_2, float _swig_go_3, float _swig_go_4, float _swig_go_5) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImVec2 *arg2 = 0 ;
  ImVec2 *arg3 = 0 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  arg3 = *(ImVec2 **)&_swig_go_2; 
  arg4 = (float)_swig_go_3; 
  arg5 = (float)_swig_go_4; 
  arg6 = (float)_swig_go_5; 
  
  (arg1)->PathEllipticalArcTo((ImVec2 const &)*arg2,(ImVec2 const &)*arg3,arg4,arg5,arg6);
  
}


void _wrap_ImDrawList_PathBezierCubicCurveTo__SWIG_0_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, ImVec2 *_swig_go_1, ImVec2 *_swig_go_2, ImVec2 *_swig_go_3, intgo _swig_go_4) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImVec2 *arg2 = 0 ;
  ImVec2 *arg3 = 0 ;
  ImVec2 *arg4 = 0 ;
  int arg5 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  arg3 = *(ImVec2 **)&_swig_go_2; 
  arg4 = *(ImVec2 **)&_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  (arg1)->PathBezierCubicCurveTo((ImVec2 const &)*arg2,(ImVec2 const &)*arg3,(ImVec2 const &)*arg4,arg5);
  
}


void _wrap_ImDrawList_PathBezierCubicCurveTo__SWIG_1_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, ImVec2 *_swig_go_1, ImVec2 *_swig_go_2, ImVec2 *_swig_go_3) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImVec2 *arg2 = 0 ;
  ImVec2 *arg3 = 0 ;
  ImVec2 *arg4 = 0 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  arg3 = *(ImVec2 **)&_swig_go_2; 
  arg4 = *(ImVec2 **)&_swig_go_3; 
  
  (arg1)->PathBezierCubicCurveTo((ImVec2 const &)*arg2,(ImVec2 const &)*arg3,(ImVec2 const &)*arg4);
  
}


void _wrap_ImDrawList_PathBezierQuadraticCurveTo__SWIG_0_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, ImVec2 *_swig_go_1, ImVec2 *_swig_go_2, intgo _swig_go_3) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImVec2 *arg2 = 0 ;
  ImVec2 *arg3 = 0 ;
  int arg4 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  arg3 = *(ImVec2 **)&_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  (arg1)->PathBezierQuadraticCurveTo((ImVec2 const &)*arg2,(ImVec2 const &)*arg3,arg4);
  
}


void _wrap_ImDrawList_PathBezierQuadraticCurveTo__SWIG_1_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, ImVec2 *_swig_go_1, ImVec2 *_swig_go_2) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImVec2 *arg2 = 0 ;
  ImVec2 *arg3 = 0 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  arg3 = *(ImVec2 **)&_swig_go_2; 
  
  (arg1)->PathBezierQuadraticCurveTo((ImVec2 const &)*arg2,(ImVec2 const &)*arg3);
  
}


void _wrap_ImDrawList_PathRect__SWIG_0_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, ImVec2 *_swig_go_1, ImVec2 *_swig_go_2, float _swig_go_3, intgo _swig_go_4) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImVec2 *arg2 = 0 ;
  ImVec2 *arg3 = 0 ;
  float arg4 ;
  ImDrawFlags arg5 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  arg3 = *(ImVec2 **)&_swig_go_2; 
  arg4 = (float)_swig_go_3; 
  arg5 = (ImDrawFlags)_swig_go_4; 
  
  (arg1)->PathRect((ImVec2 const &)*arg2,(ImVec2 const &)*arg3,arg4,arg5);
  
}


void _wrap_ImDrawList_PathRect__SWIG_1_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, ImVec2 *_swig_go_1, ImVec2 *_swig_go_2, float _swig_go_3) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImVec2 *arg2 = 0 ;
  ImVec2 *arg3 = 0 ;
  float arg4 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  arg3 = *(ImVec2 **)&_swig_go_2; 
  arg4 = (float)_swig_go_3; 
  
  (arg1)->PathRect((ImVec2 const &)*arg2,(ImVec2 const &)*arg3,arg4);
  
}


void _wrap_ImDrawList_PathRect__SWIG_2_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, ImVec2 *_swig_go_1, ImVec2 *_swig_go_2) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImVec2 *arg2 = 0 ;
  ImVec2 *arg3 = 0 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  arg3 = *(ImVec2 **)&_swig_go_2; 
  
  (arg1)->PathRect((ImVec2 const &)*arg2,(ImVec2 const &)*arg3);
  
}


void _wrap_ImDrawList_AddCallback_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, void* _swig_go_1, void *_swig_go_2) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImDrawCallback arg2 = (ImDrawCallback) 0 ;
  void *arg3 = (void *) 0 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = *(ImDrawCallback *)&_swig_go_1; 
  arg3 = *(void **)&_swig_go_2; 
  
  (arg1)->AddCallback(arg2,arg3);
  
}


void _wrap_ImDrawList_AddDrawCmd_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  
  (arg1)->AddDrawCmd();
  
}


ImDrawList *_wrap_ImDrawList_CloneOutput_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImDrawList *result = 0 ;
  ImDrawList *_swig_go_result;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  
  result = (ImDrawList *)((ImDrawList const *)arg1)->CloneOutput();
  *(ImDrawList **)&_swig_go_result = (ImDrawList *)result; 
  return _swig_go_result;
}


void _wrap_ImDrawList_ChannelsSplit_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, intgo _swig_go_1) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  int arg2 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  (arg1)->ChannelsSplit(arg2);
  
}


void _wrap_ImDrawList_ChannelsMerge_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  
  (arg1)->ChannelsMerge();
  
}


void _wrap_ImDrawList_ChannelsSetCurrent_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, intgo _swig_go_1) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  int arg2 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  (arg1)->ChannelsSetCurrent(arg2);
  
}


void _wrap_ImDrawList_PrimReserve_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  (arg1)->PrimReserve(arg2,arg3);
  
}


void _wrap_ImDrawList_PrimUnreserve_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  (arg1)->PrimUnreserve(arg2,arg3);
  
}


void _wrap_ImDrawList_PrimRect_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, ImVec2 *_swig_go_1, ImVec2 *_swig_go_2, intgo _swig_go_3) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImVec2 *arg2 = 0 ;
  ImVec2 *arg3 = 0 ;
  ImU32 arg4 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  arg3 = *(ImVec2 **)&_swig_go_2; 
  arg4 = (ImU32)_swig_go_3; 
  
  (arg1)->PrimRect((ImVec2 const &)*arg2,(ImVec2 const &)*arg3,arg4);
  
}


void _wrap_ImDrawList_PrimRectUV_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, ImVec2 *_swig_go_1, ImVec2 *_swig_go_2, ImVec2 *_swig_go_3, ImVec2 *_swig_go_4, intgo _swig_go_5) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImVec2 *arg2 = 0 ;
  ImVec2 *arg3 = 0 ;
  ImVec2 *arg4 = 0 ;
  ImVec2 *arg5 = 0 ;
  ImU32 arg6 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  arg3 = *(ImVec2 **)&_swig_go_2; 
  arg4 = *(ImVec2 **)&_swig_go_3; 
  arg5 = *(ImVec2 **)&_swig_go_4; 
  arg6 = (ImU32)_swig_go_5; 
  
  (arg1)->PrimRectUV((ImVec2 const &)*arg2,(ImVec2 const &)*arg3,(ImVec2 const &)*arg4,(ImVec2 const &)*arg5,arg6);
  
}


void _wrap_ImDrawList_PrimQuadUV_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, ImVec2 *_swig_go_1, ImVec2 *_swig_go_2, ImVec2 *_swig_go_3, ImVec2 *_swig_go_4, ImVec2 *_swig_go_5, ImVec2 *_swig_go_6, ImVec2 *_swig_go_7, ImVec2 *_swig_go_8, intgo _swig_go_9) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImVec2 *arg2 = 0 ;
  ImVec2 *arg3 = 0 ;
  ImVec2 *arg4 = 0 ;
  ImVec2 *arg5 = 0 ;
  ImVec2 *arg6 = 0 ;
  ImVec2 *arg7 = 0 ;
  ImVec2 *arg8 = 0 ;
  ImVec2 *arg9 = 0 ;
  ImU32 arg10 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  arg3 = *(ImVec2 **)&_swig_go_2; 
  arg4 = *(ImVec2 **)&_swig_go_3; 
  arg5 = *(ImVec2 **)&_swig_go_4; 
  arg6 = *(ImVec2 **)&_swig_go_5; 
  arg7 = *(ImVec2 **)&_swig_go_6; 
  arg8 = *(ImVec2 **)&_swig_go_7; 
  arg9 = *(ImVec2 **)&_swig_go_8; 
  arg10 = (ImU32)_swig_go_9; 
  
  (arg1)->PrimQuadUV((ImVec2 const &)*arg2,(ImVec2 const &)*arg3,(ImVec2 const &)*arg4,(ImVec2 const &)*arg5,(ImVec2 const &)*arg6,(ImVec2 const &)*arg7,(ImVec2 const &)*arg8,(ImVec2 const &)*arg9,arg10);
  
}


void _wrap_ImDrawList_PrimWriteVtx_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, ImVec2 *_swig_go_1, ImVec2 *_swig_go_2, intgo _swig_go_3) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImVec2 *arg2 = 0 ;
  ImVec2 *arg3 = 0 ;
  ImU32 arg4 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  arg3 = *(ImVec2 **)&_swig_go_2; 
  arg4 = (ImU32)_swig_go_3; 
  
  (arg1)->PrimWriteVtx((ImVec2 const &)*arg2,(ImVec2 const &)*arg3,arg4);
  
}


void _wrap_ImDrawList_PrimWriteIdx_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, short _swig_go_1) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImDrawIdx arg2 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = (ImDrawIdx)_swig_go_1; 
  
  (arg1)->PrimWriteIdx(arg2);
  
}


void _wrap_ImDrawList_PrimVtx_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, ImVec2 *_swig_go_1, ImVec2 *_swig_go_2, intgo _swig_go_3) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImVec2 *arg2 = 0 ;
  ImVec2 *arg3 = 0 ;
  ImU32 arg4 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  arg3 = *(ImVec2 **)&_swig_go_2; 
  arg4 = (ImU32)_swig_go_3; 
  
  (arg1)->PrimVtx((ImVec2 const &)*arg2,(ImVec2 const &)*arg3,arg4);
  
}


void _wrap_ImDrawList__ResetForNewFrame_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  
  (arg1)->_ResetForNewFrame();
  
}


void _wrap_ImDrawList__ClearFreeMemory_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  
  (arg1)->_ClearFreeMemory();
  
}


void _wrap_ImDrawList__PopUnusedDrawCmd_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  
  (arg1)->_PopUnusedDrawCmd();
  
}


void _wrap_ImDrawList__TryMergeDrawCmds_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  
  (arg1)->_TryMergeDrawCmds();
  
}


void _wrap_ImDrawList__OnChangedClipRect_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  
  (arg1)->_OnChangedClipRect();
  
}


void _wrap_ImDrawList__OnChangedTextureID_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  
  (arg1)->_OnChangedTextureID();
  
}


void _wrap_ImDrawList__OnChangedVtxOffset_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  
  (arg1)->_OnChangedVtxOffset();
  
}


void _wrap_ImDrawList__SetTextureID_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, ImTextureID _swig_go_1) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImTextureID arg2 = (ImTextureID) 0 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = *(ImTextureID *)&_swig_go_1; 
  
  (arg1)->_SetTextureID(arg2);
  
}


intgo _wrap_ImDrawList__CalcCircleAutoSegmentCount_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, float _swig_go_1) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  float arg2 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  result = (int)((ImDrawList const *)arg1)->_CalcCircleAutoSegmentCount(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImDrawList__PathArcToFastEx_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, ImVec2 *_swig_go_1, float _swig_go_2, intgo _swig_go_3, intgo _swig_go_4, intgo _swig_go_5) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImVec2 *arg2 = 0 ;
  float arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  
  (arg1)->_PathArcToFastEx((ImVec2 const &)*arg2,arg3,arg4,arg5,arg6);
  
}


void _wrap_ImDrawList__PathArcToN_imgui_568d46c1e1b4102a(ImDrawList *_swig_go_0, ImVec2 *_swig_go_1, float _swig_go_2, float _swig_go_3, float _swig_go_4, intgo _swig_go_5) {
  ImDrawList *arg1 = (ImDrawList *) 0 ;
  ImVec2 *arg2 = 0 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  int arg6 ;
  
  arg1 = *(ImDrawList **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  arg4 = (float)_swig_go_3; 
  arg5 = (float)_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  
  (arg1)->_PathArcToN((ImVec2 const &)*arg2,arg3,arg4,arg5,arg6);
  
}


void _wrap_ImDrawData_Valid_set_imgui_568d46c1e1b4102a(ImDrawData *_swig_go_0, bool _swig_go_1) {
  ImDrawData *arg1 = (ImDrawData *) 0 ;
  bool arg2 ;
  
  arg1 = *(ImDrawData **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->Valid = arg2;
  
}


bool _wrap_ImDrawData_Valid_get_imgui_568d46c1e1b4102a(ImDrawData *_swig_go_0) {
  ImDrawData *arg1 = (ImDrawData *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ImDrawData **)&_swig_go_0; 
  
  result = (bool) ((arg1)->Valid);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImDrawData_CmdListsCount_set_imgui_568d46c1e1b4102a(ImDrawData *_swig_go_0, intgo _swig_go_1) {
  ImDrawData *arg1 = (ImDrawData *) 0 ;
  int arg2 ;
  
  arg1 = *(ImDrawData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->CmdListsCount = arg2;
  
}


intgo _wrap_ImDrawData_CmdListsCount_get_imgui_568d46c1e1b4102a(ImDrawData *_swig_go_0) {
  ImDrawData *arg1 = (ImDrawData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(ImDrawData **)&_swig_go_0; 
  
  result = (int) ((arg1)->CmdListsCount);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImDrawData_TotalIdxCount_set_imgui_568d46c1e1b4102a(ImDrawData *_swig_go_0, intgo _swig_go_1) {
  ImDrawData *arg1 = (ImDrawData *) 0 ;
  int arg2 ;
  
  arg1 = *(ImDrawData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->TotalIdxCount = arg2;
  
}


intgo _wrap_ImDrawData_TotalIdxCount_get_imgui_568d46c1e1b4102a(ImDrawData *_swig_go_0) {
  ImDrawData *arg1 = (ImDrawData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(ImDrawData **)&_swig_go_0; 
  
  result = (int) ((arg1)->TotalIdxCount);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImDrawData_TotalVtxCount_set_imgui_568d46c1e1b4102a(ImDrawData *_swig_go_0, intgo _swig_go_1) {
  ImDrawData *arg1 = (ImDrawData *) 0 ;
  int arg2 ;
  
  arg1 = *(ImDrawData **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->TotalVtxCount = arg2;
  
}


intgo _wrap_ImDrawData_TotalVtxCount_get_imgui_568d46c1e1b4102a(ImDrawData *_swig_go_0) {
  ImDrawData *arg1 = (ImDrawData *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(ImDrawData **)&_swig_go_0; 
  
  result = (int) ((arg1)->TotalVtxCount);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImDrawData_CmdLists_set_imgui_568d46c1e1b4102a(ImDrawData *_swig_go_0, ImVector< ImDrawList * > *_swig_go_1) {
  ImDrawData *arg1 = (ImDrawData *) 0 ;
  ImVector< ImDrawList * > *arg2 = (ImVector< ImDrawList * > *) 0 ;
  
  arg1 = *(ImDrawData **)&_swig_go_0; 
  arg2 = *(ImVector< ImDrawList * > **)&_swig_go_1; 
  
  if (arg1) (arg1)->CmdLists = *arg2;
  
}


ImVector< ImDrawList * > *_wrap_ImDrawData_CmdLists_get_imgui_568d46c1e1b4102a(ImDrawData *_swig_go_0) {
  ImDrawData *arg1 = (ImDrawData *) 0 ;
  ImVector< ImDrawList * > *result = 0 ;
  ImVector< ImDrawList * > *_swig_go_result;
  
  arg1 = *(ImDrawData **)&_swig_go_0; 
  
  result = (ImVector< ImDrawList * > *)& ((arg1)->CmdLists);
  *(ImVector< ImDrawList * > **)&_swig_go_result = (ImVector< ImDrawList * > *)result; 
  return _swig_go_result;
}


void _wrap_ImDrawData_DisplayPos_set_imgui_568d46c1e1b4102a(ImDrawData *_swig_go_0, ImVec2 *_swig_go_1) {
  ImDrawData *arg1 = (ImDrawData *) 0 ;
  ImVec2 *arg2 = (ImVec2 *) 0 ;
  
  arg1 = *(ImDrawData **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  
  if (arg1) (arg1)->DisplayPos = *arg2;
  
}


ImVec2 *_wrap_ImDrawData_DisplayPos_get_imgui_568d46c1e1b4102a(ImDrawData *_swig_go_0) {
  ImDrawData *arg1 = (ImDrawData *) 0 ;
  ImVec2 *result = 0 ;
  ImVec2 *_swig_go_result;
  
  arg1 = *(ImDrawData **)&_swig_go_0; 
  
  result = (ImVec2 *)& ((arg1)->DisplayPos);
  *(ImVec2 **)&_swig_go_result = (ImVec2 *)result; 
  return _swig_go_result;
}


void _wrap_ImDrawData_DisplaySize_set_imgui_568d46c1e1b4102a(ImDrawData *_swig_go_0, ImVec2 *_swig_go_1) {
  ImDrawData *arg1 = (ImDrawData *) 0 ;
  ImVec2 *arg2 = (ImVec2 *) 0 ;
  
  arg1 = *(ImDrawData **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  
  if (arg1) (arg1)->DisplaySize = *arg2;
  
}


ImVec2 *_wrap_ImDrawData_DisplaySize_get_imgui_568d46c1e1b4102a(ImDrawData *_swig_go_0) {
  ImDrawData *arg1 = (ImDrawData *) 0 ;
  ImVec2 *result = 0 ;
  ImVec2 *_swig_go_result;
  
  arg1 = *(ImDrawData **)&_swig_go_0; 
  
  result = (ImVec2 *)& ((arg1)->DisplaySize);
  *(ImVec2 **)&_swig_go_result = (ImVec2 *)result; 
  return _swig_go_result;
}


void _wrap_ImDrawData_FramebufferScale_set_imgui_568d46c1e1b4102a(ImDrawData *_swig_go_0, ImVec2 *_swig_go_1) {
  ImDrawData *arg1 = (ImDrawData *) 0 ;
  ImVec2 *arg2 = (ImVec2 *) 0 ;
  
  arg1 = *(ImDrawData **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  
  if (arg1) (arg1)->FramebufferScale = *arg2;
  
}


ImVec2 *_wrap_ImDrawData_FramebufferScale_get_imgui_568d46c1e1b4102a(ImDrawData *_swig_go_0) {
  ImDrawData *arg1 = (ImDrawData *) 0 ;
  ImVec2 *result = 0 ;
  ImVec2 *_swig_go_result;
  
  arg1 = *(ImDrawData **)&_swig_go_0; 
  
  result = (ImVec2 *)& ((arg1)->FramebufferScale);
  *(ImVec2 **)&_swig_go_result = (ImVec2 *)result; 
  return _swig_go_result;
}


void _wrap_ImDrawData_OwnerViewport_set_imgui_568d46c1e1b4102a(ImDrawData *_swig_go_0, ImGuiViewport *_swig_go_1) {
  ImDrawData *arg1 = (ImDrawData *) 0 ;
  ImGuiViewport *arg2 = (ImGuiViewport *) 0 ;
  
  arg1 = *(ImDrawData **)&_swig_go_0; 
  arg2 = *(ImGuiViewport **)&_swig_go_1; 
  
  if (arg1) (arg1)->OwnerViewport = arg2;
  
}


ImGuiViewport *_wrap_ImDrawData_OwnerViewport_get_imgui_568d46c1e1b4102a(ImDrawData *_swig_go_0) {
  ImDrawData *arg1 = (ImDrawData *) 0 ;
  ImGuiViewport *result = 0 ;
  ImGuiViewport *_swig_go_result;
  
  arg1 = *(ImDrawData **)&_swig_go_0; 
  
  result = (ImGuiViewport *) ((arg1)->OwnerViewport);
  *(ImGuiViewport **)&_swig_go_result = (ImGuiViewport *)result; 
  return _swig_go_result;
}


ImDrawData *_wrap_new_ImDrawData_imgui_568d46c1e1b4102a() {
  ImDrawData *result = 0 ;
  ImDrawData *_swig_go_result;
  
  
  result = (ImDrawData *)new ImDrawData();
  *(ImDrawData **)&_swig_go_result = (ImDrawData *)result; 
  return _swig_go_result;
}


void _wrap_ImDrawData_Clear_imgui_568d46c1e1b4102a(ImDrawData *_swig_go_0) {
  ImDrawData *arg1 = (ImDrawData *) 0 ;
  
  arg1 = *(ImDrawData **)&_swig_go_0; 
  
  (arg1)->Clear();
  
}


void _wrap_ImDrawData_AddDrawList_imgui_568d46c1e1b4102a(ImDrawData *_swig_go_0, ImDrawList *_swig_go_1) {
  ImDrawData *arg1 = (ImDrawData *) 0 ;
  ImDrawList *arg2 = (ImDrawList *) 0 ;
  
  arg1 = *(ImDrawData **)&_swig_go_0; 
  arg2 = *(ImDrawList **)&_swig_go_1; 
  
  (arg1)->AddDrawList(arg2);
  
}


void _wrap_ImDrawData_DeIndexAllBuffers_imgui_568d46c1e1b4102a(ImDrawData *_swig_go_0) {
  ImDrawData *arg1 = (ImDrawData *) 0 ;
  
  arg1 = *(ImDrawData **)&_swig_go_0; 
  
  (arg1)->DeIndexAllBuffers();
  
}


void _wrap_ImDrawData_ScaleClipRects_imgui_568d46c1e1b4102a(ImDrawData *_swig_go_0, ImVec2 *_swig_go_1) {
  ImDrawData *arg1 = (ImDrawData *) 0 ;
  ImVec2 *arg2 = 0 ;
  
  arg1 = *(ImDrawData **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  
  (arg1)->ScaleClipRects((ImVec2 const &)*arg2);
  
}


void _wrap_delete_ImDrawData_imgui_568d46c1e1b4102a(ImDrawData *_swig_go_0) {
  ImDrawData *arg1 = (ImDrawData *) 0 ;
  
  arg1 = *(ImDrawData **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_ImFontConfig_FontData_set_imgui_568d46c1e1b4102a(ImFontConfig *_swig_go_0, void *_swig_go_1) {
  ImFontConfig *arg1 = (ImFontConfig *) 0 ;
  void *arg2 = (void *) 0 ;
  
  arg1 = *(ImFontConfig **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  if (arg1) (arg1)->FontData = arg2;
  
}


void *_wrap_ImFontConfig_FontData_get_imgui_568d46c1e1b4102a(ImFontConfig *_swig_go_0) {
  ImFontConfig *arg1 = (ImFontConfig *) 0 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = *(ImFontConfig **)&_swig_go_0; 
  
  result = (void *) ((arg1)->FontData);
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


void _wrap_ImFontConfig_FontDataSize_set_imgui_568d46c1e1b4102a(ImFontConfig *_swig_go_0, intgo _swig_go_1) {
  ImFontConfig *arg1 = (ImFontConfig *) 0 ;
  int arg2 ;
  
  arg1 = *(ImFontConfig **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->FontDataSize = arg2;
  
}


intgo _wrap_ImFontConfig_FontDataSize_get_imgui_568d46c1e1b4102a(ImFontConfig *_swig_go_0) {
  ImFontConfig *arg1 = (ImFontConfig *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(ImFontConfig **)&_swig_go_0; 
  
  result = (int) ((arg1)->FontDataSize);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImFontConfig_FontDataOwnedByAtlas_set_imgui_568d46c1e1b4102a(ImFontConfig *_swig_go_0, bool _swig_go_1) {
  ImFontConfig *arg1 = (ImFontConfig *) 0 ;
  bool arg2 ;
  
  arg1 = *(ImFontConfig **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->FontDataOwnedByAtlas = arg2;
  
}


bool _wrap_ImFontConfig_FontDataOwnedByAtlas_get_imgui_568d46c1e1b4102a(ImFontConfig *_swig_go_0) {
  ImFontConfig *arg1 = (ImFontConfig *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ImFontConfig **)&_swig_go_0; 
  
  result = (bool) ((arg1)->FontDataOwnedByAtlas);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImFontConfig_FontNo_set_imgui_568d46c1e1b4102a(ImFontConfig *_swig_go_0, intgo _swig_go_1) {
  ImFontConfig *arg1 = (ImFontConfig *) 0 ;
  int arg2 ;
  
  arg1 = *(ImFontConfig **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->FontNo = arg2;
  
}


intgo _wrap_ImFontConfig_FontNo_get_imgui_568d46c1e1b4102a(ImFontConfig *_swig_go_0) {
  ImFontConfig *arg1 = (ImFontConfig *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(ImFontConfig **)&_swig_go_0; 
  
  result = (int) ((arg1)->FontNo);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImFontConfig_SizePixels_set_imgui_568d46c1e1b4102a(ImFontConfig *_swig_go_0, float _swig_go_1) {
  ImFontConfig *arg1 = (ImFontConfig *) 0 ;
  float arg2 ;
  
  arg1 = *(ImFontConfig **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->SizePixels = arg2;
  
}


float _wrap_ImFontConfig_SizePixels_get_imgui_568d46c1e1b4102a(ImFontConfig *_swig_go_0) {
  ImFontConfig *arg1 = (ImFontConfig *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(ImFontConfig **)&_swig_go_0; 
  
  result = (float) ((arg1)->SizePixels);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImFontConfig_OversampleH_set_imgui_568d46c1e1b4102a(ImFontConfig *_swig_go_0, intgo _swig_go_1) {
  ImFontConfig *arg1 = (ImFontConfig *) 0 ;
  int arg2 ;
  
  arg1 = *(ImFontConfig **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->OversampleH = arg2;
  
}


intgo _wrap_ImFontConfig_OversampleH_get_imgui_568d46c1e1b4102a(ImFontConfig *_swig_go_0) {
  ImFontConfig *arg1 = (ImFontConfig *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(ImFontConfig **)&_swig_go_0; 
  
  result = (int) ((arg1)->OversampleH);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImFontConfig_OversampleV_set_imgui_568d46c1e1b4102a(ImFontConfig *_swig_go_0, intgo _swig_go_1) {
  ImFontConfig *arg1 = (ImFontConfig *) 0 ;
  int arg2 ;
  
  arg1 = *(ImFontConfig **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->OversampleV = arg2;
  
}


intgo _wrap_ImFontConfig_OversampleV_get_imgui_568d46c1e1b4102a(ImFontConfig *_swig_go_0) {
  ImFontConfig *arg1 = (ImFontConfig *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(ImFontConfig **)&_swig_go_0; 
  
  result = (int) ((arg1)->OversampleV);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImFontConfig_PixelSnapH_set_imgui_568d46c1e1b4102a(ImFontConfig *_swig_go_0, bool _swig_go_1) {
  ImFontConfig *arg1 = (ImFontConfig *) 0 ;
  bool arg2 ;
  
  arg1 = *(ImFontConfig **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->PixelSnapH = arg2;
  
}


bool _wrap_ImFontConfig_PixelSnapH_get_imgui_568d46c1e1b4102a(ImFontConfig *_swig_go_0) {
  ImFontConfig *arg1 = (ImFontConfig *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ImFontConfig **)&_swig_go_0; 
  
  result = (bool) ((arg1)->PixelSnapH);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImFontConfig_GlyphExtraSpacing_set_imgui_568d46c1e1b4102a(ImFontConfig *_swig_go_0, ImVec2 *_swig_go_1) {
  ImFontConfig *arg1 = (ImFontConfig *) 0 ;
  ImVec2 *arg2 = (ImVec2 *) 0 ;
  
  arg1 = *(ImFontConfig **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  
  if (arg1) (arg1)->GlyphExtraSpacing = *arg2;
  
}


ImVec2 *_wrap_ImFontConfig_GlyphExtraSpacing_get_imgui_568d46c1e1b4102a(ImFontConfig *_swig_go_0) {
  ImFontConfig *arg1 = (ImFontConfig *) 0 ;
  ImVec2 *result = 0 ;
  ImVec2 *_swig_go_result;
  
  arg1 = *(ImFontConfig **)&_swig_go_0; 
  
  result = (ImVec2 *)& ((arg1)->GlyphExtraSpacing);
  *(ImVec2 **)&_swig_go_result = (ImVec2 *)result; 
  return _swig_go_result;
}


void _wrap_ImFontConfig_GlyphOffset_set_imgui_568d46c1e1b4102a(ImFontConfig *_swig_go_0, ImVec2 *_swig_go_1) {
  ImFontConfig *arg1 = (ImFontConfig *) 0 ;
  ImVec2 *arg2 = (ImVec2 *) 0 ;
  
  arg1 = *(ImFontConfig **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  
  if (arg1) (arg1)->GlyphOffset = *arg2;
  
}


ImVec2 *_wrap_ImFontConfig_GlyphOffset_get_imgui_568d46c1e1b4102a(ImFontConfig *_swig_go_0) {
  ImFontConfig *arg1 = (ImFontConfig *) 0 ;
  ImVec2 *result = 0 ;
  ImVec2 *_swig_go_result;
  
  arg1 = *(ImFontConfig **)&_swig_go_0; 
  
  result = (ImVec2 *)& ((arg1)->GlyphOffset);
  *(ImVec2 **)&_swig_go_result = (ImVec2 *)result; 
  return _swig_go_result;
}


void _wrap_ImFontConfig_GlyphRanges_set_imgui_568d46c1e1b4102a(ImFontConfig *_swig_go_0, short *_swig_go_1) {
  ImFontConfig *arg1 = (ImFontConfig *) 0 ;
  ImWchar *arg2 = (ImWchar *) 0 ;
  
  arg1 = *(ImFontConfig **)&_swig_go_0; 
  arg2 = *(ImWchar **)&_swig_go_1; 
  
  if (arg1) (arg1)->GlyphRanges = (ImWchar const *)arg2;
  
}


short *_wrap_ImFontConfig_GlyphRanges_get_imgui_568d46c1e1b4102a(ImFontConfig *_swig_go_0) {
  ImFontConfig *arg1 = (ImFontConfig *) 0 ;
  ImWchar *result = 0 ;
  short *_swig_go_result;
  
  arg1 = *(ImFontConfig **)&_swig_go_0; 
  
  result = (ImWchar *) ((arg1)->GlyphRanges);
  *(ImWchar **)&_swig_go_result = (ImWchar *)result; 
  return _swig_go_result;
}


void _wrap_ImFontConfig_GlyphMinAdvanceX_set_imgui_568d46c1e1b4102a(ImFontConfig *_swig_go_0, float _swig_go_1) {
  ImFontConfig *arg1 = (ImFontConfig *) 0 ;
  float arg2 ;
  
  arg1 = *(ImFontConfig **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->GlyphMinAdvanceX = arg2;
  
}


float _wrap_ImFontConfig_GlyphMinAdvanceX_get_imgui_568d46c1e1b4102a(ImFontConfig *_swig_go_0) {
  ImFontConfig *arg1 = (ImFontConfig *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(ImFontConfig **)&_swig_go_0; 
  
  result = (float) ((arg1)->GlyphMinAdvanceX);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImFontConfig_GlyphMaxAdvanceX_set_imgui_568d46c1e1b4102a(ImFontConfig *_swig_go_0, float _swig_go_1) {
  ImFontConfig *arg1 = (ImFontConfig *) 0 ;
  float arg2 ;
  
  arg1 = *(ImFontConfig **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->GlyphMaxAdvanceX = arg2;
  
}


float _wrap_ImFontConfig_GlyphMaxAdvanceX_get_imgui_568d46c1e1b4102a(ImFontConfig *_swig_go_0) {
  ImFontConfig *arg1 = (ImFontConfig *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(ImFontConfig **)&_swig_go_0; 
  
  result = (float) ((arg1)->GlyphMaxAdvanceX);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImFontConfig_MergeMode_set_imgui_568d46c1e1b4102a(ImFontConfig *_swig_go_0, bool _swig_go_1) {
  ImFontConfig *arg1 = (ImFontConfig *) 0 ;
  bool arg2 ;
  
  arg1 = *(ImFontConfig **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->MergeMode = arg2;
  
}


bool _wrap_ImFontConfig_MergeMode_get_imgui_568d46c1e1b4102a(ImFontConfig *_swig_go_0) {
  ImFontConfig *arg1 = (ImFontConfig *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ImFontConfig **)&_swig_go_0; 
  
  result = (bool) ((arg1)->MergeMode);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImFontConfig_FontBuilderFlags_set_imgui_568d46c1e1b4102a(ImFontConfig *_swig_go_0, intgo _swig_go_1) {
  ImFontConfig *arg1 = (ImFontConfig *) 0 ;
  unsigned int arg2 ;
  
  arg1 = *(ImFontConfig **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  if (arg1) (arg1)->FontBuilderFlags = arg2;
  
}


intgo _wrap_ImFontConfig_FontBuilderFlags_get_imgui_568d46c1e1b4102a(ImFontConfig *_swig_go_0) {
  ImFontConfig *arg1 = (ImFontConfig *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(ImFontConfig **)&_swig_go_0; 
  
  result = (unsigned int) ((arg1)->FontBuilderFlags);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImFontConfig_RasterizerMultiply_set_imgui_568d46c1e1b4102a(ImFontConfig *_swig_go_0, float _swig_go_1) {
  ImFontConfig *arg1 = (ImFontConfig *) 0 ;
  float arg2 ;
  
  arg1 = *(ImFontConfig **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->RasterizerMultiply = arg2;
  
}


float _wrap_ImFontConfig_RasterizerMultiply_get_imgui_568d46c1e1b4102a(ImFontConfig *_swig_go_0) {
  ImFontConfig *arg1 = (ImFontConfig *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(ImFontConfig **)&_swig_go_0; 
  
  result = (float) ((arg1)->RasterizerMultiply);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImFontConfig_RasterizerDensity_set_imgui_568d46c1e1b4102a(ImFontConfig *_swig_go_0, float _swig_go_1) {
  ImFontConfig *arg1 = (ImFontConfig *) 0 ;
  float arg2 ;
  
  arg1 = *(ImFontConfig **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->RasterizerDensity = arg2;
  
}


float _wrap_ImFontConfig_RasterizerDensity_get_imgui_568d46c1e1b4102a(ImFontConfig *_swig_go_0) {
  ImFontConfig *arg1 = (ImFontConfig *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(ImFontConfig **)&_swig_go_0; 
  
  result = (float) ((arg1)->RasterizerDensity);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImFontConfig_EllipsisChar_set_imgui_568d46c1e1b4102a(ImFontConfig *_swig_go_0, short _swig_go_1) {
  ImFontConfig *arg1 = (ImFontConfig *) 0 ;
  ImWchar arg2 ;
  
  arg1 = *(ImFontConfig **)&_swig_go_0; 
  arg2 = (ImWchar)_swig_go_1; 
  
  if (arg1) (arg1)->EllipsisChar = arg2;
  
}


short _wrap_ImFontConfig_EllipsisChar_get_imgui_568d46c1e1b4102a(ImFontConfig *_swig_go_0) {
  ImFontConfig *arg1 = (ImFontConfig *) 0 ;
  ImWchar result;
  short _swig_go_result;
  
  arg1 = *(ImFontConfig **)&_swig_go_0; 
  
  result = (ImWchar) ((arg1)->EllipsisChar);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImFontConfig_Name_set_imgui_568d46c1e1b4102a(ImFontConfig *_swig_go_0, _gostring_ _swig_go_1) {
  ImFontConfig *arg1 = (ImFontConfig *) 0 ;
  char *arg2 = (char *) (char *)0 ;
  
  arg1 = *(ImFontConfig **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  {
    if(arg2) {
      strncpy((char*)arg1->Name, (const char *)arg2, 40-1);
      arg1->Name[40-1] = 0;
    } else {
      arg1->Name[0] = 0;
    }
  }
  
  free(arg2); 
}


_gostring_ _wrap_ImFontConfig_Name_get_imgui_568d46c1e1b4102a(ImFontConfig *_swig_go_0) {
  ImFontConfig *arg1 = (ImFontConfig *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(ImFontConfig **)&_swig_go_0; 
  
  result = (char *)(char *) ((arg1)->Name);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_ImFontConfig_DstFont_set_imgui_568d46c1e1b4102a(ImFontConfig *_swig_go_0, ImFont *_swig_go_1) {
  ImFontConfig *arg1 = (ImFontConfig *) 0 ;
  ImFont *arg2 = (ImFont *) 0 ;
  
  arg1 = *(ImFontConfig **)&_swig_go_0; 
  arg2 = *(ImFont **)&_swig_go_1; 
  
  if (arg1) (arg1)->DstFont = arg2;
  
}


ImFont *_wrap_ImFontConfig_DstFont_get_imgui_568d46c1e1b4102a(ImFontConfig *_swig_go_0) {
  ImFontConfig *arg1 = (ImFontConfig *) 0 ;
  ImFont *result = 0 ;
  ImFont *_swig_go_result;
  
  arg1 = *(ImFontConfig **)&_swig_go_0; 
  
  result = (ImFont *) ((arg1)->DstFont);
  *(ImFont **)&_swig_go_result = (ImFont *)result; 
  return _swig_go_result;
}


ImFontConfig *_wrap_new_ImFontConfig_imgui_568d46c1e1b4102a() {
  ImFontConfig *result = 0 ;
  ImFontConfig *_swig_go_result;
  
  
  result = (ImFontConfig *)new ImFontConfig();
  *(ImFontConfig **)&_swig_go_result = (ImFontConfig *)result; 
  return _swig_go_result;
}


void _wrap_delete_ImFontConfig_imgui_568d46c1e1b4102a(ImFontConfig *_swig_go_0) {
  ImFontConfig *arg1 = (ImFontConfig *) 0 ;
  
  arg1 = *(ImFontConfig **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_ImFontGlyph_Colored_set_imgui_568d46c1e1b4102a(ImFontGlyph *_swig_go_0, intgo _swig_go_1) {
  ImFontGlyph *arg1 = (ImFontGlyph *) 0 ;
  unsigned int arg2 ;
  
  arg1 = *(ImFontGlyph **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  if (arg1) (arg1)->Colored = arg2;
  
}


intgo _wrap_ImFontGlyph_Colored_get_imgui_568d46c1e1b4102a(ImFontGlyph *_swig_go_0) {
  ImFontGlyph *arg1 = (ImFontGlyph *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(ImFontGlyph **)&_swig_go_0; 
  
  result = (unsigned int) ((arg1)->Colored);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImFontGlyph_Visible_set_imgui_568d46c1e1b4102a(ImFontGlyph *_swig_go_0, intgo _swig_go_1) {
  ImFontGlyph *arg1 = (ImFontGlyph *) 0 ;
  unsigned int arg2 ;
  
  arg1 = *(ImFontGlyph **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  if (arg1) (arg1)->Visible = arg2;
  
}


intgo _wrap_ImFontGlyph_Visible_get_imgui_568d46c1e1b4102a(ImFontGlyph *_swig_go_0) {
  ImFontGlyph *arg1 = (ImFontGlyph *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(ImFontGlyph **)&_swig_go_0; 
  
  result = (unsigned int) ((arg1)->Visible);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImFontGlyph_Codepoint_set_imgui_568d46c1e1b4102a(ImFontGlyph *_swig_go_0, intgo _swig_go_1) {
  ImFontGlyph *arg1 = (ImFontGlyph *) 0 ;
  unsigned int arg2 ;
  
  arg1 = *(ImFontGlyph **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  if (arg1) (arg1)->Codepoint = arg2;
  
}


intgo _wrap_ImFontGlyph_Codepoint_get_imgui_568d46c1e1b4102a(ImFontGlyph *_swig_go_0) {
  ImFontGlyph *arg1 = (ImFontGlyph *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(ImFontGlyph **)&_swig_go_0; 
  
  result = (unsigned int) ((arg1)->Codepoint);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImFontGlyph_AdvanceX_set_imgui_568d46c1e1b4102a(ImFontGlyph *_swig_go_0, float _swig_go_1) {
  ImFontGlyph *arg1 = (ImFontGlyph *) 0 ;
  float arg2 ;
  
  arg1 = *(ImFontGlyph **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->AdvanceX = arg2;
  
}


float _wrap_ImFontGlyph_AdvanceX_get_imgui_568d46c1e1b4102a(ImFontGlyph *_swig_go_0) {
  ImFontGlyph *arg1 = (ImFontGlyph *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(ImFontGlyph **)&_swig_go_0; 
  
  result = (float) ((arg1)->AdvanceX);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImFontGlyph_X0_set_imgui_568d46c1e1b4102a(ImFontGlyph *_swig_go_0, float _swig_go_1) {
  ImFontGlyph *arg1 = (ImFontGlyph *) 0 ;
  float arg2 ;
  
  arg1 = *(ImFontGlyph **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->X0 = arg2;
  
}


float _wrap_ImFontGlyph_X0_get_imgui_568d46c1e1b4102a(ImFontGlyph *_swig_go_0) {
  ImFontGlyph *arg1 = (ImFontGlyph *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(ImFontGlyph **)&_swig_go_0; 
  
  result = (float) ((arg1)->X0);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImFontGlyph_Y0_set_imgui_568d46c1e1b4102a(ImFontGlyph *_swig_go_0, float _swig_go_1) {
  ImFontGlyph *arg1 = (ImFontGlyph *) 0 ;
  float arg2 ;
  
  arg1 = *(ImFontGlyph **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->Y0 = arg2;
  
}


float _wrap_ImFontGlyph_Y0_get_imgui_568d46c1e1b4102a(ImFontGlyph *_swig_go_0) {
  ImFontGlyph *arg1 = (ImFontGlyph *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(ImFontGlyph **)&_swig_go_0; 
  
  result = (float) ((arg1)->Y0);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImFontGlyph_X1_set_imgui_568d46c1e1b4102a(ImFontGlyph *_swig_go_0, float _swig_go_1) {
  ImFontGlyph *arg1 = (ImFontGlyph *) 0 ;
  float arg2 ;
  
  arg1 = *(ImFontGlyph **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->X1 = arg2;
  
}


float _wrap_ImFontGlyph_X1_get_imgui_568d46c1e1b4102a(ImFontGlyph *_swig_go_0) {
  ImFontGlyph *arg1 = (ImFontGlyph *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(ImFontGlyph **)&_swig_go_0; 
  
  result = (float) ((arg1)->X1);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImFontGlyph_Y1_set_imgui_568d46c1e1b4102a(ImFontGlyph *_swig_go_0, float _swig_go_1) {
  ImFontGlyph *arg1 = (ImFontGlyph *) 0 ;
  float arg2 ;
  
  arg1 = *(ImFontGlyph **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->Y1 = arg2;
  
}


float _wrap_ImFontGlyph_Y1_get_imgui_568d46c1e1b4102a(ImFontGlyph *_swig_go_0) {
  ImFontGlyph *arg1 = (ImFontGlyph *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(ImFontGlyph **)&_swig_go_0; 
  
  result = (float) ((arg1)->Y1);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImFontGlyph_U0_set_imgui_568d46c1e1b4102a(ImFontGlyph *_swig_go_0, float _swig_go_1) {
  ImFontGlyph *arg1 = (ImFontGlyph *) 0 ;
  float arg2 ;
  
  arg1 = *(ImFontGlyph **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->U0 = arg2;
  
}


float _wrap_ImFontGlyph_U0_get_imgui_568d46c1e1b4102a(ImFontGlyph *_swig_go_0) {
  ImFontGlyph *arg1 = (ImFontGlyph *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(ImFontGlyph **)&_swig_go_0; 
  
  result = (float) ((arg1)->U0);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImFontGlyph_V0_set_imgui_568d46c1e1b4102a(ImFontGlyph *_swig_go_0, float _swig_go_1) {
  ImFontGlyph *arg1 = (ImFontGlyph *) 0 ;
  float arg2 ;
  
  arg1 = *(ImFontGlyph **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->V0 = arg2;
  
}


float _wrap_ImFontGlyph_V0_get_imgui_568d46c1e1b4102a(ImFontGlyph *_swig_go_0) {
  ImFontGlyph *arg1 = (ImFontGlyph *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(ImFontGlyph **)&_swig_go_0; 
  
  result = (float) ((arg1)->V0);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImFontGlyph_U1_set_imgui_568d46c1e1b4102a(ImFontGlyph *_swig_go_0, float _swig_go_1) {
  ImFontGlyph *arg1 = (ImFontGlyph *) 0 ;
  float arg2 ;
  
  arg1 = *(ImFontGlyph **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->U1 = arg2;
  
}


float _wrap_ImFontGlyph_U1_get_imgui_568d46c1e1b4102a(ImFontGlyph *_swig_go_0) {
  ImFontGlyph *arg1 = (ImFontGlyph *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(ImFontGlyph **)&_swig_go_0; 
  
  result = (float) ((arg1)->U1);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImFontGlyph_V1_set_imgui_568d46c1e1b4102a(ImFontGlyph *_swig_go_0, float _swig_go_1) {
  ImFontGlyph *arg1 = (ImFontGlyph *) 0 ;
  float arg2 ;
  
  arg1 = *(ImFontGlyph **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->V1 = arg2;
  
}


float _wrap_ImFontGlyph_V1_get_imgui_568d46c1e1b4102a(ImFontGlyph *_swig_go_0) {
  ImFontGlyph *arg1 = (ImFontGlyph *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(ImFontGlyph **)&_swig_go_0; 
  
  result = (float) ((arg1)->V1);
  _swig_go_result = result; 
  return _swig_go_result;
}


ImFontGlyph *_wrap_new_ImFontGlyph_imgui_568d46c1e1b4102a() {
  ImFontGlyph *result = 0 ;
  ImFontGlyph *_swig_go_result;
  
  
  result = (ImFontGlyph *)new ImFontGlyph();
  *(ImFontGlyph **)&_swig_go_result = (ImFontGlyph *)result; 
  return _swig_go_result;
}


void _wrap_delete_ImFontGlyph_imgui_568d46c1e1b4102a(ImFontGlyph *_swig_go_0) {
  ImFontGlyph *arg1 = (ImFontGlyph *) 0 ;
  
  arg1 = *(ImFontGlyph **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_ImFontGlyphRangesBuilder_UsedChars_set_imgui_568d46c1e1b4102a(ImFontGlyphRangesBuilder *_swig_go_0, ImVector< unsigned int > *_swig_go_1) {
  ImFontGlyphRangesBuilder *arg1 = (ImFontGlyphRangesBuilder *) 0 ;
  ImVector< ImU32 > *arg2 = (ImVector< ImU32 > *) 0 ;
  
  arg1 = *(ImFontGlyphRangesBuilder **)&_swig_go_0; 
  arg2 = *(ImVector< ImU32 > **)&_swig_go_1; 
  
  if (arg1) (arg1)->UsedChars = *arg2;
  
}


ImVector< unsigned int > *_wrap_ImFontGlyphRangesBuilder_UsedChars_get_imgui_568d46c1e1b4102a(ImFontGlyphRangesBuilder *_swig_go_0) {
  ImFontGlyphRangesBuilder *arg1 = (ImFontGlyphRangesBuilder *) 0 ;
  ImVector< ImU32 > *result = 0 ;
  ImVector< unsigned int > *_swig_go_result;
  
  arg1 = *(ImFontGlyphRangesBuilder **)&_swig_go_0; 
  
  result = (ImVector< ImU32 > *)& ((arg1)->UsedChars);
  *(ImVector< ImU32 > **)&_swig_go_result = (ImVector< ImU32 > *)result; 
  return _swig_go_result;
}


ImFontGlyphRangesBuilder *_wrap_new_ImFontGlyphRangesBuilder_imgui_568d46c1e1b4102a() {
  ImFontGlyphRangesBuilder *result = 0 ;
  ImFontGlyphRangesBuilder *_swig_go_result;
  
  
  result = (ImFontGlyphRangesBuilder *)new ImFontGlyphRangesBuilder();
  *(ImFontGlyphRangesBuilder **)&_swig_go_result = (ImFontGlyphRangesBuilder *)result; 
  return _swig_go_result;
}


void _wrap_ImFontGlyphRangesBuilder_Clear_imgui_568d46c1e1b4102a(ImFontGlyphRangesBuilder *_swig_go_0) {
  ImFontGlyphRangesBuilder *arg1 = (ImFontGlyphRangesBuilder *) 0 ;
  
  arg1 = *(ImFontGlyphRangesBuilder **)&_swig_go_0; 
  
  (arg1)->Clear();
  
}


bool _wrap_ImFontGlyphRangesBuilder_GetBit_imgui_568d46c1e1b4102a(ImFontGlyphRangesBuilder *_swig_go_0, long long _swig_go_1) {
  ImFontGlyphRangesBuilder *arg1 = (ImFontGlyphRangesBuilder *) 0 ;
  size_t arg2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ImFontGlyphRangesBuilder **)&_swig_go_0; 
  arg2 = (size_t)_swig_go_1; 
  
  result = (bool)((ImFontGlyphRangesBuilder const *)arg1)->GetBit(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImFontGlyphRangesBuilder_SetBit_imgui_568d46c1e1b4102a(ImFontGlyphRangesBuilder *_swig_go_0, long long _swig_go_1) {
  ImFontGlyphRangesBuilder *arg1 = (ImFontGlyphRangesBuilder *) 0 ;
  size_t arg2 ;
  
  arg1 = *(ImFontGlyphRangesBuilder **)&_swig_go_0; 
  arg2 = (size_t)_swig_go_1; 
  
  (arg1)->SetBit(arg2);
  
}


void _wrap_ImFontGlyphRangesBuilder_AddChar_imgui_568d46c1e1b4102a(ImFontGlyphRangesBuilder *_swig_go_0, short _swig_go_1) {
  ImFontGlyphRangesBuilder *arg1 = (ImFontGlyphRangesBuilder *) 0 ;
  ImWchar arg2 ;
  
  arg1 = *(ImFontGlyphRangesBuilder **)&_swig_go_0; 
  arg2 = (ImWchar)_swig_go_1; 
  
  (arg1)->AddChar(arg2);
  
}


void _wrap_ImFontGlyphRangesBuilder_AddText__SWIG_0_imgui_568d46c1e1b4102a(ImFontGlyphRangesBuilder *_swig_go_0, _gostring_ _swig_go_1, _gostring_ _swig_go_2) {
  ImFontGlyphRangesBuilder *arg1 = (ImFontGlyphRangesBuilder *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  
  arg1 = *(ImFontGlyphRangesBuilder **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  (arg1)->AddText((char const *)arg2,(char const *)arg3);
  
  free(arg2); 
  free(arg3); 
}


void _wrap_ImFontGlyphRangesBuilder_AddText__SWIG_1_imgui_568d46c1e1b4102a(ImFontGlyphRangesBuilder *_swig_go_0, _gostring_ _swig_go_1) {
  ImFontGlyphRangesBuilder *arg1 = (ImFontGlyphRangesBuilder *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = *(ImFontGlyphRangesBuilder **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  
  (arg1)->AddText((char const *)arg2);
  
  free(arg2); 
}


void _wrap_ImFontGlyphRangesBuilder_AddRanges_imgui_568d46c1e1b4102a(ImFontGlyphRangesBuilder *_swig_go_0, short *_swig_go_1) {
  ImFontGlyphRangesBuilder *arg1 = (ImFontGlyphRangesBuilder *) 0 ;
  ImWchar *arg2 = (ImWchar *) 0 ;
  
  arg1 = *(ImFontGlyphRangesBuilder **)&_swig_go_0; 
  arg2 = *(ImWchar **)&_swig_go_1; 
  
  (arg1)->AddRanges((ImWchar const *)arg2);
  
}


void _wrap_ImFontGlyphRangesBuilder_BuildRanges_imgui_568d46c1e1b4102a(ImFontGlyphRangesBuilder *_swig_go_0, ImVector< unsigned short > *_swig_go_1) {
  ImFontGlyphRangesBuilder *arg1 = (ImFontGlyphRangesBuilder *) 0 ;
  ImVector< ImWchar > *arg2 = (ImVector< ImWchar > *) 0 ;
  
  arg1 = *(ImFontGlyphRangesBuilder **)&_swig_go_0; 
  arg2 = *(ImVector< ImWchar > **)&_swig_go_1; 
  
  (arg1)->BuildRanges(arg2);
  
}


void _wrap_delete_ImFontGlyphRangesBuilder_imgui_568d46c1e1b4102a(ImFontGlyphRangesBuilder *_swig_go_0) {
  ImFontGlyphRangesBuilder *arg1 = (ImFontGlyphRangesBuilder *) 0 ;
  
  arg1 = *(ImFontGlyphRangesBuilder **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_ImFontAtlasCustomRect_Width_set_imgui_568d46c1e1b4102a(ImFontAtlasCustomRect *_swig_go_0, short _swig_go_1) {
  ImFontAtlasCustomRect *arg1 = (ImFontAtlasCustomRect *) 0 ;
  unsigned short arg2 ;
  
  arg1 = *(ImFontAtlasCustomRect **)&_swig_go_0; 
  arg2 = (unsigned short)_swig_go_1; 
  
  if (arg1) (arg1)->Width = arg2;
  
}


short _wrap_ImFontAtlasCustomRect_Width_get_imgui_568d46c1e1b4102a(ImFontAtlasCustomRect *_swig_go_0) {
  ImFontAtlasCustomRect *arg1 = (ImFontAtlasCustomRect *) 0 ;
  unsigned short result;
  short _swig_go_result;
  
  arg1 = *(ImFontAtlasCustomRect **)&_swig_go_0; 
  
  result = (unsigned short) ((arg1)->Width);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImFontAtlasCustomRect_Height_set_imgui_568d46c1e1b4102a(ImFontAtlasCustomRect *_swig_go_0, short _swig_go_1) {
  ImFontAtlasCustomRect *arg1 = (ImFontAtlasCustomRect *) 0 ;
  unsigned short arg2 ;
  
  arg1 = *(ImFontAtlasCustomRect **)&_swig_go_0; 
  arg2 = (unsigned short)_swig_go_1; 
  
  if (arg1) (arg1)->Height = arg2;
  
}


short _wrap_ImFontAtlasCustomRect_Height_get_imgui_568d46c1e1b4102a(ImFontAtlasCustomRect *_swig_go_0) {
  ImFontAtlasCustomRect *arg1 = (ImFontAtlasCustomRect *) 0 ;
  unsigned short result;
  short _swig_go_result;
  
  arg1 = *(ImFontAtlasCustomRect **)&_swig_go_0; 
  
  result = (unsigned short) ((arg1)->Height);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImFontAtlasCustomRect_X_set_imgui_568d46c1e1b4102a(ImFontAtlasCustomRect *_swig_go_0, short _swig_go_1) {
  ImFontAtlasCustomRect *arg1 = (ImFontAtlasCustomRect *) 0 ;
  unsigned short arg2 ;
  
  arg1 = *(ImFontAtlasCustomRect **)&_swig_go_0; 
  arg2 = (unsigned short)_swig_go_1; 
  
  if (arg1) (arg1)->X = arg2;
  
}


short _wrap_ImFontAtlasCustomRect_X_get_imgui_568d46c1e1b4102a(ImFontAtlasCustomRect *_swig_go_0) {
  ImFontAtlasCustomRect *arg1 = (ImFontAtlasCustomRect *) 0 ;
  unsigned short result;
  short _swig_go_result;
  
  arg1 = *(ImFontAtlasCustomRect **)&_swig_go_0; 
  
  result = (unsigned short) ((arg1)->X);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImFontAtlasCustomRect_Y_set_imgui_568d46c1e1b4102a(ImFontAtlasCustomRect *_swig_go_0, short _swig_go_1) {
  ImFontAtlasCustomRect *arg1 = (ImFontAtlasCustomRect *) 0 ;
  unsigned short arg2 ;
  
  arg1 = *(ImFontAtlasCustomRect **)&_swig_go_0; 
  arg2 = (unsigned short)_swig_go_1; 
  
  if (arg1) (arg1)->Y = arg2;
  
}


short _wrap_ImFontAtlasCustomRect_Y_get_imgui_568d46c1e1b4102a(ImFontAtlasCustomRect *_swig_go_0) {
  ImFontAtlasCustomRect *arg1 = (ImFontAtlasCustomRect *) 0 ;
  unsigned short result;
  short _swig_go_result;
  
  arg1 = *(ImFontAtlasCustomRect **)&_swig_go_0; 
  
  result = (unsigned short) ((arg1)->Y);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImFontAtlasCustomRect_GlyphID_set_imgui_568d46c1e1b4102a(ImFontAtlasCustomRect *_swig_go_0, intgo _swig_go_1) {
  ImFontAtlasCustomRect *arg1 = (ImFontAtlasCustomRect *) 0 ;
  unsigned int arg2 ;
  
  arg1 = *(ImFontAtlasCustomRect **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  if (arg1) (arg1)->GlyphID = arg2;
  
}


intgo _wrap_ImFontAtlasCustomRect_GlyphID_get_imgui_568d46c1e1b4102a(ImFontAtlasCustomRect *_swig_go_0) {
  ImFontAtlasCustomRect *arg1 = (ImFontAtlasCustomRect *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(ImFontAtlasCustomRect **)&_swig_go_0; 
  
  result = (unsigned int) ((arg1)->GlyphID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImFontAtlasCustomRect_GlyphAdvanceX_set_imgui_568d46c1e1b4102a(ImFontAtlasCustomRect *_swig_go_0, float _swig_go_1) {
  ImFontAtlasCustomRect *arg1 = (ImFontAtlasCustomRect *) 0 ;
  float arg2 ;
  
  arg1 = *(ImFontAtlasCustomRect **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->GlyphAdvanceX = arg2;
  
}


float _wrap_ImFontAtlasCustomRect_GlyphAdvanceX_get_imgui_568d46c1e1b4102a(ImFontAtlasCustomRect *_swig_go_0) {
  ImFontAtlasCustomRect *arg1 = (ImFontAtlasCustomRect *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(ImFontAtlasCustomRect **)&_swig_go_0; 
  
  result = (float) ((arg1)->GlyphAdvanceX);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImFontAtlasCustomRect_GlyphOffset_set_imgui_568d46c1e1b4102a(ImFontAtlasCustomRect *_swig_go_0, ImVec2 *_swig_go_1) {
  ImFontAtlasCustomRect *arg1 = (ImFontAtlasCustomRect *) 0 ;
  ImVec2 *arg2 = (ImVec2 *) 0 ;
  
  arg1 = *(ImFontAtlasCustomRect **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  
  if (arg1) (arg1)->GlyphOffset = *arg2;
  
}


ImVec2 *_wrap_ImFontAtlasCustomRect_GlyphOffset_get_imgui_568d46c1e1b4102a(ImFontAtlasCustomRect *_swig_go_0) {
  ImFontAtlasCustomRect *arg1 = (ImFontAtlasCustomRect *) 0 ;
  ImVec2 *result = 0 ;
  ImVec2 *_swig_go_result;
  
  arg1 = *(ImFontAtlasCustomRect **)&_swig_go_0; 
  
  result = (ImVec2 *)& ((arg1)->GlyphOffset);
  *(ImVec2 **)&_swig_go_result = (ImVec2 *)result; 
  return _swig_go_result;
}


void _wrap_ImFontAtlasCustomRect_Font_set_imgui_568d46c1e1b4102a(ImFontAtlasCustomRect *_swig_go_0, ImFont *_swig_go_1) {
  ImFontAtlasCustomRect *arg1 = (ImFontAtlasCustomRect *) 0 ;
  ImFont *arg2 = (ImFont *) 0 ;
  
  arg1 = *(ImFontAtlasCustomRect **)&_swig_go_0; 
  arg2 = *(ImFont **)&_swig_go_1; 
  
  if (arg1) (arg1)->Font = arg2;
  
}


ImFont *_wrap_ImFontAtlasCustomRect_Font_get_imgui_568d46c1e1b4102a(ImFontAtlasCustomRect *_swig_go_0) {
  ImFontAtlasCustomRect *arg1 = (ImFontAtlasCustomRect *) 0 ;
  ImFont *result = 0 ;
  ImFont *_swig_go_result;
  
  arg1 = *(ImFontAtlasCustomRect **)&_swig_go_0; 
  
  result = (ImFont *) ((arg1)->Font);
  *(ImFont **)&_swig_go_result = (ImFont *)result; 
  return _swig_go_result;
}


ImFontAtlasCustomRect *_wrap_new_ImFontAtlasCustomRect_imgui_568d46c1e1b4102a() {
  ImFontAtlasCustomRect *result = 0 ;
  ImFontAtlasCustomRect *_swig_go_result;
  
  
  result = (ImFontAtlasCustomRect *)new ImFontAtlasCustomRect();
  *(ImFontAtlasCustomRect **)&_swig_go_result = (ImFontAtlasCustomRect *)result; 
  return _swig_go_result;
}


bool _wrap_ImFontAtlasCustomRect_IsPacked_imgui_568d46c1e1b4102a(ImFontAtlasCustomRect *_swig_go_0) {
  ImFontAtlasCustomRect *arg1 = (ImFontAtlasCustomRect *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ImFontAtlasCustomRect **)&_swig_go_0; 
  
  result = (bool)((ImFontAtlasCustomRect const *)arg1)->IsPacked();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_ImFontAtlasCustomRect_imgui_568d46c1e1b4102a(ImFontAtlasCustomRect *_swig_go_0) {
  ImFontAtlasCustomRect *arg1 = (ImFontAtlasCustomRect *) 0 ;
  
  arg1 = *(ImFontAtlasCustomRect **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_ImFontAtlasFlags_None_imgui_568d46c1e1b4102a() {
  ImFontAtlasFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImFontAtlasFlags_None;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImFontAtlasFlags_NoPowerOfTwoHeight_imgui_568d46c1e1b4102a() {
  ImFontAtlasFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImFontAtlasFlags_NoPowerOfTwoHeight;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImFontAtlasFlags_NoMouseCursors_imgui_568d46c1e1b4102a() {
  ImFontAtlasFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImFontAtlasFlags_NoMouseCursors;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImFontAtlasFlags_NoBakedLines_imgui_568d46c1e1b4102a() {
  ImFontAtlasFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImFontAtlasFlags_NoBakedLines;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


ImFontAtlas *_wrap_new_ImFontAtlas_imgui_568d46c1e1b4102a() {
  ImFontAtlas *result = 0 ;
  ImFontAtlas *_swig_go_result;
  
  
  result = (ImFontAtlas *)new ImFontAtlas();
  *(ImFontAtlas **)&_swig_go_result = (ImFontAtlas *)result; 
  return _swig_go_result;
}


void _wrap_delete_ImFontAtlas_imgui_568d46c1e1b4102a(ImFontAtlas *_swig_go_0) {
  ImFontAtlas *arg1 = (ImFontAtlas *) 0 ;
  
  arg1 = *(ImFontAtlas **)&_swig_go_0; 
  
  delete arg1;
  
}


ImFont *_wrap_ImFontAtlas_AddFont_imgui_568d46c1e1b4102a(ImFontAtlas *_swig_go_0, ImFontConfig *_swig_go_1) {
  ImFontAtlas *arg1 = (ImFontAtlas *) 0 ;
  ImFontConfig *arg2 = (ImFontConfig *) 0 ;
  ImFont *result = 0 ;
  ImFont *_swig_go_result;
  
  arg1 = *(ImFontAtlas **)&_swig_go_0; 
  arg2 = *(ImFontConfig **)&_swig_go_1; 
  
  result = (ImFont *)(arg1)->AddFont((ImFontConfig const *)arg2);
  *(ImFont **)&_swig_go_result = (ImFont *)result; 
  return _swig_go_result;
}


ImFont *_wrap_ImFontAtlas_AddFontDefault__SWIG_0_imgui_568d46c1e1b4102a(ImFontAtlas *_swig_go_0, ImFontConfig *_swig_go_1) {
  ImFontAtlas *arg1 = (ImFontAtlas *) 0 ;
  ImFontConfig *arg2 = (ImFontConfig *) 0 ;
  ImFont *result = 0 ;
  ImFont *_swig_go_result;
  
  arg1 = *(ImFontAtlas **)&_swig_go_0; 
  arg2 = *(ImFontConfig **)&_swig_go_1; 
  
  result = (ImFont *)(arg1)->AddFontDefault((ImFontConfig const *)arg2);
  *(ImFont **)&_swig_go_result = (ImFont *)result; 
  return _swig_go_result;
}


ImFont *_wrap_ImFontAtlas_AddFontDefault__SWIG_1_imgui_568d46c1e1b4102a(ImFontAtlas *_swig_go_0) {
  ImFontAtlas *arg1 = (ImFontAtlas *) 0 ;
  ImFont *result = 0 ;
  ImFont *_swig_go_result;
  
  arg1 = *(ImFontAtlas **)&_swig_go_0; 
  
  result = (ImFont *)(arg1)->AddFontDefault();
  *(ImFont **)&_swig_go_result = (ImFont *)result; 
  return _swig_go_result;
}


ImFont *_wrap_ImFontAtlas_AddFontFromFileTTF__SWIG_0_imgui_568d46c1e1b4102a(ImFontAtlas *_swig_go_0, _gostring_ _swig_go_1, float _swig_go_2, ImFontConfig *_swig_go_3, short *_swig_go_4) {
  ImFontAtlas *arg1 = (ImFontAtlas *) 0 ;
  char *arg2 = (char *) 0 ;
  float arg3 ;
  ImFontConfig *arg4 = (ImFontConfig *) 0 ;
  ImWchar *arg5 = (ImWchar *) 0 ;
  ImFont *result = 0 ;
  ImFont *_swig_go_result;
  
  arg1 = *(ImFontAtlas **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (float)_swig_go_2; 
  arg4 = *(ImFontConfig **)&_swig_go_3; 
  arg5 = *(ImWchar **)&_swig_go_4; 
  
  result = (ImFont *)(arg1)->AddFontFromFileTTF((char const *)arg2,arg3,(ImFontConfig const *)arg4,(ImWchar const *)arg5);
  *(ImFont **)&_swig_go_result = (ImFont *)result; 
  free(arg2); 
  return _swig_go_result;
}


ImFont *_wrap_ImFontAtlas_AddFontFromFileTTF__SWIG_1_imgui_568d46c1e1b4102a(ImFontAtlas *_swig_go_0, _gostring_ _swig_go_1, float _swig_go_2, ImFontConfig *_swig_go_3) {
  ImFontAtlas *arg1 = (ImFontAtlas *) 0 ;
  char *arg2 = (char *) 0 ;
  float arg3 ;
  ImFontConfig *arg4 = (ImFontConfig *) 0 ;
  ImFont *result = 0 ;
  ImFont *_swig_go_result;
  
  arg1 = *(ImFontAtlas **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (float)_swig_go_2; 
  arg4 = *(ImFontConfig **)&_swig_go_3; 
  
  result = (ImFont *)(arg1)->AddFontFromFileTTF((char const *)arg2,arg3,(ImFontConfig const *)arg4);
  *(ImFont **)&_swig_go_result = (ImFont *)result; 
  free(arg2); 
  return _swig_go_result;
}


ImFont *_wrap_ImFontAtlas_AddFontFromFileTTF__SWIG_2_imgui_568d46c1e1b4102a(ImFontAtlas *_swig_go_0, _gostring_ _swig_go_1, float _swig_go_2) {
  ImFontAtlas *arg1 = (ImFontAtlas *) 0 ;
  char *arg2 = (char *) 0 ;
  float arg3 ;
  ImFont *result = 0 ;
  ImFont *_swig_go_result;
  
  arg1 = *(ImFontAtlas **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (float)_swig_go_2; 
  
  result = (ImFont *)(arg1)->AddFontFromFileTTF((char const *)arg2,arg3);
  *(ImFont **)&_swig_go_result = (ImFont *)result; 
  free(arg2); 
  return _swig_go_result;
}


ImFont *_wrap_ImFontAtlas_AddFontFromMemoryTTF__SWIG_0_imgui_568d46c1e1b4102a(ImFontAtlas *_swig_go_0, void *_swig_go_1, intgo _swig_go_2, float _swig_go_3, ImFontConfig *_swig_go_4, short *_swig_go_5) {
  ImFontAtlas *arg1 = (ImFontAtlas *) 0 ;
  void *arg2 = (void *) 0 ;
  int arg3 ;
  float arg4 ;
  ImFontConfig *arg5 = (ImFontConfig *) 0 ;
  ImWchar *arg6 = (ImWchar *) 0 ;
  ImFont *result = 0 ;
  ImFont *_swig_go_result;
  
  arg1 = *(ImFontAtlas **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (float)_swig_go_3; 
  arg5 = *(ImFontConfig **)&_swig_go_4; 
  arg6 = *(ImWchar **)&_swig_go_5; 
  
  result = (ImFont *)(arg1)->AddFontFromMemoryTTF(arg2,arg3,arg4,(ImFontConfig const *)arg5,(ImWchar const *)arg6);
  *(ImFont **)&_swig_go_result = (ImFont *)result; 
  return _swig_go_result;
}


ImFont *_wrap_ImFontAtlas_AddFontFromMemoryTTF__SWIG_1_imgui_568d46c1e1b4102a(ImFontAtlas *_swig_go_0, void *_swig_go_1, intgo _swig_go_2, float _swig_go_3, ImFontConfig *_swig_go_4) {
  ImFontAtlas *arg1 = (ImFontAtlas *) 0 ;
  void *arg2 = (void *) 0 ;
  int arg3 ;
  float arg4 ;
  ImFontConfig *arg5 = (ImFontConfig *) 0 ;
  ImFont *result = 0 ;
  ImFont *_swig_go_result;
  
  arg1 = *(ImFontAtlas **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (float)_swig_go_3; 
  arg5 = *(ImFontConfig **)&_swig_go_4; 
  
  result = (ImFont *)(arg1)->AddFontFromMemoryTTF(arg2,arg3,arg4,(ImFontConfig const *)arg5);
  *(ImFont **)&_swig_go_result = (ImFont *)result; 
  return _swig_go_result;
}


ImFont *_wrap_ImFontAtlas_AddFontFromMemoryTTF__SWIG_2_imgui_568d46c1e1b4102a(ImFontAtlas *_swig_go_0, void *_swig_go_1, intgo _swig_go_2, float _swig_go_3) {
  ImFontAtlas *arg1 = (ImFontAtlas *) 0 ;
  void *arg2 = (void *) 0 ;
  int arg3 ;
  float arg4 ;
  ImFont *result = 0 ;
  ImFont *_swig_go_result;
  
  arg1 = *(ImFontAtlas **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (float)_swig_go_3; 
  
  result = (ImFont *)(arg1)->AddFontFromMemoryTTF(arg2,arg3,arg4);
  *(ImFont **)&_swig_go_result = (ImFont *)result; 
  return _swig_go_result;
}


ImFont *_wrap_ImFontAtlas_AddFontFromMemoryCompressedTTF__SWIG_0_imgui_568d46c1e1b4102a(ImFontAtlas *_swig_go_0, void *_swig_go_1, intgo _swig_go_2, float _swig_go_3, ImFontConfig *_swig_go_4, short *_swig_go_5) {
  ImFontAtlas *arg1 = (ImFontAtlas *) 0 ;
  void *arg2 = (void *) 0 ;
  int arg3 ;
  float arg4 ;
  ImFontConfig *arg5 = (ImFontConfig *) 0 ;
  ImWchar *arg6 = (ImWchar *) 0 ;
  ImFont *result = 0 ;
  ImFont *_swig_go_result;
  
  arg1 = *(ImFontAtlas **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (float)_swig_go_3; 
  arg5 = *(ImFontConfig **)&_swig_go_4; 
  arg6 = *(ImWchar **)&_swig_go_5; 
  
  result = (ImFont *)(arg1)->AddFontFromMemoryCompressedTTF((void const *)arg2,arg3,arg4,(ImFontConfig const *)arg5,(ImWchar const *)arg6);
  *(ImFont **)&_swig_go_result = (ImFont *)result; 
  return _swig_go_result;
}


ImFont *_wrap_ImFontAtlas_AddFontFromMemoryCompressedTTF__SWIG_1_imgui_568d46c1e1b4102a(ImFontAtlas *_swig_go_0, void *_swig_go_1, intgo _swig_go_2, float _swig_go_3, ImFontConfig *_swig_go_4) {
  ImFontAtlas *arg1 = (ImFontAtlas *) 0 ;
  void *arg2 = (void *) 0 ;
  int arg3 ;
  float arg4 ;
  ImFontConfig *arg5 = (ImFontConfig *) 0 ;
  ImFont *result = 0 ;
  ImFont *_swig_go_result;
  
  arg1 = *(ImFontAtlas **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (float)_swig_go_3; 
  arg5 = *(ImFontConfig **)&_swig_go_4; 
  
  result = (ImFont *)(arg1)->AddFontFromMemoryCompressedTTF((void const *)arg2,arg3,arg4,(ImFontConfig const *)arg5);
  *(ImFont **)&_swig_go_result = (ImFont *)result; 
  return _swig_go_result;
}


ImFont *_wrap_ImFontAtlas_AddFontFromMemoryCompressedTTF__SWIG_2_imgui_568d46c1e1b4102a(ImFontAtlas *_swig_go_0, void *_swig_go_1, intgo _swig_go_2, float _swig_go_3) {
  ImFontAtlas *arg1 = (ImFontAtlas *) 0 ;
  void *arg2 = (void *) 0 ;
  int arg3 ;
  float arg4 ;
  ImFont *result = 0 ;
  ImFont *_swig_go_result;
  
  arg1 = *(ImFontAtlas **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (float)_swig_go_3; 
  
  result = (ImFont *)(arg1)->AddFontFromMemoryCompressedTTF((void const *)arg2,arg3,arg4);
  *(ImFont **)&_swig_go_result = (ImFont *)result; 
  return _swig_go_result;
}


ImFont *_wrap_ImFontAtlas_AddFontFromMemoryCompressedBase85TTF__SWIG_0_imgui_568d46c1e1b4102a(ImFontAtlas *_swig_go_0, _gostring_ _swig_go_1, float _swig_go_2, ImFontConfig *_swig_go_3, short *_swig_go_4) {
  ImFontAtlas *arg1 = (ImFontAtlas *) 0 ;
  char *arg2 = (char *) 0 ;
  float arg3 ;
  ImFontConfig *arg4 = (ImFontConfig *) 0 ;
  ImWchar *arg5 = (ImWchar *) 0 ;
  ImFont *result = 0 ;
  ImFont *_swig_go_result;
  
  arg1 = *(ImFontAtlas **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (float)_swig_go_2; 
  arg4 = *(ImFontConfig **)&_swig_go_3; 
  arg5 = *(ImWchar **)&_swig_go_4; 
  
  result = (ImFont *)(arg1)->AddFontFromMemoryCompressedBase85TTF((char const *)arg2,arg3,(ImFontConfig const *)arg4,(ImWchar const *)arg5);
  *(ImFont **)&_swig_go_result = (ImFont *)result; 
  free(arg2); 
  return _swig_go_result;
}


ImFont *_wrap_ImFontAtlas_AddFontFromMemoryCompressedBase85TTF__SWIG_1_imgui_568d46c1e1b4102a(ImFontAtlas *_swig_go_0, _gostring_ _swig_go_1, float _swig_go_2, ImFontConfig *_swig_go_3) {
  ImFontAtlas *arg1 = (ImFontAtlas *) 0 ;
  char *arg2 = (char *) 0 ;
  float arg3 ;
  ImFontConfig *arg4 = (ImFontConfig *) 0 ;
  ImFont *result = 0 ;
  ImFont *_swig_go_result;
  
  arg1 = *(ImFontAtlas **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (float)_swig_go_2; 
  arg4 = *(ImFontConfig **)&_swig_go_3; 
  
  result = (ImFont *)(arg1)->AddFontFromMemoryCompressedBase85TTF((char const *)arg2,arg3,(ImFontConfig const *)arg4);
  *(ImFont **)&_swig_go_result = (ImFont *)result; 
  free(arg2); 
  return _swig_go_result;
}


ImFont *_wrap_ImFontAtlas_AddFontFromMemoryCompressedBase85TTF__SWIG_2_imgui_568d46c1e1b4102a(ImFontAtlas *_swig_go_0, _gostring_ _swig_go_1, float _swig_go_2) {
  ImFontAtlas *arg1 = (ImFontAtlas *) 0 ;
  char *arg2 = (char *) 0 ;
  float arg3 ;
  ImFont *result = 0 ;
  ImFont *_swig_go_result;
  
  arg1 = *(ImFontAtlas **)&_swig_go_0; 
  
  arg2 = (char *)malloc(_swig_go_1.n + 1);
  memcpy(arg2, _swig_go_1.p, _swig_go_1.n);
  arg2[_swig_go_1.n] = '\0';
  
  arg3 = (float)_swig_go_2; 
  
  result = (ImFont *)(arg1)->AddFontFromMemoryCompressedBase85TTF((char const *)arg2,arg3);
  *(ImFont **)&_swig_go_result = (ImFont *)result; 
  free(arg2); 
  return _swig_go_result;
}


void _wrap_ImFontAtlas_ClearInputData_imgui_568d46c1e1b4102a(ImFontAtlas *_swig_go_0) {
  ImFontAtlas *arg1 = (ImFontAtlas *) 0 ;
  
  arg1 = *(ImFontAtlas **)&_swig_go_0; 
  
  (arg1)->ClearInputData();
  
}


void _wrap_ImFontAtlas_ClearTexData_imgui_568d46c1e1b4102a(ImFontAtlas *_swig_go_0) {
  ImFontAtlas *arg1 = (ImFontAtlas *) 0 ;
  
  arg1 = *(ImFontAtlas **)&_swig_go_0; 
  
  (arg1)->ClearTexData();
  
}


void _wrap_ImFontAtlas_ClearFonts_imgui_568d46c1e1b4102a(ImFontAtlas *_swig_go_0) {
  ImFontAtlas *arg1 = (ImFontAtlas *) 0 ;
  
  arg1 = *(ImFontAtlas **)&_swig_go_0; 
  
  (arg1)->ClearFonts();
  
}


void _wrap_ImFontAtlas_Clear_imgui_568d46c1e1b4102a(ImFontAtlas *_swig_go_0) {
  ImFontAtlas *arg1 = (ImFontAtlas *) 0 ;
  
  arg1 = *(ImFontAtlas **)&_swig_go_0; 
  
  (arg1)->Clear();
  
}


bool _wrap_ImFontAtlas_Build_imgui_568d46c1e1b4102a(ImFontAtlas *_swig_go_0) {
  ImFontAtlas *arg1 = (ImFontAtlas *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ImFontAtlas **)&_swig_go_0; 
  
  result = (bool)(arg1)->Build();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImFontAtlas_GetTexDataAsAlpha8__SWIG_0_imgui_568d46c1e1b4102a(ImFontAtlas *_swig_go_0, char **_swig_go_1, intgo *_swig_go_2, intgo *_swig_go_3, intgo *_swig_go_4) {
  ImFontAtlas *arg1 = (ImFontAtlas *) 0 ;
  unsigned char **arg2 = (unsigned char **) 0 ;
  int *arg3 = (int *) 0 ;
  int *arg4 = (int *) 0 ;
  int *arg5 = (int *) 0 ;
  
  arg1 = *(ImFontAtlas **)&_swig_go_0; 
  arg2 = *(unsigned char ***)&_swig_go_1; 
  arg3 = *(int **)&_swig_go_2; 
  arg4 = *(int **)&_swig_go_3; 
  arg5 = *(int **)&_swig_go_4; 
  
  (arg1)->GetTexDataAsAlpha8(arg2,arg3,arg4,arg5);
  
}


void _wrap_ImFontAtlas_GetTexDataAsAlpha8__SWIG_1_imgui_568d46c1e1b4102a(ImFontAtlas *_swig_go_0, char **_swig_go_1, intgo *_swig_go_2, intgo *_swig_go_3) {
  ImFontAtlas *arg1 = (ImFontAtlas *) 0 ;
  unsigned char **arg2 = (unsigned char **) 0 ;
  int *arg3 = (int *) 0 ;
  int *arg4 = (int *) 0 ;
  
  arg1 = *(ImFontAtlas **)&_swig_go_0; 
  arg2 = *(unsigned char ***)&_swig_go_1; 
  arg3 = *(int **)&_swig_go_2; 
  arg4 = *(int **)&_swig_go_3; 
  
  (arg1)->GetTexDataAsAlpha8(arg2,arg3,arg4);
  
}


void _wrap_ImFontAtlas_GetTexDataAsRGBA32__SWIG_0_imgui_568d46c1e1b4102a(ImFontAtlas *_swig_go_0, char **_swig_go_1, intgo *_swig_go_2, intgo *_swig_go_3, intgo *_swig_go_4) {
  ImFontAtlas *arg1 = (ImFontAtlas *) 0 ;
  unsigned char **arg2 = (unsigned char **) 0 ;
  int *arg3 = (int *) 0 ;
  int *arg4 = (int *) 0 ;
  int *arg5 = (int *) 0 ;
  
  arg1 = *(ImFontAtlas **)&_swig_go_0; 
  arg2 = *(unsigned char ***)&_swig_go_1; 
  arg3 = *(int **)&_swig_go_2; 
  arg4 = *(int **)&_swig_go_3; 
  arg5 = *(int **)&_swig_go_4; 
  
  (arg1)->GetTexDataAsRGBA32(arg2,arg3,arg4,arg5);
  
}


void _wrap_ImFontAtlas_GetTexDataAsRGBA32__SWIG_1_imgui_568d46c1e1b4102a(ImFontAtlas *_swig_go_0, char **_swig_go_1, intgo *_swig_go_2, intgo *_swig_go_3) {
  ImFontAtlas *arg1 = (ImFontAtlas *) 0 ;
  unsigned char **arg2 = (unsigned char **) 0 ;
  int *arg3 = (int *) 0 ;
  int *arg4 = (int *) 0 ;
  
  arg1 = *(ImFontAtlas **)&_swig_go_0; 
  arg2 = *(unsigned char ***)&_swig_go_1; 
  arg3 = *(int **)&_swig_go_2; 
  arg4 = *(int **)&_swig_go_3; 
  
  (arg1)->GetTexDataAsRGBA32(arg2,arg3,arg4);
  
}


bool _wrap_ImFontAtlas_IsBuilt_imgui_568d46c1e1b4102a(ImFontAtlas *_swig_go_0) {
  ImFontAtlas *arg1 = (ImFontAtlas *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ImFontAtlas **)&_swig_go_0; 
  
  result = (bool)((ImFontAtlas const *)arg1)->IsBuilt();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImFontAtlas_SetTexID_imgui_568d46c1e1b4102a(ImFontAtlas *_swig_go_0, ImTextureID _swig_go_1) {
  ImFontAtlas *arg1 = (ImFontAtlas *) 0 ;
  ImTextureID arg2 = (ImTextureID) 0 ;
  
  arg1 = *(ImFontAtlas **)&_swig_go_0; 
  arg2 = *(ImTextureID *)&_swig_go_1; 
  
  (arg1)->SetTexID(arg2);
  
}


short *_wrap_ImFontAtlas_GetGlyphRangesDefault_imgui_568d46c1e1b4102a(ImFontAtlas *_swig_go_0) {
  ImFontAtlas *arg1 = (ImFontAtlas *) 0 ;
  ImWchar *result = 0 ;
  short *_swig_go_result;
  
  arg1 = *(ImFontAtlas **)&_swig_go_0; 
  
  result = (ImWchar *)(arg1)->GetGlyphRangesDefault();
  *(ImWchar **)&_swig_go_result = (ImWchar *)result; 
  return _swig_go_result;
}


short *_wrap_ImFontAtlas_GetGlyphRangesGreek_imgui_568d46c1e1b4102a(ImFontAtlas *_swig_go_0) {
  ImFontAtlas *arg1 = (ImFontAtlas *) 0 ;
  ImWchar *result = 0 ;
  short *_swig_go_result;
  
  arg1 = *(ImFontAtlas **)&_swig_go_0; 
  
  result = (ImWchar *)(arg1)->GetGlyphRangesGreek();
  *(ImWchar **)&_swig_go_result = (ImWchar *)result; 
  return _swig_go_result;
}


short *_wrap_ImFontAtlas_GetGlyphRangesKorean_imgui_568d46c1e1b4102a(ImFontAtlas *_swig_go_0) {
  ImFontAtlas *arg1 = (ImFontAtlas *) 0 ;
  ImWchar *result = 0 ;
  short *_swig_go_result;
  
  arg1 = *(ImFontAtlas **)&_swig_go_0; 
  
  result = (ImWchar *)(arg1)->GetGlyphRangesKorean();
  *(ImWchar **)&_swig_go_result = (ImWchar *)result; 
  return _swig_go_result;
}


short *_wrap_ImFontAtlas_GetGlyphRangesJapanese_imgui_568d46c1e1b4102a(ImFontAtlas *_swig_go_0) {
  ImFontAtlas *arg1 = (ImFontAtlas *) 0 ;
  ImWchar *result = 0 ;
  short *_swig_go_result;
  
  arg1 = *(ImFontAtlas **)&_swig_go_0; 
  
  result = (ImWchar *)(arg1)->GetGlyphRangesJapanese();
  *(ImWchar **)&_swig_go_result = (ImWchar *)result; 
  return _swig_go_result;
}


short *_wrap_ImFontAtlas_GetGlyphRangesChineseFull_imgui_568d46c1e1b4102a(ImFontAtlas *_swig_go_0) {
  ImFontAtlas *arg1 = (ImFontAtlas *) 0 ;
  ImWchar *result = 0 ;
  short *_swig_go_result;
  
  arg1 = *(ImFontAtlas **)&_swig_go_0; 
  
  result = (ImWchar *)(arg1)->GetGlyphRangesChineseFull();
  *(ImWchar **)&_swig_go_result = (ImWchar *)result; 
  return _swig_go_result;
}


short *_wrap_ImFontAtlas_GetGlyphRangesChineseSimplifiedCommon_imgui_568d46c1e1b4102a(ImFontAtlas *_swig_go_0) {
  ImFontAtlas *arg1 = (ImFontAtlas *) 0 ;
  ImWchar *result = 0 ;
  short *_swig_go_result;
  
  arg1 = *(ImFontAtlas **)&_swig_go_0; 
  
  result = (ImWchar *)(arg1)->GetGlyphRangesChineseSimplifiedCommon();
  *(ImWchar **)&_swig_go_result = (ImWchar *)result; 
  return _swig_go_result;
}


short *_wrap_ImFontAtlas_GetGlyphRangesCyrillic_imgui_568d46c1e1b4102a(ImFontAtlas *_swig_go_0) {
  ImFontAtlas *arg1 = (ImFontAtlas *) 0 ;
  ImWchar *result = 0 ;
  short *_swig_go_result;
  
  arg1 = *(ImFontAtlas **)&_swig_go_0; 
  
  result = (ImWchar *)(arg1)->GetGlyphRangesCyrillic();
  *(ImWchar **)&_swig_go_result = (ImWchar *)result; 
  return _swig_go_result;
}


short *_wrap_ImFontAtlas_GetGlyphRangesThai_imgui_568d46c1e1b4102a(ImFontAtlas *_swig_go_0) {
  ImFontAtlas *arg1 = (ImFontAtlas *) 0 ;
  ImWchar *result = 0 ;
  short *_swig_go_result;
  
  arg1 = *(ImFontAtlas **)&_swig_go_0; 
  
  result = (ImWchar *)(arg1)->GetGlyphRangesThai();
  *(ImWchar **)&_swig_go_result = (ImWchar *)result; 
  return _swig_go_result;
}


short *_wrap_ImFontAtlas_GetGlyphRangesVietnamese_imgui_568d46c1e1b4102a(ImFontAtlas *_swig_go_0) {
  ImFontAtlas *arg1 = (ImFontAtlas *) 0 ;
  ImWchar *result = 0 ;
  short *_swig_go_result;
  
  arg1 = *(ImFontAtlas **)&_swig_go_0; 
  
  result = (ImWchar *)(arg1)->GetGlyphRangesVietnamese();
  *(ImWchar **)&_swig_go_result = (ImWchar *)result; 
  return _swig_go_result;
}


intgo _wrap_ImFontAtlas_AddCustomRectRegular_imgui_568d46c1e1b4102a(ImFontAtlas *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  ImFontAtlas *arg1 = (ImFontAtlas *) 0 ;
  int arg2 ;
  int arg3 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(ImFontAtlas **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  
  result = (int)(arg1)->AddCustomRectRegular(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_ImFontAtlas_AddCustomRectFontGlyph__SWIG_0_imgui_568d46c1e1b4102a(ImFontAtlas *_swig_go_0, ImFont *_swig_go_1, short _swig_go_2, intgo _swig_go_3, intgo _swig_go_4, float _swig_go_5, ImVec2 *_swig_go_6) {
  ImFontAtlas *arg1 = (ImFontAtlas *) 0 ;
  ImFont *arg2 = (ImFont *) 0 ;
  ImWchar arg3 ;
  int arg4 ;
  int arg5 ;
  float arg6 ;
  ImVec2 *arg7 = 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(ImFontAtlas **)&_swig_go_0; 
  arg2 = *(ImFont **)&_swig_go_1; 
  arg3 = (ImWchar)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  arg6 = (float)_swig_go_5; 
  arg7 = *(ImVec2 **)&_swig_go_6; 
  
  result = (int)(arg1)->AddCustomRectFontGlyph(arg2,arg3,arg4,arg5,arg6,(ImVec2 const &)*arg7);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_ImFontAtlas_AddCustomRectFontGlyph__SWIG_1_imgui_568d46c1e1b4102a(ImFontAtlas *_swig_go_0, ImFont *_swig_go_1, short _swig_go_2, intgo _swig_go_3, intgo _swig_go_4, float _swig_go_5) {
  ImFontAtlas *arg1 = (ImFontAtlas *) 0 ;
  ImFont *arg2 = (ImFont *) 0 ;
  ImWchar arg3 ;
  int arg4 ;
  int arg5 ;
  float arg6 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(ImFontAtlas **)&_swig_go_0; 
  arg2 = *(ImFont **)&_swig_go_1; 
  arg3 = (ImWchar)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  arg6 = (float)_swig_go_5; 
  
  result = (int)(arg1)->AddCustomRectFontGlyph(arg2,arg3,arg4,arg5,arg6);
  _swig_go_result = result; 
  return _swig_go_result;
}


ImFontAtlasCustomRect *_wrap_ImFontAtlas_GetCustomRectByIndex_imgui_568d46c1e1b4102a(ImFontAtlas *_swig_go_0, intgo _swig_go_1) {
  ImFontAtlas *arg1 = (ImFontAtlas *) 0 ;
  int arg2 ;
  ImFontAtlasCustomRect *result = 0 ;
  ImFontAtlasCustomRect *_swig_go_result;
  
  arg1 = *(ImFontAtlas **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  result = (ImFontAtlasCustomRect *)(arg1)->GetCustomRectByIndex(arg2);
  *(ImFontAtlasCustomRect **)&_swig_go_result = (ImFontAtlasCustomRect *)result; 
  return _swig_go_result;
}


void _wrap_ImFontAtlas_CalcCustomRectUV_imgui_568d46c1e1b4102a(ImFontAtlas *_swig_go_0, ImFontAtlasCustomRect *_swig_go_1, ImVec2 *_swig_go_2, ImVec2 *_swig_go_3) {
  ImFontAtlas *arg1 = (ImFontAtlas *) 0 ;
  ImFontAtlasCustomRect *arg2 = (ImFontAtlasCustomRect *) 0 ;
  ImVec2 *arg3 = (ImVec2 *) 0 ;
  ImVec2 *arg4 = (ImVec2 *) 0 ;
  
  arg1 = *(ImFontAtlas **)&_swig_go_0; 
  arg2 = *(ImFontAtlasCustomRect **)&_swig_go_1; 
  arg3 = *(ImVec2 **)&_swig_go_2; 
  arg4 = *(ImVec2 **)&_swig_go_3; 
  
  ((ImFontAtlas const *)arg1)->CalcCustomRectUV((ImFontAtlasCustomRect const *)arg2,arg3,arg4);
  
}


bool _wrap_ImFontAtlas_GetMouseCursorTexData_imgui_568d46c1e1b4102a(ImFontAtlas *_swig_go_0, intgo _swig_go_1, ImVec2 *_swig_go_2, ImVec2 *_swig_go_3, ImVec2 (*_swig_go_4)[2], ImVec2 (*_swig_go_5)[2]) {
  ImFontAtlas *arg1 = (ImFontAtlas *) 0 ;
  ImGuiMouseCursor arg2 ;
  ImVec2 *arg3 = (ImVec2 *) 0 ;
  ImVec2 *arg4 = (ImVec2 *) 0 ;
  ImVec2 *arg5 = (ImVec2 *) (ImVec2 *)0 ;
  ImVec2 *arg6 = (ImVec2 *) (ImVec2 *)0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ImFontAtlas **)&_swig_go_0; 
  arg2 = (ImGuiMouseCursor)_swig_go_1; 
  arg3 = *(ImVec2 **)&_swig_go_2; 
  arg4 = *(ImVec2 **)&_swig_go_3; 
  arg5 = *(ImVec2 **)&_swig_go_4; 
  arg6 = *(ImVec2 **)&_swig_go_5; 
  
  result = (bool)(arg1)->GetMouseCursorTexData(arg2,arg3,arg4,arg5,arg6);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImFontAtlas_Flags_set_imgui_568d46c1e1b4102a(ImFontAtlas *_swig_go_0, intgo _swig_go_1) {
  ImFontAtlas *arg1 = (ImFontAtlas *) 0 ;
  ImFontAtlasFlags arg2 ;
  
  arg1 = *(ImFontAtlas **)&_swig_go_0; 
  arg2 = (ImFontAtlasFlags)_swig_go_1; 
  
  if (arg1) (arg1)->Flags = arg2;
  
}


intgo _wrap_ImFontAtlas_Flags_get_imgui_568d46c1e1b4102a(ImFontAtlas *_swig_go_0) {
  ImFontAtlas *arg1 = (ImFontAtlas *) 0 ;
  ImFontAtlasFlags result;
  intgo _swig_go_result;
  
  arg1 = *(ImFontAtlas **)&_swig_go_0; 
  
  result = (ImFontAtlasFlags) ((arg1)->Flags);
  _swig_go_result = result; 
  return _swig_go_result;
}


ImTextureID _wrap_ImFontAtlas_TexID_get_imgui_568d46c1e1b4102a(ImFontAtlas *_swig_go_0) {
  ImFontAtlas *arg1 = (ImFontAtlas *) 0 ;
  ImTextureID result;
  ImTextureID _swig_go_result;
  
  arg1 = *(ImFontAtlas **)&_swig_go_0; 
  
  result = (ImTextureID) ((arg1)->TexID);
  *(ImTextureID *)&_swig_go_result = (ImTextureID)result; 
  return _swig_go_result;
}


void _wrap_ImFontAtlas_TexDesiredWidth_set_imgui_568d46c1e1b4102a(ImFontAtlas *_swig_go_0, intgo _swig_go_1) {
  ImFontAtlas *arg1 = (ImFontAtlas *) 0 ;
  int arg2 ;
  
  arg1 = *(ImFontAtlas **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->TexDesiredWidth = arg2;
  
}


intgo _wrap_ImFontAtlas_TexDesiredWidth_get_imgui_568d46c1e1b4102a(ImFontAtlas *_swig_go_0) {
  ImFontAtlas *arg1 = (ImFontAtlas *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(ImFontAtlas **)&_swig_go_0; 
  
  result = (int) ((arg1)->TexDesiredWidth);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImFontAtlas_TexGlyphPadding_set_imgui_568d46c1e1b4102a(ImFontAtlas *_swig_go_0, intgo _swig_go_1) {
  ImFontAtlas *arg1 = (ImFontAtlas *) 0 ;
  int arg2 ;
  
  arg1 = *(ImFontAtlas **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->TexGlyphPadding = arg2;
  
}


intgo _wrap_ImFontAtlas_TexGlyphPadding_get_imgui_568d46c1e1b4102a(ImFontAtlas *_swig_go_0) {
  ImFontAtlas *arg1 = (ImFontAtlas *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(ImFontAtlas **)&_swig_go_0; 
  
  result = (int) ((arg1)->TexGlyphPadding);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImFontAtlas_Locked_set_imgui_568d46c1e1b4102a(ImFontAtlas *_swig_go_0, bool _swig_go_1) {
  ImFontAtlas *arg1 = (ImFontAtlas *) 0 ;
  bool arg2 ;
  
  arg1 = *(ImFontAtlas **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->Locked = arg2;
  
}


bool _wrap_ImFontAtlas_Locked_get_imgui_568d46c1e1b4102a(ImFontAtlas *_swig_go_0) {
  ImFontAtlas *arg1 = (ImFontAtlas *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ImFontAtlas **)&_swig_go_0; 
  
  result = (bool) ((arg1)->Locked);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImFontAtlas_UserData_set_imgui_568d46c1e1b4102a(ImFontAtlas *_swig_go_0, void *_swig_go_1) {
  ImFontAtlas *arg1 = (ImFontAtlas *) 0 ;
  void *arg2 = (void *) 0 ;
  
  arg1 = *(ImFontAtlas **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  if (arg1) (arg1)->UserData = arg2;
  
}


void *_wrap_ImFontAtlas_UserData_get_imgui_568d46c1e1b4102a(ImFontAtlas *_swig_go_0) {
  ImFontAtlas *arg1 = (ImFontAtlas *) 0 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = *(ImFontAtlas **)&_swig_go_0; 
  
  result = (void *) ((arg1)->UserData);
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


void _wrap_ImFontAtlas_TexReady_set_imgui_568d46c1e1b4102a(ImFontAtlas *_swig_go_0, bool _swig_go_1) {
  ImFontAtlas *arg1 = (ImFontAtlas *) 0 ;
  bool arg2 ;
  
  arg1 = *(ImFontAtlas **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->TexReady = arg2;
  
}


bool _wrap_ImFontAtlas_TexReady_get_imgui_568d46c1e1b4102a(ImFontAtlas *_swig_go_0) {
  ImFontAtlas *arg1 = (ImFontAtlas *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ImFontAtlas **)&_swig_go_0; 
  
  result = (bool) ((arg1)->TexReady);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImFontAtlas_TexPixelsUseColors_set_imgui_568d46c1e1b4102a(ImFontAtlas *_swig_go_0, bool _swig_go_1) {
  ImFontAtlas *arg1 = (ImFontAtlas *) 0 ;
  bool arg2 ;
  
  arg1 = *(ImFontAtlas **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->TexPixelsUseColors = arg2;
  
}


bool _wrap_ImFontAtlas_TexPixelsUseColors_get_imgui_568d46c1e1b4102a(ImFontAtlas *_swig_go_0) {
  ImFontAtlas *arg1 = (ImFontAtlas *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ImFontAtlas **)&_swig_go_0; 
  
  result = (bool) ((arg1)->TexPixelsUseColors);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImFontAtlas_TexPixelsAlpha8_set_imgui_568d46c1e1b4102a(ImFontAtlas *_swig_go_0, char *_swig_go_1) {
  ImFontAtlas *arg1 = (ImFontAtlas *) 0 ;
  unsigned char *arg2 = (unsigned char *) 0 ;
  
  arg1 = *(ImFontAtlas **)&_swig_go_0; 
  arg2 = *(unsigned char **)&_swig_go_1; 
  
  if (arg1) (arg1)->TexPixelsAlpha8 = arg2;
  
}


char *_wrap_ImFontAtlas_TexPixelsAlpha8_get_imgui_568d46c1e1b4102a(ImFontAtlas *_swig_go_0) {
  ImFontAtlas *arg1 = (ImFontAtlas *) 0 ;
  unsigned char *result = 0 ;
  char *_swig_go_result;
  
  arg1 = *(ImFontAtlas **)&_swig_go_0; 
  
  result = (unsigned char *) ((arg1)->TexPixelsAlpha8);
  *(unsigned char **)&_swig_go_result = (unsigned char *)result; 
  return _swig_go_result;
}


void _wrap_ImFontAtlas_TexPixelsRGBA32_set_imgui_568d46c1e1b4102a(ImFontAtlas *_swig_go_0, intgo *_swig_go_1) {
  ImFontAtlas *arg1 = (ImFontAtlas *) 0 ;
  unsigned int *arg2 = (unsigned int *) 0 ;
  
  arg1 = *(ImFontAtlas **)&_swig_go_0; 
  arg2 = *(unsigned int **)&_swig_go_1; 
  
  if (arg1) (arg1)->TexPixelsRGBA32 = arg2;
  
}


intgo *_wrap_ImFontAtlas_TexPixelsRGBA32_get_imgui_568d46c1e1b4102a(ImFontAtlas *_swig_go_0) {
  ImFontAtlas *arg1 = (ImFontAtlas *) 0 ;
  unsigned int *result = 0 ;
  intgo *_swig_go_result;
  
  arg1 = *(ImFontAtlas **)&_swig_go_0; 
  
  result = (unsigned int *) ((arg1)->TexPixelsRGBA32);
  *(unsigned int **)&_swig_go_result = (unsigned int *)result; 
  return _swig_go_result;
}


void _wrap_ImFontAtlas_TexWidth_set_imgui_568d46c1e1b4102a(ImFontAtlas *_swig_go_0, intgo _swig_go_1) {
  ImFontAtlas *arg1 = (ImFontAtlas *) 0 ;
  int arg2 ;
  
  arg1 = *(ImFontAtlas **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->TexWidth = arg2;
  
}


intgo _wrap_ImFontAtlas_TexWidth_get_imgui_568d46c1e1b4102a(ImFontAtlas *_swig_go_0) {
  ImFontAtlas *arg1 = (ImFontAtlas *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(ImFontAtlas **)&_swig_go_0; 
  
  result = (int) ((arg1)->TexWidth);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImFontAtlas_TexHeight_set_imgui_568d46c1e1b4102a(ImFontAtlas *_swig_go_0, intgo _swig_go_1) {
  ImFontAtlas *arg1 = (ImFontAtlas *) 0 ;
  int arg2 ;
  
  arg1 = *(ImFontAtlas **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->TexHeight = arg2;
  
}


intgo _wrap_ImFontAtlas_TexHeight_get_imgui_568d46c1e1b4102a(ImFontAtlas *_swig_go_0) {
  ImFontAtlas *arg1 = (ImFontAtlas *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(ImFontAtlas **)&_swig_go_0; 
  
  result = (int) ((arg1)->TexHeight);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImFontAtlas_TexUvScale_set_imgui_568d46c1e1b4102a(ImFontAtlas *_swig_go_0, ImVec2 *_swig_go_1) {
  ImFontAtlas *arg1 = (ImFontAtlas *) 0 ;
  ImVec2 *arg2 = (ImVec2 *) 0 ;
  
  arg1 = *(ImFontAtlas **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  
  if (arg1) (arg1)->TexUvScale = *arg2;
  
}


ImVec2 *_wrap_ImFontAtlas_TexUvScale_get_imgui_568d46c1e1b4102a(ImFontAtlas *_swig_go_0) {
  ImFontAtlas *arg1 = (ImFontAtlas *) 0 ;
  ImVec2 *result = 0 ;
  ImVec2 *_swig_go_result;
  
  arg1 = *(ImFontAtlas **)&_swig_go_0; 
  
  result = (ImVec2 *)& ((arg1)->TexUvScale);
  *(ImVec2 **)&_swig_go_result = (ImVec2 *)result; 
  return _swig_go_result;
}


void _wrap_ImFontAtlas_TexUvWhitePixel_set_imgui_568d46c1e1b4102a(ImFontAtlas *_swig_go_0, ImVec2 *_swig_go_1) {
  ImFontAtlas *arg1 = (ImFontAtlas *) 0 ;
  ImVec2 *arg2 = (ImVec2 *) 0 ;
  
  arg1 = *(ImFontAtlas **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  
  if (arg1) (arg1)->TexUvWhitePixel = *arg2;
  
}


ImVec2 *_wrap_ImFontAtlas_TexUvWhitePixel_get_imgui_568d46c1e1b4102a(ImFontAtlas *_swig_go_0) {
  ImFontAtlas *arg1 = (ImFontAtlas *) 0 ;
  ImVec2 *result = 0 ;
  ImVec2 *_swig_go_result;
  
  arg1 = *(ImFontAtlas **)&_swig_go_0; 
  
  result = (ImVec2 *)& ((arg1)->TexUvWhitePixel);
  *(ImVec2 **)&_swig_go_result = (ImVec2 *)result; 
  return _swig_go_result;
}


void _wrap_ImFontAtlas_Fonts_set_imgui_568d46c1e1b4102a(ImFontAtlas *_swig_go_0, ImVector< ImFont * > *_swig_go_1) {
  ImFontAtlas *arg1 = (ImFontAtlas *) 0 ;
  ImVector< ImFont * > *arg2 = (ImVector< ImFont * > *) 0 ;
  
  arg1 = *(ImFontAtlas **)&_swig_go_0; 
  arg2 = *(ImVector< ImFont * > **)&_swig_go_1; 
  
  if (arg1) (arg1)->Fonts = *arg2;
  
}


ImVector< ImFont * > *_wrap_ImFontAtlas_Fonts_get_imgui_568d46c1e1b4102a(ImFontAtlas *_swig_go_0) {
  ImFontAtlas *arg1 = (ImFontAtlas *) 0 ;
  ImVector< ImFont * > *result = 0 ;
  ImVector< ImFont * > *_swig_go_result;
  
  arg1 = *(ImFontAtlas **)&_swig_go_0; 
  
  result = (ImVector< ImFont * > *)& ((arg1)->Fonts);
  *(ImVector< ImFont * > **)&_swig_go_result = (ImVector< ImFont * > *)result; 
  return _swig_go_result;
}


void _wrap_ImFontAtlas_CustomRects_set_imgui_568d46c1e1b4102a(ImFontAtlas *_swig_go_0, ImVector< ImFontAtlasCustomRect > *_swig_go_1) {
  ImFontAtlas *arg1 = (ImFontAtlas *) 0 ;
  ImVector< ImFontAtlasCustomRect > *arg2 = (ImVector< ImFontAtlasCustomRect > *) 0 ;
  
  arg1 = *(ImFontAtlas **)&_swig_go_0; 
  arg2 = *(ImVector< ImFontAtlasCustomRect > **)&_swig_go_1; 
  
  if (arg1) (arg1)->CustomRects = *arg2;
  
}


ImVector< ImFontAtlasCustomRect > *_wrap_ImFontAtlas_CustomRects_get_imgui_568d46c1e1b4102a(ImFontAtlas *_swig_go_0) {
  ImFontAtlas *arg1 = (ImFontAtlas *) 0 ;
  ImVector< ImFontAtlasCustomRect > *result = 0 ;
  ImVector< ImFontAtlasCustomRect > *_swig_go_result;
  
  arg1 = *(ImFontAtlas **)&_swig_go_0; 
  
  result = (ImVector< ImFontAtlasCustomRect > *)& ((arg1)->CustomRects);
  *(ImVector< ImFontAtlasCustomRect > **)&_swig_go_result = (ImVector< ImFontAtlasCustomRect > *)result; 
  return _swig_go_result;
}


void _wrap_ImFontAtlas_ConfigData_set_imgui_568d46c1e1b4102a(ImFontAtlas *_swig_go_0, ImVector< ImFontConfig > *_swig_go_1) {
  ImFontAtlas *arg1 = (ImFontAtlas *) 0 ;
  ImVector< ImFontConfig > *arg2 = (ImVector< ImFontConfig > *) 0 ;
  
  arg1 = *(ImFontAtlas **)&_swig_go_0; 
  arg2 = *(ImVector< ImFontConfig > **)&_swig_go_1; 
  
  if (arg1) (arg1)->ConfigData = *arg2;
  
}


ImVector< ImFontConfig > *_wrap_ImFontAtlas_ConfigData_get_imgui_568d46c1e1b4102a(ImFontAtlas *_swig_go_0) {
  ImFontAtlas *arg1 = (ImFontAtlas *) 0 ;
  ImVector< ImFontConfig > *result = 0 ;
  ImVector< ImFontConfig > *_swig_go_result;
  
  arg1 = *(ImFontAtlas **)&_swig_go_0; 
  
  result = (ImVector< ImFontConfig > *)& ((arg1)->ConfigData);
  *(ImVector< ImFontConfig > **)&_swig_go_result = (ImVector< ImFontConfig > *)result; 
  return _swig_go_result;
}


void _wrap_ImFontAtlas_TexUvLines_set_imgui_568d46c1e1b4102a(ImFontAtlas *_swig_go_0, ImVec4 (*_swig_go_1)[(63) +1]) {
  ImFontAtlas *arg1 = (ImFontAtlas *) 0 ;
  ImVec4 *arg2 = (ImVec4 *) (ImVec4 *)0 ;
  
  arg1 = *(ImFontAtlas **)&_swig_go_0; 
  arg2 = *(ImVec4 **)&_swig_go_1; 
  
  {
    size_t ii;
    ImVec4 *b = (ImVec4 *) arg1->TexUvLines;
    for (ii = 0; ii < (size_t)(63) +1; ii++) b[ii] = *((ImVec4 *) arg2 + ii);
  }
  
}


ImVec4 (*_wrap_ImFontAtlas_TexUvLines_get_imgui_568d46c1e1b4102a(ImFontAtlas *_swig_go_0))[(63) +1] {
  ImFontAtlas *arg1 = (ImFontAtlas *) 0 ;
  ImVec4 *result = 0 ;
  ImVec4 (*_swig_go_result)[(63) +1];
  
  arg1 = *(ImFontAtlas **)&_swig_go_0; 
  
  result = (ImVec4 *)(ImVec4 *) ((arg1)->TexUvLines);
  *(ImVec4 **)&_swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImFontAtlas_FontBuilderIO_set_imgui_568d46c1e1b4102a(ImFontAtlas *_swig_go_0, ImFontBuilderIO *_swig_go_1) {
  ImFontAtlas *arg1 = (ImFontAtlas *) 0 ;
  ImFontBuilderIO *arg2 = (ImFontBuilderIO *) 0 ;
  
  arg1 = *(ImFontAtlas **)&_swig_go_0; 
  arg2 = *(ImFontBuilderIO **)&_swig_go_1; 
  
  if (arg1) (arg1)->FontBuilderIO = (ImFontBuilderIO const *)arg2;
  
}


ImFontBuilderIO *_wrap_ImFontAtlas_FontBuilderIO_get_imgui_568d46c1e1b4102a(ImFontAtlas *_swig_go_0) {
  ImFontAtlas *arg1 = (ImFontAtlas *) 0 ;
  ImFontBuilderIO *result = 0 ;
  ImFontBuilderIO *_swig_go_result;
  
  arg1 = *(ImFontAtlas **)&_swig_go_0; 
  
  result = (ImFontBuilderIO *) ((arg1)->FontBuilderIO);
  *(ImFontBuilderIO **)&_swig_go_result = (ImFontBuilderIO *)result; 
  return _swig_go_result;
}


void _wrap_ImFontAtlas_FontBuilderFlags_set_imgui_568d46c1e1b4102a(ImFontAtlas *_swig_go_0, intgo _swig_go_1) {
  ImFontAtlas *arg1 = (ImFontAtlas *) 0 ;
  unsigned int arg2 ;
  
  arg1 = *(ImFontAtlas **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  if (arg1) (arg1)->FontBuilderFlags = arg2;
  
}


intgo _wrap_ImFontAtlas_FontBuilderFlags_get_imgui_568d46c1e1b4102a(ImFontAtlas *_swig_go_0) {
  ImFontAtlas *arg1 = (ImFontAtlas *) 0 ;
  unsigned int result;
  intgo _swig_go_result;
  
  arg1 = *(ImFontAtlas **)&_swig_go_0; 
  
  result = (unsigned int) ((arg1)->FontBuilderFlags);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImFontAtlas_PackIdMouseCursors_set_imgui_568d46c1e1b4102a(ImFontAtlas *_swig_go_0, intgo _swig_go_1) {
  ImFontAtlas *arg1 = (ImFontAtlas *) 0 ;
  int arg2 ;
  
  arg1 = *(ImFontAtlas **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->PackIdMouseCursors = arg2;
  
}


intgo _wrap_ImFontAtlas_PackIdMouseCursors_get_imgui_568d46c1e1b4102a(ImFontAtlas *_swig_go_0) {
  ImFontAtlas *arg1 = (ImFontAtlas *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(ImFontAtlas **)&_swig_go_0; 
  
  result = (int) ((arg1)->PackIdMouseCursors);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImFontAtlas_PackIdLines_set_imgui_568d46c1e1b4102a(ImFontAtlas *_swig_go_0, intgo _swig_go_1) {
  ImFontAtlas *arg1 = (ImFontAtlas *) 0 ;
  int arg2 ;
  
  arg1 = *(ImFontAtlas **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->PackIdLines = arg2;
  
}


intgo _wrap_ImFontAtlas_PackIdLines_get_imgui_568d46c1e1b4102a(ImFontAtlas *_swig_go_0) {
  ImFontAtlas *arg1 = (ImFontAtlas *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(ImFontAtlas **)&_swig_go_0; 
  
  result = (int) ((arg1)->PackIdLines);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImFont_IndexAdvanceX_set_imgui_568d46c1e1b4102a(ImFont *_swig_go_0, ImVector< float > *_swig_go_1) {
  ImFont *arg1 = (ImFont *) 0 ;
  ImVector< float > *arg2 = (ImVector< float > *) 0 ;
  
  arg1 = *(ImFont **)&_swig_go_0; 
  arg2 = *(ImVector< float > **)&_swig_go_1; 
  
  if (arg1) (arg1)->IndexAdvanceX = *arg2;
  
}


ImVector< float > *_wrap_ImFont_IndexAdvanceX_get_imgui_568d46c1e1b4102a(ImFont *_swig_go_0) {
  ImFont *arg1 = (ImFont *) 0 ;
  ImVector< float > *result = 0 ;
  ImVector< float > *_swig_go_result;
  
  arg1 = *(ImFont **)&_swig_go_0; 
  
  result = (ImVector< float > *)& ((arg1)->IndexAdvanceX);
  *(ImVector< float > **)&_swig_go_result = (ImVector< float > *)result; 
  return _swig_go_result;
}


void _wrap_ImFont_FallbackAdvanceX_set_imgui_568d46c1e1b4102a(ImFont *_swig_go_0, float _swig_go_1) {
  ImFont *arg1 = (ImFont *) 0 ;
  float arg2 ;
  
  arg1 = *(ImFont **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->FallbackAdvanceX = arg2;
  
}


float _wrap_ImFont_FallbackAdvanceX_get_imgui_568d46c1e1b4102a(ImFont *_swig_go_0) {
  ImFont *arg1 = (ImFont *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(ImFont **)&_swig_go_0; 
  
  result = (float) ((arg1)->FallbackAdvanceX);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImFont_FontSize_set_imgui_568d46c1e1b4102a(ImFont *_swig_go_0, float _swig_go_1) {
  ImFont *arg1 = (ImFont *) 0 ;
  float arg2 ;
  
  arg1 = *(ImFont **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->FontSize = arg2;
  
}


float _wrap_ImFont_FontSize_get_imgui_568d46c1e1b4102a(ImFont *_swig_go_0) {
  ImFont *arg1 = (ImFont *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(ImFont **)&_swig_go_0; 
  
  result = (float) ((arg1)->FontSize);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImFont_IndexLookup_set_imgui_568d46c1e1b4102a(ImFont *_swig_go_0, ImVector< unsigned short > *_swig_go_1) {
  ImFont *arg1 = (ImFont *) 0 ;
  ImVector< ImWchar > *arg2 = (ImVector< ImWchar > *) 0 ;
  
  arg1 = *(ImFont **)&_swig_go_0; 
  arg2 = *(ImVector< ImWchar > **)&_swig_go_1; 
  
  if (arg1) (arg1)->IndexLookup = *arg2;
  
}


ImVector< unsigned short > *_wrap_ImFont_IndexLookup_get_imgui_568d46c1e1b4102a(ImFont *_swig_go_0) {
  ImFont *arg1 = (ImFont *) 0 ;
  ImVector< ImWchar > *result = 0 ;
  ImVector< unsigned short > *_swig_go_result;
  
  arg1 = *(ImFont **)&_swig_go_0; 
  
  result = (ImVector< ImWchar > *)& ((arg1)->IndexLookup);
  *(ImVector< ImWchar > **)&_swig_go_result = (ImVector< ImWchar > *)result; 
  return _swig_go_result;
}


void _wrap_ImFont_Glyphs_set_imgui_568d46c1e1b4102a(ImFont *_swig_go_0, ImVector< ImFontGlyph > *_swig_go_1) {
  ImFont *arg1 = (ImFont *) 0 ;
  ImVector< ImFontGlyph > *arg2 = (ImVector< ImFontGlyph > *) 0 ;
  
  arg1 = *(ImFont **)&_swig_go_0; 
  arg2 = *(ImVector< ImFontGlyph > **)&_swig_go_1; 
  
  if (arg1) (arg1)->Glyphs = *arg2;
  
}


ImVector< ImFontGlyph > *_wrap_ImFont_Glyphs_get_imgui_568d46c1e1b4102a(ImFont *_swig_go_0) {
  ImFont *arg1 = (ImFont *) 0 ;
  ImVector< ImFontGlyph > *result = 0 ;
  ImVector< ImFontGlyph > *_swig_go_result;
  
  arg1 = *(ImFont **)&_swig_go_0; 
  
  result = (ImVector< ImFontGlyph > *)& ((arg1)->Glyphs);
  *(ImVector< ImFontGlyph > **)&_swig_go_result = (ImVector< ImFontGlyph > *)result; 
  return _swig_go_result;
}


void _wrap_ImFont_FallbackGlyph_set_imgui_568d46c1e1b4102a(ImFont *_swig_go_0, ImFontGlyph *_swig_go_1) {
  ImFont *arg1 = (ImFont *) 0 ;
  ImFontGlyph *arg2 = (ImFontGlyph *) 0 ;
  
  arg1 = *(ImFont **)&_swig_go_0; 
  arg2 = *(ImFontGlyph **)&_swig_go_1; 
  
  if (arg1) (arg1)->FallbackGlyph = (ImFontGlyph const *)arg2;
  
}


ImFontGlyph *_wrap_ImFont_FallbackGlyph_get_imgui_568d46c1e1b4102a(ImFont *_swig_go_0) {
  ImFont *arg1 = (ImFont *) 0 ;
  ImFontGlyph *result = 0 ;
  ImFontGlyph *_swig_go_result;
  
  arg1 = *(ImFont **)&_swig_go_0; 
  
  result = (ImFontGlyph *) ((arg1)->FallbackGlyph);
  *(ImFontGlyph **)&_swig_go_result = (ImFontGlyph *)result; 
  return _swig_go_result;
}


void _wrap_ImFont_ContainerAtlas_set_imgui_568d46c1e1b4102a(ImFont *_swig_go_0, ImFontAtlas *_swig_go_1) {
  ImFont *arg1 = (ImFont *) 0 ;
  ImFontAtlas *arg2 = (ImFontAtlas *) 0 ;
  
  arg1 = *(ImFont **)&_swig_go_0; 
  arg2 = *(ImFontAtlas **)&_swig_go_1; 
  
  if (arg1) (arg1)->ContainerAtlas = arg2;
  
}


ImFontAtlas *_wrap_ImFont_ContainerAtlas_get_imgui_568d46c1e1b4102a(ImFont *_swig_go_0) {
  ImFont *arg1 = (ImFont *) 0 ;
  ImFontAtlas *result = 0 ;
  ImFontAtlas *_swig_go_result;
  
  arg1 = *(ImFont **)&_swig_go_0; 
  
  result = (ImFontAtlas *) ((arg1)->ContainerAtlas);
  *(ImFontAtlas **)&_swig_go_result = (ImFontAtlas *)result; 
  return _swig_go_result;
}


void _wrap_ImFont_ConfigData_set_imgui_568d46c1e1b4102a(ImFont *_swig_go_0, ImFontConfig *_swig_go_1) {
  ImFont *arg1 = (ImFont *) 0 ;
  ImFontConfig *arg2 = (ImFontConfig *) 0 ;
  
  arg1 = *(ImFont **)&_swig_go_0; 
  arg2 = *(ImFontConfig **)&_swig_go_1; 
  
  if (arg1) (arg1)->ConfigData = (ImFontConfig const *)arg2;
  
}


ImFontConfig *_wrap_ImFont_ConfigData_get_imgui_568d46c1e1b4102a(ImFont *_swig_go_0) {
  ImFont *arg1 = (ImFont *) 0 ;
  ImFontConfig *result = 0 ;
  ImFontConfig *_swig_go_result;
  
  arg1 = *(ImFont **)&_swig_go_0; 
  
  result = (ImFontConfig *) ((arg1)->ConfigData);
  *(ImFontConfig **)&_swig_go_result = (ImFontConfig *)result; 
  return _swig_go_result;
}


void _wrap_ImFont_ConfigDataCount_set_imgui_568d46c1e1b4102a(ImFont *_swig_go_0, short _swig_go_1) {
  ImFont *arg1 = (ImFont *) 0 ;
  short arg2 ;
  
  arg1 = *(ImFont **)&_swig_go_0; 
  arg2 = (short)_swig_go_1; 
  
  if (arg1) (arg1)->ConfigDataCount = arg2;
  
}


short _wrap_ImFont_ConfigDataCount_get_imgui_568d46c1e1b4102a(ImFont *_swig_go_0) {
  ImFont *arg1 = (ImFont *) 0 ;
  short result;
  short _swig_go_result;
  
  arg1 = *(ImFont **)&_swig_go_0; 
  
  result = (short) ((arg1)->ConfigDataCount);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImFont_FallbackChar_set_imgui_568d46c1e1b4102a(ImFont *_swig_go_0, short _swig_go_1) {
  ImFont *arg1 = (ImFont *) 0 ;
  ImWchar arg2 ;
  
  arg1 = *(ImFont **)&_swig_go_0; 
  arg2 = (ImWchar)_swig_go_1; 
  
  if (arg1) (arg1)->FallbackChar = arg2;
  
}


short _wrap_ImFont_FallbackChar_get_imgui_568d46c1e1b4102a(ImFont *_swig_go_0) {
  ImFont *arg1 = (ImFont *) 0 ;
  ImWchar result;
  short _swig_go_result;
  
  arg1 = *(ImFont **)&_swig_go_0; 
  
  result = (ImWchar) ((arg1)->FallbackChar);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImFont_EllipsisChar_set_imgui_568d46c1e1b4102a(ImFont *_swig_go_0, short _swig_go_1) {
  ImFont *arg1 = (ImFont *) 0 ;
  ImWchar arg2 ;
  
  arg1 = *(ImFont **)&_swig_go_0; 
  arg2 = (ImWchar)_swig_go_1; 
  
  if (arg1) (arg1)->EllipsisChar = arg2;
  
}


short _wrap_ImFont_EllipsisChar_get_imgui_568d46c1e1b4102a(ImFont *_swig_go_0) {
  ImFont *arg1 = (ImFont *) 0 ;
  ImWchar result;
  short _swig_go_result;
  
  arg1 = *(ImFont **)&_swig_go_0; 
  
  result = (ImWchar) ((arg1)->EllipsisChar);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImFont_EllipsisCharCount_set_imgui_568d46c1e1b4102a(ImFont *_swig_go_0, short _swig_go_1) {
  ImFont *arg1 = (ImFont *) 0 ;
  short arg2 ;
  
  arg1 = *(ImFont **)&_swig_go_0; 
  arg2 = (short)_swig_go_1; 
  
  if (arg1) (arg1)->EllipsisCharCount = arg2;
  
}


short _wrap_ImFont_EllipsisCharCount_get_imgui_568d46c1e1b4102a(ImFont *_swig_go_0) {
  ImFont *arg1 = (ImFont *) 0 ;
  short result;
  short _swig_go_result;
  
  arg1 = *(ImFont **)&_swig_go_0; 
  
  result = (short) ((arg1)->EllipsisCharCount);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImFont_EllipsisWidth_set_imgui_568d46c1e1b4102a(ImFont *_swig_go_0, float _swig_go_1) {
  ImFont *arg1 = (ImFont *) 0 ;
  float arg2 ;
  
  arg1 = *(ImFont **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->EllipsisWidth = arg2;
  
}


float _wrap_ImFont_EllipsisWidth_get_imgui_568d46c1e1b4102a(ImFont *_swig_go_0) {
  ImFont *arg1 = (ImFont *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(ImFont **)&_swig_go_0; 
  
  result = (float) ((arg1)->EllipsisWidth);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImFont_EllipsisCharStep_set_imgui_568d46c1e1b4102a(ImFont *_swig_go_0, float _swig_go_1) {
  ImFont *arg1 = (ImFont *) 0 ;
  float arg2 ;
  
  arg1 = *(ImFont **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->EllipsisCharStep = arg2;
  
}


float _wrap_ImFont_EllipsisCharStep_get_imgui_568d46c1e1b4102a(ImFont *_swig_go_0) {
  ImFont *arg1 = (ImFont *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(ImFont **)&_swig_go_0; 
  
  result = (float) ((arg1)->EllipsisCharStep);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImFont_DirtyLookupTables_set_imgui_568d46c1e1b4102a(ImFont *_swig_go_0, bool _swig_go_1) {
  ImFont *arg1 = (ImFont *) 0 ;
  bool arg2 ;
  
  arg1 = *(ImFont **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->DirtyLookupTables = arg2;
  
}


bool _wrap_ImFont_DirtyLookupTables_get_imgui_568d46c1e1b4102a(ImFont *_swig_go_0) {
  ImFont *arg1 = (ImFont *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ImFont **)&_swig_go_0; 
  
  result = (bool) ((arg1)->DirtyLookupTables);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImFont_Scale_set_imgui_568d46c1e1b4102a(ImFont *_swig_go_0, float _swig_go_1) {
  ImFont *arg1 = (ImFont *) 0 ;
  float arg2 ;
  
  arg1 = *(ImFont **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->Scale = arg2;
  
}


float _wrap_ImFont_Scale_get_imgui_568d46c1e1b4102a(ImFont *_swig_go_0) {
  ImFont *arg1 = (ImFont *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(ImFont **)&_swig_go_0; 
  
  result = (float) ((arg1)->Scale);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImFont_Ascent_set_imgui_568d46c1e1b4102a(ImFont *_swig_go_0, float _swig_go_1) {
  ImFont *arg1 = (ImFont *) 0 ;
  float arg2 ;
  
  arg1 = *(ImFont **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->Ascent = arg2;
  
}


float _wrap_ImFont_Ascent_get_imgui_568d46c1e1b4102a(ImFont *_swig_go_0) {
  ImFont *arg1 = (ImFont *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(ImFont **)&_swig_go_0; 
  
  result = (float) ((arg1)->Ascent);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImFont_Descent_set_imgui_568d46c1e1b4102a(ImFont *_swig_go_0, float _swig_go_1) {
  ImFont *arg1 = (ImFont *) 0 ;
  float arg2 ;
  
  arg1 = *(ImFont **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->Descent = arg2;
  
}


float _wrap_ImFont_Descent_get_imgui_568d46c1e1b4102a(ImFont *_swig_go_0) {
  ImFont *arg1 = (ImFont *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(ImFont **)&_swig_go_0; 
  
  result = (float) ((arg1)->Descent);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImFont_MetricsTotalSurface_set_imgui_568d46c1e1b4102a(ImFont *_swig_go_0, intgo _swig_go_1) {
  ImFont *arg1 = (ImFont *) 0 ;
  int arg2 ;
  
  arg1 = *(ImFont **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  if (arg1) (arg1)->MetricsTotalSurface = arg2;
  
}


intgo _wrap_ImFont_MetricsTotalSurface_get_imgui_568d46c1e1b4102a(ImFont *_swig_go_0) {
  ImFont *arg1 = (ImFont *) 0 ;
  int result;
  intgo _swig_go_result;
  
  arg1 = *(ImFont **)&_swig_go_0; 
  
  result = (int) ((arg1)->MetricsTotalSurface);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImFont_Used4kPagesMap_set_imgui_568d46c1e1b4102a(ImFont *_swig_go_0, char *_swig_go_1) {
  ImFont *arg1 = (ImFont *) 0 ;
  ImU8 *arg2 = (ImU8 *) (ImU8 *)0 ;
  
  arg1 = *(ImFont **)&_swig_go_0; 
  arg2 = *(ImU8 **)&_swig_go_1; 
  
  {
    size_t ii;
    ImU8 *b = (ImU8 *) arg1->Used4kPagesMap;
    for (ii = 0; ii < (size_t)(0xFFFF+1)/4096/8; ii++) b[ii] = *((ImU8 *) arg2 + ii);
  }
  
}


char *_wrap_ImFont_Used4kPagesMap_get_imgui_568d46c1e1b4102a(ImFont *_swig_go_0) {
  ImFont *arg1 = (ImFont *) 0 ;
  ImU8 *result = 0 ;
  char *_swig_go_result;
  
  arg1 = *(ImFont **)&_swig_go_0; 
  
  result = (ImU8 *)(ImU8 *) ((arg1)->Used4kPagesMap);
  *(ImU8 **)&_swig_go_result = result; 
  return _swig_go_result;
}


ImFont *_wrap_new_ImFont_imgui_568d46c1e1b4102a() {
  ImFont *result = 0 ;
  ImFont *_swig_go_result;
  
  
  result = (ImFont *)new ImFont();
  *(ImFont **)&_swig_go_result = (ImFont *)result; 
  return _swig_go_result;
}


void _wrap_delete_ImFont_imgui_568d46c1e1b4102a(ImFont *_swig_go_0) {
  ImFont *arg1 = (ImFont *) 0 ;
  
  arg1 = *(ImFont **)&_swig_go_0; 
  
  delete arg1;
  
}


ImFontGlyph *_wrap_ImFont_FindGlyph_imgui_568d46c1e1b4102a(ImFont *_swig_go_0, short _swig_go_1) {
  ImFont *arg1 = (ImFont *) 0 ;
  ImWchar arg2 ;
  ImFontGlyph *result = 0 ;
  ImFontGlyph *_swig_go_result;
  
  arg1 = *(ImFont **)&_swig_go_0; 
  arg2 = (ImWchar)_swig_go_1; 
  
  result = (ImFontGlyph *)((ImFont const *)arg1)->FindGlyph(arg2);
  *(ImFontGlyph **)&_swig_go_result = (ImFontGlyph *)result; 
  return _swig_go_result;
}


ImFontGlyph *_wrap_ImFont_FindGlyphNoFallback_imgui_568d46c1e1b4102a(ImFont *_swig_go_0, short _swig_go_1) {
  ImFont *arg1 = (ImFont *) 0 ;
  ImWchar arg2 ;
  ImFontGlyph *result = 0 ;
  ImFontGlyph *_swig_go_result;
  
  arg1 = *(ImFont **)&_swig_go_0; 
  arg2 = (ImWchar)_swig_go_1; 
  
  result = (ImFontGlyph *)((ImFont const *)arg1)->FindGlyphNoFallback(arg2);
  *(ImFontGlyph **)&_swig_go_result = (ImFontGlyph *)result; 
  return _swig_go_result;
}


float _wrap_ImFont_GetCharAdvance_imgui_568d46c1e1b4102a(ImFont *_swig_go_0, short _swig_go_1) {
  ImFont *arg1 = (ImFont *) 0 ;
  ImWchar arg2 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(ImFont **)&_swig_go_0; 
  arg2 = (ImWchar)_swig_go_1; 
  
  result = (float)((ImFont const *)arg1)->GetCharAdvance(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ImFont_IsLoaded_imgui_568d46c1e1b4102a(ImFont *_swig_go_0) {
  ImFont *arg1 = (ImFont *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ImFont **)&_swig_go_0; 
  
  result = (bool)((ImFont const *)arg1)->IsLoaded();
  _swig_go_result = result; 
  return _swig_go_result;
}


_gostring_ _wrap_ImFont_GetDebugName_imgui_568d46c1e1b4102a(ImFont *_swig_go_0) {
  ImFont *arg1 = (ImFont *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(ImFont **)&_swig_go_0; 
  
  result = (char *)((ImFont const *)arg1)->GetDebugName();
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


ImVec2 *_wrap_ImFont_CalcTextSizeA__SWIG_0_imgui_568d46c1e1b4102a(ImFont *_swig_go_0, float _swig_go_1, float _swig_go_2, float _swig_go_3, _gostring_ _swig_go_4, _gostring_ _swig_go_5, _gostring_* _swig_go_6) {
  ImFont *arg1 = (ImFont *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  char *arg5 = (char *) 0 ;
  char *arg6 = (char *) 0 ;
  char **arg7 = (char **) 0 ;
  ImVec2 result;
  ImVec2 *_swig_go_result;
  
  arg1 = *(ImFont **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  arg4 = (float)_swig_go_3; 
  
  arg5 = (char *)malloc(_swig_go_4.n + 1);
  memcpy(arg5, _swig_go_4.p, _swig_go_4.n);
  arg5[_swig_go_4.n] = '\0';
  
  
  arg6 = (char *)malloc(_swig_go_5.n + 1);
  memcpy(arg6, _swig_go_5.p, _swig_go_5.n);
  arg6[_swig_go_5.n] = '\0';
  
  arg7 = *(char ***)&_swig_go_6; 
  
  result = ((ImFont const *)arg1)->CalcTextSizeA(arg2,arg3,arg4,(char const *)arg5,(char const *)arg6,(char const **)arg7);
  *(ImVec2 **)&_swig_go_result = new ImVec2(result); 
  free(arg5); 
  free(arg6); 
  return _swig_go_result;
}


ImVec2 *_wrap_ImFont_CalcTextSizeA__SWIG_1_imgui_568d46c1e1b4102a(ImFont *_swig_go_0, float _swig_go_1, float _swig_go_2, float _swig_go_3, _gostring_ _swig_go_4, _gostring_ _swig_go_5) {
  ImFont *arg1 = (ImFont *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  char *arg5 = (char *) 0 ;
  char *arg6 = (char *) 0 ;
  ImVec2 result;
  ImVec2 *_swig_go_result;
  
  arg1 = *(ImFont **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  arg4 = (float)_swig_go_3; 
  
  arg5 = (char *)malloc(_swig_go_4.n + 1);
  memcpy(arg5, _swig_go_4.p, _swig_go_4.n);
  arg5[_swig_go_4.n] = '\0';
  
  
  arg6 = (char *)malloc(_swig_go_5.n + 1);
  memcpy(arg6, _swig_go_5.p, _swig_go_5.n);
  arg6[_swig_go_5.n] = '\0';
  
  
  result = ((ImFont const *)arg1)->CalcTextSizeA(arg2,arg3,arg4,(char const *)arg5,(char const *)arg6);
  *(ImVec2 **)&_swig_go_result = new ImVec2(result); 
  free(arg5); 
  free(arg6); 
  return _swig_go_result;
}


ImVec2 *_wrap_ImFont_CalcTextSizeA__SWIG_2_imgui_568d46c1e1b4102a(ImFont *_swig_go_0, float _swig_go_1, float _swig_go_2, float _swig_go_3, _gostring_ _swig_go_4) {
  ImFont *arg1 = (ImFont *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  char *arg5 = (char *) 0 ;
  ImVec2 result;
  ImVec2 *_swig_go_result;
  
  arg1 = *(ImFont **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  arg4 = (float)_swig_go_3; 
  
  arg5 = (char *)malloc(_swig_go_4.n + 1);
  memcpy(arg5, _swig_go_4.p, _swig_go_4.n);
  arg5[_swig_go_4.n] = '\0';
  
  
  result = ((ImFont const *)arg1)->CalcTextSizeA(arg2,arg3,arg4,(char const *)arg5);
  *(ImVec2 **)&_swig_go_result = new ImVec2(result); 
  free(arg5); 
  return _swig_go_result;
}


_gostring_ _wrap_ImFont_CalcWordWrapPositionA_imgui_568d46c1e1b4102a(ImFont *_swig_go_0, float _swig_go_1, _gostring_ _swig_go_2, _gostring_ _swig_go_3, float _swig_go_4) {
  ImFont *arg1 = (ImFont *) 0 ;
  float arg2 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  float arg5 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(ImFont **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  arg3 = (char *)malloc(_swig_go_2.n + 1);
  memcpy(arg3, _swig_go_2.p, _swig_go_2.n);
  arg3[_swig_go_2.n] = '\0';
  
  
  arg4 = (char *)malloc(_swig_go_3.n + 1);
  memcpy(arg4, _swig_go_3.p, _swig_go_3.n);
  arg4[_swig_go_3.n] = '\0';
  
  arg5 = (float)_swig_go_4; 
  
  result = (char *)((ImFont const *)arg1)->CalcWordWrapPositionA(arg2,(char const *)arg3,(char const *)arg4,arg5);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  free(arg3); 
  free(arg4); 
  return _swig_go_result;
}


void _wrap_ImFont_RenderChar_imgui_568d46c1e1b4102a(ImFont *_swig_go_0, ImDrawList *_swig_go_1, float _swig_go_2, ImVec2 *_swig_go_3, intgo _swig_go_4, short _swig_go_5) {
  ImFont *arg1 = (ImFont *) 0 ;
  ImDrawList *arg2 = (ImDrawList *) 0 ;
  float arg3 ;
  ImVec2 *arg4 = 0 ;
  ImU32 arg5 ;
  ImWchar arg6 ;
  
  arg1 = *(ImFont **)&_swig_go_0; 
  arg2 = *(ImDrawList **)&_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  arg4 = *(ImVec2 **)&_swig_go_3; 
  arg5 = (ImU32)_swig_go_4; 
  arg6 = (ImWchar)_swig_go_5; 
  
  ((ImFont const *)arg1)->RenderChar(arg2,arg3,(ImVec2 const &)*arg4,arg5,arg6);
  
}


void _wrap_ImFont_RenderText__SWIG_0_imgui_568d46c1e1b4102a(ImFont *_swig_go_0, ImDrawList *_swig_go_1, float _swig_go_2, ImVec2 *_swig_go_3, intgo _swig_go_4, ImVec4 *_swig_go_5, _gostring_ _swig_go_6, _gostring_ _swig_go_7, float _swig_go_8, bool _swig_go_9) {
  ImFont *arg1 = (ImFont *) 0 ;
  ImDrawList *arg2 = (ImDrawList *) 0 ;
  float arg3 ;
  ImVec2 *arg4 = 0 ;
  ImU32 arg5 ;
  ImVec4 *arg6 = 0 ;
  char *arg7 = (char *) 0 ;
  char *arg8 = (char *) 0 ;
  float arg9 ;
  bool arg10 ;
  
  arg1 = *(ImFont **)&_swig_go_0; 
  arg2 = *(ImDrawList **)&_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  arg4 = *(ImVec2 **)&_swig_go_3; 
  arg5 = (ImU32)_swig_go_4; 
  arg6 = *(ImVec4 **)&_swig_go_5; 
  
  arg7 = (char *)malloc(_swig_go_6.n + 1);
  memcpy(arg7, _swig_go_6.p, _swig_go_6.n);
  arg7[_swig_go_6.n] = '\0';
  
  
  arg8 = (char *)malloc(_swig_go_7.n + 1);
  memcpy(arg8, _swig_go_7.p, _swig_go_7.n);
  arg8[_swig_go_7.n] = '\0';
  
  arg9 = (float)_swig_go_8; 
  arg10 = (bool)_swig_go_9; 
  
  ((ImFont const *)arg1)->RenderText(arg2,arg3,(ImVec2 const &)*arg4,arg5,(ImVec4 const &)*arg6,(char const *)arg7,(char const *)arg8,arg9,arg10);
  
  free(arg7); 
  free(arg8); 
}


void _wrap_ImFont_RenderText__SWIG_1_imgui_568d46c1e1b4102a(ImFont *_swig_go_0, ImDrawList *_swig_go_1, float _swig_go_2, ImVec2 *_swig_go_3, intgo _swig_go_4, ImVec4 *_swig_go_5, _gostring_ _swig_go_6, _gostring_ _swig_go_7, float _swig_go_8) {
  ImFont *arg1 = (ImFont *) 0 ;
  ImDrawList *arg2 = (ImDrawList *) 0 ;
  float arg3 ;
  ImVec2 *arg4 = 0 ;
  ImU32 arg5 ;
  ImVec4 *arg6 = 0 ;
  char *arg7 = (char *) 0 ;
  char *arg8 = (char *) 0 ;
  float arg9 ;
  
  arg1 = *(ImFont **)&_swig_go_0; 
  arg2 = *(ImDrawList **)&_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  arg4 = *(ImVec2 **)&_swig_go_3; 
  arg5 = (ImU32)_swig_go_4; 
  arg6 = *(ImVec4 **)&_swig_go_5; 
  
  arg7 = (char *)malloc(_swig_go_6.n + 1);
  memcpy(arg7, _swig_go_6.p, _swig_go_6.n);
  arg7[_swig_go_6.n] = '\0';
  
  
  arg8 = (char *)malloc(_swig_go_7.n + 1);
  memcpy(arg8, _swig_go_7.p, _swig_go_7.n);
  arg8[_swig_go_7.n] = '\0';
  
  arg9 = (float)_swig_go_8; 
  
  ((ImFont const *)arg1)->RenderText(arg2,arg3,(ImVec2 const &)*arg4,arg5,(ImVec4 const &)*arg6,(char const *)arg7,(char const *)arg8,arg9);
  
  free(arg7); 
  free(arg8); 
}


void _wrap_ImFont_RenderText__SWIG_2_imgui_568d46c1e1b4102a(ImFont *_swig_go_0, ImDrawList *_swig_go_1, float _swig_go_2, ImVec2 *_swig_go_3, intgo _swig_go_4, ImVec4 *_swig_go_5, _gostring_ _swig_go_6, _gostring_ _swig_go_7) {
  ImFont *arg1 = (ImFont *) 0 ;
  ImDrawList *arg2 = (ImDrawList *) 0 ;
  float arg3 ;
  ImVec2 *arg4 = 0 ;
  ImU32 arg5 ;
  ImVec4 *arg6 = 0 ;
  char *arg7 = (char *) 0 ;
  char *arg8 = (char *) 0 ;
  
  arg1 = *(ImFont **)&_swig_go_0; 
  arg2 = *(ImDrawList **)&_swig_go_1; 
  arg3 = (float)_swig_go_2; 
  arg4 = *(ImVec2 **)&_swig_go_3; 
  arg5 = (ImU32)_swig_go_4; 
  arg6 = *(ImVec4 **)&_swig_go_5; 
  
  arg7 = (char *)malloc(_swig_go_6.n + 1);
  memcpy(arg7, _swig_go_6.p, _swig_go_6.n);
  arg7[_swig_go_6.n] = '\0';
  
  
  arg8 = (char *)malloc(_swig_go_7.n + 1);
  memcpy(arg8, _swig_go_7.p, _swig_go_7.n);
  arg8[_swig_go_7.n] = '\0';
  
  
  ((ImFont const *)arg1)->RenderText(arg2,arg3,(ImVec2 const &)*arg4,arg5,(ImVec4 const &)*arg6,(char const *)arg7,(char const *)arg8);
  
  free(arg7); 
  free(arg8); 
}


void _wrap_ImFont_BuildLookupTable_imgui_568d46c1e1b4102a(ImFont *_swig_go_0) {
  ImFont *arg1 = (ImFont *) 0 ;
  
  arg1 = *(ImFont **)&_swig_go_0; 
  
  (arg1)->BuildLookupTable();
  
}


void _wrap_ImFont_ClearOutputData_imgui_568d46c1e1b4102a(ImFont *_swig_go_0) {
  ImFont *arg1 = (ImFont *) 0 ;
  
  arg1 = *(ImFont **)&_swig_go_0; 
  
  (arg1)->ClearOutputData();
  
}


void _wrap_ImFont_GrowIndex_imgui_568d46c1e1b4102a(ImFont *_swig_go_0, intgo _swig_go_1) {
  ImFont *arg1 = (ImFont *) 0 ;
  int arg2 ;
  
  arg1 = *(ImFont **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  (arg1)->GrowIndex(arg2);
  
}


void _wrap_ImFont_AddGlyph_imgui_568d46c1e1b4102a(ImFont *_swig_go_0, ImFontConfig *_swig_go_1, short _swig_go_2, float _swig_go_3, float _swig_go_4, float _swig_go_5, float _swig_go_6, float _swig_go_7, float _swig_go_8, float _swig_go_9, float _swig_go_10, float _swig_go_11) {
  ImFont *arg1 = (ImFont *) 0 ;
  ImFontConfig *arg2 = (ImFontConfig *) 0 ;
  ImWchar arg3 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  float arg7 ;
  float arg8 ;
  float arg9 ;
  float arg10 ;
  float arg11 ;
  float arg12 ;
  
  arg1 = *(ImFont **)&_swig_go_0; 
  arg2 = *(ImFontConfig **)&_swig_go_1; 
  arg3 = (ImWchar)_swig_go_2; 
  arg4 = (float)_swig_go_3; 
  arg5 = (float)_swig_go_4; 
  arg6 = (float)_swig_go_5; 
  arg7 = (float)_swig_go_6; 
  arg8 = (float)_swig_go_7; 
  arg9 = (float)_swig_go_8; 
  arg10 = (float)_swig_go_9; 
  arg11 = (float)_swig_go_10; 
  arg12 = (float)_swig_go_11; 
  
  (arg1)->AddGlyph((ImFontConfig const *)arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12);
  
}


void _wrap_ImFont_AddRemapChar__SWIG_0_imgui_568d46c1e1b4102a(ImFont *_swig_go_0, short _swig_go_1, short _swig_go_2, bool _swig_go_3) {
  ImFont *arg1 = (ImFont *) 0 ;
  ImWchar arg2 ;
  ImWchar arg3 ;
  bool arg4 ;
  
  arg1 = *(ImFont **)&_swig_go_0; 
  arg2 = (ImWchar)_swig_go_1; 
  arg3 = (ImWchar)_swig_go_2; 
  arg4 = (bool)_swig_go_3; 
  
  (arg1)->AddRemapChar(arg2,arg3,arg4);
  
}


void _wrap_ImFont_AddRemapChar__SWIG_1_imgui_568d46c1e1b4102a(ImFont *_swig_go_0, short _swig_go_1, short _swig_go_2) {
  ImFont *arg1 = (ImFont *) 0 ;
  ImWchar arg2 ;
  ImWchar arg3 ;
  
  arg1 = *(ImFont **)&_swig_go_0; 
  arg2 = (ImWchar)_swig_go_1; 
  arg3 = (ImWchar)_swig_go_2; 
  
  (arg1)->AddRemapChar(arg2,arg3);
  
}


void _wrap_ImFont_SetGlyphVisible_imgui_568d46c1e1b4102a(ImFont *_swig_go_0, short _swig_go_1, bool _swig_go_2) {
  ImFont *arg1 = (ImFont *) 0 ;
  ImWchar arg2 ;
  bool arg3 ;
  
  arg1 = *(ImFont **)&_swig_go_0; 
  arg2 = (ImWchar)_swig_go_1; 
  arg3 = (bool)_swig_go_2; 
  
  (arg1)->SetGlyphVisible(arg2,arg3);
  
}


bool _wrap_ImFont_IsGlyphRangeUnused_imgui_568d46c1e1b4102a(ImFont *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2) {
  ImFont *arg1 = (ImFont *) 0 ;
  unsigned int arg2 ;
  unsigned int arg3 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ImFont **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  arg3 = (unsigned int)_swig_go_2; 
  
  result = (bool)(arg1)->IsGlyphRangeUnused(arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiViewportFlags_None_imgui_568d46c1e1b4102a() {
  ImGuiViewportFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiViewportFlags_None;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiViewportFlags_IsPlatformWindow_imgui_568d46c1e1b4102a() {
  ImGuiViewportFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiViewportFlags_IsPlatformWindow;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiViewportFlags_IsPlatformMonitor_imgui_568d46c1e1b4102a() {
  ImGuiViewportFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiViewportFlags_IsPlatformMonitor;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_ImGuiViewportFlags_OwnedByApp_imgui_568d46c1e1b4102a() {
  ImGuiViewportFlags_ result;
  intgo _swig_go_result;
  
  
  result = ImGuiViewportFlags_OwnedByApp;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


void _wrap_ImGuiViewport_ID_set_imgui_568d46c1e1b4102a(ImGuiViewport *_swig_go_0, intgo _swig_go_1) {
  ImGuiViewport *arg1 = (ImGuiViewport *) 0 ;
  ImGuiID arg2 ;
  
  arg1 = *(ImGuiViewport **)&_swig_go_0; 
  arg2 = (ImGuiID)_swig_go_1; 
  
  if (arg1) (arg1)->ID = arg2;
  
}


intgo _wrap_ImGuiViewport_ID_get_imgui_568d46c1e1b4102a(ImGuiViewport *_swig_go_0) {
  ImGuiViewport *arg1 = (ImGuiViewport *) 0 ;
  ImGuiID result;
  intgo _swig_go_result;
  
  arg1 = *(ImGuiViewport **)&_swig_go_0; 
  
  result = (ImGuiID) ((arg1)->ID);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiViewport_Flags_set_imgui_568d46c1e1b4102a(ImGuiViewport *_swig_go_0, intgo _swig_go_1) {
  ImGuiViewport *arg1 = (ImGuiViewport *) 0 ;
  ImGuiViewportFlags arg2 ;
  
  arg1 = *(ImGuiViewport **)&_swig_go_0; 
  arg2 = (ImGuiViewportFlags)_swig_go_1; 
  
  if (arg1) (arg1)->Flags = arg2;
  
}


intgo _wrap_ImGuiViewport_Flags_get_imgui_568d46c1e1b4102a(ImGuiViewport *_swig_go_0) {
  ImGuiViewport *arg1 = (ImGuiViewport *) 0 ;
  ImGuiViewportFlags result;
  intgo _swig_go_result;
  
  arg1 = *(ImGuiViewport **)&_swig_go_0; 
  
  result = (ImGuiViewportFlags) ((arg1)->Flags);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiViewport_Pos_set_imgui_568d46c1e1b4102a(ImGuiViewport *_swig_go_0, ImVec2 *_swig_go_1) {
  ImGuiViewport *arg1 = (ImGuiViewport *) 0 ;
  ImVec2 *arg2 = (ImVec2 *) 0 ;
  
  arg1 = *(ImGuiViewport **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  
  if (arg1) (arg1)->Pos = *arg2;
  
}


ImVec2 *_wrap_ImGuiViewport_Pos_get_imgui_568d46c1e1b4102a(ImGuiViewport *_swig_go_0) {
  ImGuiViewport *arg1 = (ImGuiViewport *) 0 ;
  ImVec2 *result = 0 ;
  ImVec2 *_swig_go_result;
  
  arg1 = *(ImGuiViewport **)&_swig_go_0; 
  
  result = (ImVec2 *)& ((arg1)->Pos);
  *(ImVec2 **)&_swig_go_result = (ImVec2 *)result; 
  return _swig_go_result;
}


void _wrap_ImGuiViewport_Size_set_imgui_568d46c1e1b4102a(ImGuiViewport *_swig_go_0, ImVec2 *_swig_go_1) {
  ImGuiViewport *arg1 = (ImGuiViewport *) 0 ;
  ImVec2 *arg2 = (ImVec2 *) 0 ;
  
  arg1 = *(ImGuiViewport **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  
  if (arg1) (arg1)->Size = *arg2;
  
}


ImVec2 *_wrap_ImGuiViewport_Size_get_imgui_568d46c1e1b4102a(ImGuiViewport *_swig_go_0) {
  ImGuiViewport *arg1 = (ImGuiViewport *) 0 ;
  ImVec2 *result = 0 ;
  ImVec2 *_swig_go_result;
  
  arg1 = *(ImGuiViewport **)&_swig_go_0; 
  
  result = (ImVec2 *)& ((arg1)->Size);
  *(ImVec2 **)&_swig_go_result = (ImVec2 *)result; 
  return _swig_go_result;
}


void _wrap_ImGuiViewport_WorkPos_set_imgui_568d46c1e1b4102a(ImGuiViewport *_swig_go_0, ImVec2 *_swig_go_1) {
  ImGuiViewport *arg1 = (ImGuiViewport *) 0 ;
  ImVec2 *arg2 = (ImVec2 *) 0 ;
  
  arg1 = *(ImGuiViewport **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  
  if (arg1) (arg1)->WorkPos = *arg2;
  
}


ImVec2 *_wrap_ImGuiViewport_WorkPos_get_imgui_568d46c1e1b4102a(ImGuiViewport *_swig_go_0) {
  ImGuiViewport *arg1 = (ImGuiViewport *) 0 ;
  ImVec2 *result = 0 ;
  ImVec2 *_swig_go_result;
  
  arg1 = *(ImGuiViewport **)&_swig_go_0; 
  
  result = (ImVec2 *)& ((arg1)->WorkPos);
  *(ImVec2 **)&_swig_go_result = (ImVec2 *)result; 
  return _swig_go_result;
}


void _wrap_ImGuiViewport_WorkSize_set_imgui_568d46c1e1b4102a(ImGuiViewport *_swig_go_0, ImVec2 *_swig_go_1) {
  ImGuiViewport *arg1 = (ImGuiViewport *) 0 ;
  ImVec2 *arg2 = (ImVec2 *) 0 ;
  
  arg1 = *(ImGuiViewport **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  
  if (arg1) (arg1)->WorkSize = *arg2;
  
}


ImVec2 *_wrap_ImGuiViewport_WorkSize_get_imgui_568d46c1e1b4102a(ImGuiViewport *_swig_go_0) {
  ImGuiViewport *arg1 = (ImGuiViewport *) 0 ;
  ImVec2 *result = 0 ;
  ImVec2 *_swig_go_result;
  
  arg1 = *(ImGuiViewport **)&_swig_go_0; 
  
  result = (ImVec2 *)& ((arg1)->WorkSize);
  *(ImVec2 **)&_swig_go_result = (ImVec2 *)result; 
  return _swig_go_result;
}


void _wrap_ImGuiViewport_PlatformHandle_set_imgui_568d46c1e1b4102a(ImGuiViewport *_swig_go_0, void *_swig_go_1) {
  ImGuiViewport *arg1 = (ImGuiViewport *) 0 ;
  void *arg2 = (void *) 0 ;
  
  arg1 = *(ImGuiViewport **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  if (arg1) (arg1)->PlatformHandle = arg2;
  
}


void *_wrap_ImGuiViewport_PlatformHandle_get_imgui_568d46c1e1b4102a(ImGuiViewport *_swig_go_0) {
  ImGuiViewport *arg1 = (ImGuiViewport *) 0 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = *(ImGuiViewport **)&_swig_go_0; 
  
  result = (void *) ((arg1)->PlatformHandle);
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


void _wrap_ImGuiViewport_PlatformHandleRaw_set_imgui_568d46c1e1b4102a(ImGuiViewport *_swig_go_0, void *_swig_go_1) {
  ImGuiViewport *arg1 = (ImGuiViewport *) 0 ;
  void *arg2 = (void *) 0 ;
  
  arg1 = *(ImGuiViewport **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  if (arg1) (arg1)->PlatformHandleRaw = arg2;
  
}


void *_wrap_ImGuiViewport_PlatformHandleRaw_get_imgui_568d46c1e1b4102a(ImGuiViewport *_swig_go_0) {
  ImGuiViewport *arg1 = (ImGuiViewport *) 0 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = *(ImGuiViewport **)&_swig_go_0; 
  
  result = (void *) ((arg1)->PlatformHandleRaw);
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


ImGuiViewport *_wrap_new_ImGuiViewport_imgui_568d46c1e1b4102a() {
  ImGuiViewport *result = 0 ;
  ImGuiViewport *_swig_go_result;
  
  
  result = (ImGuiViewport *)new ImGuiViewport();
  *(ImGuiViewport **)&_swig_go_result = (ImGuiViewport *)result; 
  return _swig_go_result;
}


ImVec2 *_wrap_ImGuiViewport_GetCenter_imgui_568d46c1e1b4102a(ImGuiViewport *_swig_go_0) {
  ImGuiViewport *arg1 = (ImGuiViewport *) 0 ;
  ImVec2 result;
  ImVec2 *_swig_go_result;
  
  arg1 = *(ImGuiViewport **)&_swig_go_0; 
  
  result = ((ImGuiViewport const *)arg1)->GetCenter();
  *(ImVec2 **)&_swig_go_result = new ImVec2(result); 
  return _swig_go_result;
}


ImVec2 *_wrap_ImGuiViewport_GetWorkCenter_imgui_568d46c1e1b4102a(ImGuiViewport *_swig_go_0) {
  ImGuiViewport *arg1 = (ImGuiViewport *) 0 ;
  ImVec2 result;
  ImVec2 *_swig_go_result;
  
  arg1 = *(ImGuiViewport **)&_swig_go_0; 
  
  result = ((ImGuiViewport const *)arg1)->GetWorkCenter();
  *(ImVec2 **)&_swig_go_result = new ImVec2(result); 
  return _swig_go_result;
}


void _wrap_delete_ImGuiViewport_imgui_568d46c1e1b4102a(ImGuiViewport *_swig_go_0) {
  ImGuiViewport *arg1 = (ImGuiViewport *) 0 ;
  
  arg1 = *(ImGuiViewport **)&_swig_go_0; 
  
  delete arg1;
  
}


ImGuiPlatformIO *_wrap_new_ImGuiPlatformIO_imgui_568d46c1e1b4102a() {
  ImGuiPlatformIO *result = 0 ;
  ImGuiPlatformIO *_swig_go_result;
  
  
  result = (ImGuiPlatformIO *)new ImGuiPlatformIO();
  *(ImGuiPlatformIO **)&_swig_go_result = (ImGuiPlatformIO *)result; 
  return _swig_go_result;
}


void _wrap_ImGuiPlatformIO_Platform_GetClipboardTextFn_set_imgui_568d46c1e1b4102a(ImGuiPlatformIO *_swig_go_0, void* _swig_go_1) {
  ImGuiPlatformIO *arg1 = (ImGuiPlatformIO *) 0 ;
  char *(*arg2)(ImGuiContext *) = (char *(*)(ImGuiContext *)) 0 ;
  
  arg1 = *(ImGuiPlatformIO **)&_swig_go_0; 
  arg2 = *(char *(**)(ImGuiContext *))&_swig_go_1; 
  
  if (arg1) (arg1)->Platform_GetClipboardTextFn = (char const *(*)(ImGuiContext *))arg2;
  
}


void* _wrap_ImGuiPlatformIO_Platform_GetClipboardTextFn_get_imgui_568d46c1e1b4102a(ImGuiPlatformIO *_swig_go_0) {
  ImGuiPlatformIO *arg1 = (ImGuiPlatformIO *) 0 ;
  char *(*result)(ImGuiContext *) = 0 ;
  void* _swig_go_result;
  
  arg1 = *(ImGuiPlatformIO **)&_swig_go_0; 
  
  result = (char *(*)(ImGuiContext *)) ((arg1)->Platform_GetClipboardTextFn);
  *(char *(**)(ImGuiContext *))&_swig_go_result = (char *(*)(ImGuiContext *))result; 
  return _swig_go_result;
}


void _wrap_ImGuiPlatformIO_Platform_SetClipboardTextFn_set_imgui_568d46c1e1b4102a(ImGuiPlatformIO *_swig_go_0, void* _swig_go_1) {
  ImGuiPlatformIO *arg1 = (ImGuiPlatformIO *) 0 ;
  void (*arg2)(ImGuiContext *,char const *) = (void (*)(ImGuiContext *,char const *)) 0 ;
  
  arg1 = *(ImGuiPlatformIO **)&_swig_go_0; 
  arg2 = *(void (**)(ImGuiContext *,char const *))&_swig_go_1; 
  
  if (arg1) (arg1)->Platform_SetClipboardTextFn = arg2;
  
}


void* _wrap_ImGuiPlatformIO_Platform_SetClipboardTextFn_get_imgui_568d46c1e1b4102a(ImGuiPlatformIO *_swig_go_0) {
  ImGuiPlatformIO *arg1 = (ImGuiPlatformIO *) 0 ;
  void (*result)(ImGuiContext *,char const *) = 0 ;
  void* _swig_go_result;
  
  arg1 = *(ImGuiPlatformIO **)&_swig_go_0; 
  
  result = (void (*)(ImGuiContext *,char const *)) ((arg1)->Platform_SetClipboardTextFn);
  *(void (**)(ImGuiContext *,char const *))&_swig_go_result = (void (*)(ImGuiContext *,char const *))result; 
  return _swig_go_result;
}


void _wrap_ImGuiPlatformIO_Platform_ClipboardUserData_set_imgui_568d46c1e1b4102a(ImGuiPlatformIO *_swig_go_0, void *_swig_go_1) {
  ImGuiPlatformIO *arg1 = (ImGuiPlatformIO *) 0 ;
  void *arg2 = (void *) 0 ;
  
  arg1 = *(ImGuiPlatformIO **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  if (arg1) (arg1)->Platform_ClipboardUserData = arg2;
  
}


void *_wrap_ImGuiPlatformIO_Platform_ClipboardUserData_get_imgui_568d46c1e1b4102a(ImGuiPlatformIO *_swig_go_0) {
  ImGuiPlatformIO *arg1 = (ImGuiPlatformIO *) 0 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = *(ImGuiPlatformIO **)&_swig_go_0; 
  
  result = (void *) ((arg1)->Platform_ClipboardUserData);
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


void _wrap_ImGuiPlatformIO_Platform_OpenInShellFn_set_imgui_568d46c1e1b4102a(ImGuiPlatformIO *_swig_go_0, void* _swig_go_1) {
  ImGuiPlatformIO *arg1 = (ImGuiPlatformIO *) 0 ;
  bool (*arg2)(ImGuiContext *,char const *) = (bool (*)(ImGuiContext *,char const *)) 0 ;
  
  arg1 = *(ImGuiPlatformIO **)&_swig_go_0; 
  arg2 = *(bool (**)(ImGuiContext *,char const *))&_swig_go_1; 
  
  if (arg1) (arg1)->Platform_OpenInShellFn = arg2;
  
}


void* _wrap_ImGuiPlatformIO_Platform_OpenInShellFn_get_imgui_568d46c1e1b4102a(ImGuiPlatformIO *_swig_go_0) {
  ImGuiPlatformIO *arg1 = (ImGuiPlatformIO *) 0 ;
  bool (*result)(ImGuiContext *,char const *) = 0 ;
  void* _swig_go_result;
  
  arg1 = *(ImGuiPlatformIO **)&_swig_go_0; 
  
  result = (bool (*)(ImGuiContext *,char const *)) ((arg1)->Platform_OpenInShellFn);
  *(bool (**)(ImGuiContext *,char const *))&_swig_go_result = (bool (*)(ImGuiContext *,char const *))result; 
  return _swig_go_result;
}


void _wrap_ImGuiPlatformIO_Platform_OpenInShellUserData_set_imgui_568d46c1e1b4102a(ImGuiPlatformIO *_swig_go_0, void *_swig_go_1) {
  ImGuiPlatformIO *arg1 = (ImGuiPlatformIO *) 0 ;
  void *arg2 = (void *) 0 ;
  
  arg1 = *(ImGuiPlatformIO **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  if (arg1) (arg1)->Platform_OpenInShellUserData = arg2;
  
}


void *_wrap_ImGuiPlatformIO_Platform_OpenInShellUserData_get_imgui_568d46c1e1b4102a(ImGuiPlatformIO *_swig_go_0) {
  ImGuiPlatformIO *arg1 = (ImGuiPlatformIO *) 0 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = *(ImGuiPlatformIO **)&_swig_go_0; 
  
  result = (void *) ((arg1)->Platform_OpenInShellUserData);
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


void _wrap_ImGuiPlatformIO_Platform_SetImeDataFn_set_imgui_568d46c1e1b4102a(ImGuiPlatformIO *_swig_go_0, void* _swig_go_1) {
  ImGuiPlatformIO *arg1 = (ImGuiPlatformIO *) 0 ;
  void (*arg2)(ImGuiContext *,ImGuiViewport *,ImGuiPlatformImeData *) = (void (*)(ImGuiContext *,ImGuiViewport *,ImGuiPlatformImeData *)) 0 ;
  
  arg1 = *(ImGuiPlatformIO **)&_swig_go_0; 
  arg2 = *(void (**)(ImGuiContext *,ImGuiViewport *,ImGuiPlatformImeData *))&_swig_go_1; 
  
  if (arg1) (arg1)->Platform_SetImeDataFn = arg2;
  
}


void* _wrap_ImGuiPlatformIO_Platform_SetImeDataFn_get_imgui_568d46c1e1b4102a(ImGuiPlatformIO *_swig_go_0) {
  ImGuiPlatformIO *arg1 = (ImGuiPlatformIO *) 0 ;
  void (*result)(ImGuiContext *,ImGuiViewport *,ImGuiPlatformImeData *) = 0 ;
  void* _swig_go_result;
  
  arg1 = *(ImGuiPlatformIO **)&_swig_go_0; 
  
  result = (void (*)(ImGuiContext *,ImGuiViewport *,ImGuiPlatformImeData *)) ((arg1)->Platform_SetImeDataFn);
  *(void (**)(ImGuiContext *,ImGuiViewport *,ImGuiPlatformImeData *))&_swig_go_result = (void (*)(ImGuiContext *,ImGuiViewport *,ImGuiPlatformImeData *))result; 
  return _swig_go_result;
}


void _wrap_ImGuiPlatformIO_Platform_ImeUserData_set_imgui_568d46c1e1b4102a(ImGuiPlatformIO *_swig_go_0, void *_swig_go_1) {
  ImGuiPlatformIO *arg1 = (ImGuiPlatformIO *) 0 ;
  void *arg2 = (void *) 0 ;
  
  arg1 = *(ImGuiPlatformIO **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  if (arg1) (arg1)->Platform_ImeUserData = arg2;
  
}


void *_wrap_ImGuiPlatformIO_Platform_ImeUserData_get_imgui_568d46c1e1b4102a(ImGuiPlatformIO *_swig_go_0) {
  ImGuiPlatformIO *arg1 = (ImGuiPlatformIO *) 0 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = *(ImGuiPlatformIO **)&_swig_go_0; 
  
  result = (void *) ((arg1)->Platform_ImeUserData);
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


void _wrap_ImGuiPlatformIO_Platform_LocaleDecimalPoint_set_imgui_568d46c1e1b4102a(ImGuiPlatformIO *_swig_go_0, short _swig_go_1) {
  ImGuiPlatformIO *arg1 = (ImGuiPlatformIO *) 0 ;
  ImWchar arg2 ;
  
  arg1 = *(ImGuiPlatformIO **)&_swig_go_0; 
  arg2 = (ImWchar)_swig_go_1; 
  
  if (arg1) (arg1)->Platform_LocaleDecimalPoint = arg2;
  
}


short _wrap_ImGuiPlatformIO_Platform_LocaleDecimalPoint_get_imgui_568d46c1e1b4102a(ImGuiPlatformIO *_swig_go_0) {
  ImGuiPlatformIO *arg1 = (ImGuiPlatformIO *) 0 ;
  ImWchar result;
  short _swig_go_result;
  
  arg1 = *(ImGuiPlatformIO **)&_swig_go_0; 
  
  result = (ImWchar) ((arg1)->Platform_LocaleDecimalPoint);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_delete_ImGuiPlatformIO_imgui_568d46c1e1b4102a(ImGuiPlatformIO *_swig_go_0) {
  ImGuiPlatformIO *arg1 = (ImGuiPlatformIO *) 0 ;
  
  arg1 = *(ImGuiPlatformIO **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_ImGuiPlatformImeData_WantVisible_set_imgui_568d46c1e1b4102a(ImGuiPlatformImeData *_swig_go_0, bool _swig_go_1) {
  ImGuiPlatformImeData *arg1 = (ImGuiPlatformImeData *) 0 ;
  bool arg2 ;
  
  arg1 = *(ImGuiPlatformImeData **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->WantVisible = arg2;
  
}


bool _wrap_ImGuiPlatformImeData_WantVisible_get_imgui_568d46c1e1b4102a(ImGuiPlatformImeData *_swig_go_0) {
  ImGuiPlatformImeData *arg1 = (ImGuiPlatformImeData *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(ImGuiPlatformImeData **)&_swig_go_0; 
  
  result = (bool) ((arg1)->WantVisible);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGuiPlatformImeData_InputPos_set_imgui_568d46c1e1b4102a(ImGuiPlatformImeData *_swig_go_0, ImVec2 *_swig_go_1) {
  ImGuiPlatformImeData *arg1 = (ImGuiPlatformImeData *) 0 ;
  ImVec2 *arg2 = (ImVec2 *) 0 ;
  
  arg1 = *(ImGuiPlatformImeData **)&_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  
  if (arg1) (arg1)->InputPos = *arg2;
  
}


ImVec2 *_wrap_ImGuiPlatformImeData_InputPos_get_imgui_568d46c1e1b4102a(ImGuiPlatformImeData *_swig_go_0) {
  ImGuiPlatformImeData *arg1 = (ImGuiPlatformImeData *) 0 ;
  ImVec2 *result = 0 ;
  ImVec2 *_swig_go_result;
  
  arg1 = *(ImGuiPlatformImeData **)&_swig_go_0; 
  
  result = (ImVec2 *)& ((arg1)->InputPos);
  *(ImVec2 **)&_swig_go_result = (ImVec2 *)result; 
  return _swig_go_result;
}


void _wrap_ImGuiPlatformImeData_InputLineHeight_set_imgui_568d46c1e1b4102a(ImGuiPlatformImeData *_swig_go_0, float _swig_go_1) {
  ImGuiPlatformImeData *arg1 = (ImGuiPlatformImeData *) 0 ;
  float arg2 ;
  
  arg1 = *(ImGuiPlatformImeData **)&_swig_go_0; 
  arg2 = (float)_swig_go_1; 
  
  if (arg1) (arg1)->InputLineHeight = arg2;
  
}


float _wrap_ImGuiPlatformImeData_InputLineHeight_get_imgui_568d46c1e1b4102a(ImGuiPlatformImeData *_swig_go_0) {
  ImGuiPlatformImeData *arg1 = (ImGuiPlatformImeData *) 0 ;
  float result;
  float _swig_go_result;
  
  arg1 = *(ImGuiPlatformImeData **)&_swig_go_0; 
  
  result = (float) ((arg1)->InputLineHeight);
  _swig_go_result = result; 
  return _swig_go_result;
}


ImGuiPlatformImeData *_wrap_new_ImGuiPlatformImeData_imgui_568d46c1e1b4102a() {
  ImGuiPlatformImeData *result = 0 ;
  ImGuiPlatformImeData *_swig_go_result;
  
  
  result = (ImGuiPlatformImeData *)new ImGuiPlatformImeData();
  *(ImGuiPlatformImeData **)&_swig_go_result = (ImGuiPlatformImeData *)result; 
  return _swig_go_result;
}


void _wrap_delete_ImGuiPlatformImeData_imgui_568d46c1e1b4102a(ImGuiPlatformImeData *_swig_go_0) {
  ImGuiPlatformImeData *arg1 = (ImGuiPlatformImeData *) 0 ;
  
  arg1 = *(ImGuiPlatformImeData **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_PushButtonRepeat_imgui_568d46c1e1b4102a(bool _swig_go_0) {
  bool arg1 ;
  
  arg1 = (bool)_swig_go_0; 
  
  ImGui::PushButtonRepeat(arg1);
  
}


void _wrap_PopButtonRepeat_imgui_568d46c1e1b4102a() {
  ImGui::PopButtonRepeat();
  
}


void _wrap_PushTabStop_imgui_568d46c1e1b4102a(bool _swig_go_0) {
  bool arg1 ;
  
  arg1 = (bool)_swig_go_0; 
  
  ImGui::PushTabStop(arg1);
  
}


void _wrap_PopTabStop_imgui_568d46c1e1b4102a() {
  ImGui::PopTabStop();
  
}


ImVec2 *_wrap_GetContentRegionMax_imgui_568d46c1e1b4102a() {
  ImVec2 result;
  ImVec2 *_swig_go_result;
  
  
  result = ImGui::GetContentRegionMax();
  *(ImVec2 **)&_swig_go_result = new ImVec2(result); 
  return _swig_go_result;
}


ImVec2 *_wrap_GetWindowContentRegionMin_imgui_568d46c1e1b4102a() {
  ImVec2 result;
  ImVec2 *_swig_go_result;
  
  
  result = ImGui::GetWindowContentRegionMin();
  *(ImVec2 **)&_swig_go_result = new ImVec2(result); 
  return _swig_go_result;
}


ImVec2 *_wrap_GetWindowContentRegionMax_imgui_568d46c1e1b4102a() {
  ImVec2 result;
  ImVec2 *_swig_go_result;
  
  
  result = ImGui::GetWindowContentRegionMax();
  *(ImVec2 **)&_swig_go_result = new ImVec2(result); 
  return _swig_go_result;
}


bool _wrap_BeginChildFrame__SWIG_0_imgui_568d46c1e1b4102a(intgo _swig_go_0, ImVec2 *_swig_go_1, intgo _swig_go_2) {
  ImGuiID arg1 ;
  ImVec2 *arg2 = 0 ;
  ImGuiWindowFlags arg3 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = (ImGuiID)_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  arg3 = (ImGuiWindowFlags)_swig_go_2; 
  
  result = (bool)ImGui::BeginChildFrame(arg1,(ImVec2 const &)*arg2,arg3);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_BeginChildFrame__SWIG_1_imgui_568d46c1e1b4102a(intgo _swig_go_0, ImVec2 *_swig_go_1) {
  ImGuiID arg1 ;
  ImVec2 *arg2 = 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = (ImGuiID)_swig_go_0; 
  arg2 = *(ImVec2 **)&_swig_go_1; 
  
  result = (bool)ImGui::BeginChildFrame(arg1,(ImVec2 const &)*arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_EndChildFrame_imgui_568d46c1e1b4102a() {
  ImGui::EndChildFrame();
  
}


void _wrap_ShowStackToolWindow__SWIG_0_imgui_568d46c1e1b4102a(bool *_swig_go_0) {
  bool *arg1 = (bool *) 0 ;
  
  arg1 = *(bool **)&_swig_go_0; 
  
  ImGui::ShowStackToolWindow(arg1);
  
}


void _wrap_ShowStackToolWindow__SWIG_1_imgui_568d46c1e1b4102a() {
  ImGui::ShowStackToolWindow();
  
}


bool _wrap_Combo__SWIG_6_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo *_swig_go_1, void* _swig_go_2, void *_swig_go_3, intgo _swig_go_4, intgo _swig_go_5) {
  char *arg1 = (char *) 0 ;
  int *arg2 = (int *) 0 ;
  bool (*arg3)(void *,int,char const **) = (bool (*)(void *,int,char const **)) 0 ;
  void *arg4 = (void *) 0 ;
  int arg5 ;
  int arg6 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(int **)&_swig_go_1; 
  arg3 = *(bool (**)(void *,int,char const **))&_swig_go_2; 
  arg4 = *(void **)&_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  
  result = (bool)ImGui::Combo((char const *)arg1,arg2,arg3,arg4,arg5,arg6);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_Combo__SWIG_7_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo *_swig_go_1, void* _swig_go_2, void *_swig_go_3, intgo _swig_go_4) {
  char *arg1 = (char *) 0 ;
  int *arg2 = (int *) 0 ;
  bool (*arg3)(void *,int,char const **) = (bool (*)(void *,int,char const **)) 0 ;
  void *arg4 = (void *) 0 ;
  int arg5 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(int **)&_swig_go_1; 
  arg3 = *(bool (**)(void *,int,char const **))&_swig_go_2; 
  arg4 = *(void **)&_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  result = (bool)ImGui::Combo((char const *)arg1,arg2,arg3,arg4,arg5);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_ListBox__SWIG_4_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo *_swig_go_1, void* _swig_go_2, void *_swig_go_3, intgo _swig_go_4, intgo _swig_go_5) {
  char *arg1 = (char *) 0 ;
  int *arg2 = (int *) 0 ;
  bool (*arg3)(void *,int,char const **) = (bool (*)(void *,int,char const **)) 0 ;
  void *arg4 = (void *) 0 ;
  int arg5 ;
  int arg6 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(int **)&_swig_go_1; 
  arg3 = *(bool (**)(void *,int,char const **))&_swig_go_2; 
  arg4 = *(void **)&_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  arg6 = (int)_swig_go_5; 
  
  result = (bool)ImGui::ListBox((char const *)arg1,arg2,arg3,arg4,arg5,arg6);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_ListBox__SWIG_5_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0, intgo *_swig_go_1, void* _swig_go_2, void *_swig_go_3, intgo _swig_go_4) {
  char *arg1 = (char *) 0 ;
  int *arg2 = (int *) 0 ;
  bool (*arg3)(void *,int,char const **) = (bool (*)(void *,int,char const **)) 0 ;
  void *arg4 = (void *) 0 ;
  int arg5 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  arg2 = *(int **)&_swig_go_1; 
  arg3 = *(bool (**)(void *,int,char const **))&_swig_go_2; 
  arg4 = *(void **)&_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  result = (bool)ImGui::ListBox((char const *)arg1,arg2,arg3,arg4,arg5);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


void _wrap_SetItemAllowOverlap_imgui_568d46c1e1b4102a() {
  ImGui::SetItemAllowOverlap();
  
}


void _wrap_PushAllowKeyboardFocus_imgui_568d46c1e1b4102a(bool _swig_go_0) {
  bool arg1 ;
  
  arg1 = (bool)_swig_go_0; 
  
  ImGui::PushAllowKeyboardFocus(arg1);
  
}


void _wrap_PopAllowKeyboardFocus_imgui_568d46c1e1b4102a() {
  ImGui::PopAllowKeyboardFocus();
  
}


intgo _wrap_GetKeyIndex_imgui_568d46c1e1b4102a(intgo _swig_go_0) {
  ImGuiKey arg1 ;
  ImGuiKey result;
  intgo _swig_go_result;
  
  arg1 = (ImGuiKey)_swig_go_0; 
  
  result = (ImGuiKey)ImGui::GetKeyIndex(arg1);
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


bool _wrap_ImGui_ImplOpenGL3_Init__SWIG_0_imgui_568d46c1e1b4102a(_gostring_ _swig_go_0) {
  char *arg1 = (char *) 0 ;
  bool result;
  bool _swig_go_result;
  
  
  arg1 = (char *)malloc(_swig_go_0.n + 1);
  memcpy(arg1, _swig_go_0.p, _swig_go_0.n);
  arg1[_swig_go_0.n] = '\0';
  
  
  result = (bool)ImGui_ImplOpenGL3_Init((char const *)arg1);
  _swig_go_result = result; 
  free(arg1); 
  return _swig_go_result;
}


bool _wrap_ImGui_ImplOpenGL3_Init__SWIG_1_imgui_568d46c1e1b4102a() {
  bool result;
  bool _swig_go_result;
  
  
  result = (bool)ImGui_ImplOpenGL3_Init();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGui_ImplOpenGL3_Shutdown_imgui_568d46c1e1b4102a() {
  ImGui_ImplOpenGL3_Shutdown();
  
}


void _wrap_ImGui_ImplOpenGL3_NewFrame_imgui_568d46c1e1b4102a() {
  ImGui_ImplOpenGL3_NewFrame();
  
}


void _wrap_ImGui_ImplOpenGL3_RenderDrawData_imgui_568d46c1e1b4102a(ImDrawData *_swig_go_0) {
  ImDrawData *arg1 = (ImDrawData *) 0 ;
  
  arg1 = *(ImDrawData **)&_swig_go_0; 
  
  ImGui_ImplOpenGL3_RenderDrawData(arg1);
  
}


bool _wrap_ImGui_ImplOpenGL3_CreateFontsTexture_imgui_568d46c1e1b4102a() {
  bool result;
  bool _swig_go_result;
  
  
  result = (bool)ImGui_ImplOpenGL3_CreateFontsTexture();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGui_ImplOpenGL3_DestroyFontsTexture_imgui_568d46c1e1b4102a() {
  ImGui_ImplOpenGL3_DestroyFontsTexture();
  
}


bool _wrap_ImGui_ImplOpenGL3_CreateDeviceObjects_imgui_568d46c1e1b4102a() {
  bool result;
  bool _swig_go_result;
  
  
  result = (bool)ImGui_ImplOpenGL3_CreateDeviceObjects();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGui_ImplOpenGL3_DestroyDeviceObjects_imgui_568d46c1e1b4102a() {
  ImGui_ImplOpenGL3_DestroyDeviceObjects();
  
}


bool _wrap_ImGui_ImplGlfw_InitForOpenGL_imgui_568d46c1e1b4102a(GLFWwindow *_swig_go_0, bool _swig_go_1) {
  GLFWwindow *arg1 = (GLFWwindow *) 0 ;
  bool arg2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(GLFWwindow **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  result = (bool)ImGui_ImplGlfw_InitForOpenGL(arg1,arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ImGui_ImplGlfw_InitForVulkan_imgui_568d46c1e1b4102a(GLFWwindow *_swig_go_0, bool _swig_go_1) {
  GLFWwindow *arg1 = (GLFWwindow *) 0 ;
  bool arg2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(GLFWwindow **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  result = (bool)ImGui_ImplGlfw_InitForVulkan(arg1,arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_ImGui_ImplGlfw_InitForOther_imgui_568d46c1e1b4102a(GLFWwindow *_swig_go_0, bool _swig_go_1) {
  GLFWwindow *arg1 = (GLFWwindow *) 0 ;
  bool arg2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(GLFWwindow **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  result = (bool)ImGui_ImplGlfw_InitForOther(arg1,arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_ImGui_ImplGlfw_Shutdown_imgui_568d46c1e1b4102a() {
  ImGui_ImplGlfw_Shutdown();
  
}


void _wrap_ImGui_ImplGlfw_NewFrame_imgui_568d46c1e1b4102a() {
  ImGui_ImplGlfw_NewFrame();
  
}


void _wrap_ImGui_ImplGlfw_InstallCallbacks_imgui_568d46c1e1b4102a(GLFWwindow *_swig_go_0) {
  GLFWwindow *arg1 = (GLFWwindow *) 0 ;
  
  arg1 = *(GLFWwindow **)&_swig_go_0; 
  
  ImGui_ImplGlfw_InstallCallbacks(arg1);
  
}


void _wrap_ImGui_ImplGlfw_RestoreCallbacks_imgui_568d46c1e1b4102a(GLFWwindow *_swig_go_0) {
  GLFWwindow *arg1 = (GLFWwindow *) 0 ;
  
  arg1 = *(GLFWwindow **)&_swig_go_0; 
  
  ImGui_ImplGlfw_RestoreCallbacks(arg1);
  
}


void _wrap_ImGui_ImplGlfw_SetCallbacksChainForAllWindows_imgui_568d46c1e1b4102a(bool _swig_go_0) {
  bool arg1 ;
  
  arg1 = (bool)_swig_go_0; 
  
  ImGui_ImplGlfw_SetCallbacksChainForAllWindows(arg1);
  
}


void _wrap_ImGui_ImplGlfw_WindowFocusCallback_imgui_568d46c1e1b4102a(GLFWwindow *_swig_go_0, intgo _swig_go_1) {
  GLFWwindow *arg1 = (GLFWwindow *) 0 ;
  int arg2 ;
  
  arg1 = *(GLFWwindow **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  ImGui_ImplGlfw_WindowFocusCallback(arg1,arg2);
  
}


void _wrap_ImGui_ImplGlfw_CursorEnterCallback_imgui_568d46c1e1b4102a(GLFWwindow *_swig_go_0, intgo _swig_go_1) {
  GLFWwindow *arg1 = (GLFWwindow *) 0 ;
  int arg2 ;
  
  arg1 = *(GLFWwindow **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  ImGui_ImplGlfw_CursorEnterCallback(arg1,arg2);
  
}


void _wrap_ImGui_ImplGlfw_CursorPosCallback_imgui_568d46c1e1b4102a(GLFWwindow *_swig_go_0, double _swig_go_1, double _swig_go_2) {
  GLFWwindow *arg1 = (GLFWwindow *) 0 ;
  double arg2 ;
  double arg3 ;
  
  arg1 = *(GLFWwindow **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  
  ImGui_ImplGlfw_CursorPosCallback(arg1,arg2,arg3);
  
}


void _wrap_ImGui_ImplGlfw_MouseButtonCallback_imgui_568d46c1e1b4102a(GLFWwindow *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2, intgo _swig_go_3) {
  GLFWwindow *arg1 = (GLFWwindow *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  
  arg1 = *(GLFWwindow **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  
  ImGui_ImplGlfw_MouseButtonCallback(arg1,arg2,arg3,arg4);
  
}


void _wrap_ImGui_ImplGlfw_ScrollCallback_imgui_568d46c1e1b4102a(GLFWwindow *_swig_go_0, double _swig_go_1, double _swig_go_2) {
  GLFWwindow *arg1 = (GLFWwindow *) 0 ;
  double arg2 ;
  double arg3 ;
  
  arg1 = *(GLFWwindow **)&_swig_go_0; 
  arg2 = (double)_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  
  ImGui_ImplGlfw_ScrollCallback(arg1,arg2,arg3);
  
}


void _wrap_ImGui_ImplGlfw_KeyCallback_imgui_568d46c1e1b4102a(GLFWwindow *_swig_go_0, intgo _swig_go_1, intgo _swig_go_2, intgo _swig_go_3, intgo _swig_go_4) {
  GLFWwindow *arg1 = (GLFWwindow *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  
  arg1 = *(GLFWwindow **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  
  ImGui_ImplGlfw_KeyCallback(arg1,arg2,arg3,arg4,arg5);
  
}


void _wrap_ImGui_ImplGlfw_CharCallback_imgui_568d46c1e1b4102a(GLFWwindow *_swig_go_0, intgo _swig_go_1) {
  GLFWwindow *arg1 = (GLFWwindow *) 0 ;
  unsigned int arg2 ;
  
  arg1 = *(GLFWwindow **)&_swig_go_0; 
  arg2 = (unsigned int)_swig_go_1; 
  
  ImGui_ImplGlfw_CharCallback(arg1,arg2);
  
}


void _wrap_ImGui_ImplGlfw_MonitorCallback_imgui_568d46c1e1b4102a(GLFWmonitor *_swig_go_0, intgo _swig_go_1) {
  GLFWmonitor *arg1 = (GLFWmonitor *) 0 ;
  int arg2 ;
  
  arg1 = *(GLFWmonitor **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  ImGui_ImplGlfw_MonitorCallback(arg1,arg2);
  
}


void _wrap_ImGui_ImplGlfw_Sleep_imgui_568d46c1e1b4102a(intgo _swig_go_0) {
  int arg1 ;
  
  arg1 = (int)_swig_go_0; 
  
  ImGui_ImplGlfw_Sleep(arg1);
  
}


#ifdef __cplusplus
}
#endif

